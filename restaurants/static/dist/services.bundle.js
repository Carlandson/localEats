(()=>{"use strict";var __webpack_modules__={572:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('/* harmony import */ var _components_toast_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);\n/* harmony import */ var _utils_subpagesAPI_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(795);\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }\n\n\n\ndocument.addEventListener(\'DOMContentLoaded\', function () {\n  var _document$querySelect, _document$querySelect2, _document$getElementB;\n  var business = JSON.parse(document.getElementById(\'business\').textContent);\n  var formContainer = document.getElementById(\'service-form-container\');\n  var addButton = document.getElementById(\'add-service\');\n  var descriptionButton = document.getElementById(\'toggle-description-edit\');\n  var descriptionForm = document.getElementById(\'description-form\');\n  var descriptionDisplay = document.getElementById(\'description-display\');\n  descriptionButton === null || descriptionButton === void 0 || descriptionButton.addEventListener(\'click\', function () {\n    var descriptionHidden = descriptionForm.classList.contains(\'hidden\');\n    if (descriptionHidden) {\n      // Show form, hide display\n      descriptionForm.classList.remove(\'hidden\');\n      descriptionDisplay.classList.add(\'hidden\');\n      descriptionButton.textContent = \'Cancel\';\n      // Change button style to indicate cancel action\n      descriptionButton.classList.remove(\'bg-indigo-600\', \'hover:bg-indigo-700\');\n      descriptionButton.classList.add(\'bg-gray-500\', \'hover:bg-gray-600\');\n    } else {\n      // Hide form, show display\n      descriptionForm.classList.add(\'hidden\');\n      descriptionDisplay.classList.remove(\'hidden\');\n      descriptionButton.textContent = \'Edit Description\';\n      // Restore original button style\n      descriptionButton.classList.remove(\'bg-gray-500\', \'hover:bg-gray-600\');\n      descriptionButton.classList.add(\'bg-indigo-600\', \'hover:bg-indigo-700\');\n      // Optional: Reset form\n      var form = descriptionForm.querySelector(\'form\');\n      if (form) form.reset();\n    }\n  });\n  // Show/hide form handlers\n  addButton === null || addButton === void 0 || addButton.addEventListener(\'click\', function () {\n    var isHidden = formContainer.classList.contains(\'hidden\');\n    if (isHidden) {\n      // Show form\n      formContainer.classList.remove(\'hidden\');\n      addButton.textContent = \'Cancel\';\n      addButton.classList.remove(\'bg-emerald-500\', \'hover:bg-emerald-600\');\n      addButton.classList.add(\'bg-gray-500\', \'hover:bg-gray-600\');\n    } else {\n      formContainer.classList.add(\'hidden\');\n      addButton.textContent = \'Add New Service\';\n      addButton.classList.remove(\'bg-gray-500\', \'hover:bg-gray-600\');\n      addButton.classList.add(\'bg-emerald-500\', \'hover:bg-emerald-600\');\n      var form = formContainer.querySelector(\'form\');\n      if (form) form.reset();\n    }\n  });\n  (_document$querySelect = document.querySelector(\'.cancel-add\')) === null || _document$querySelect === void 0 || _document$querySelect.addEventListener(\'click\', function () {\n    formContainer.classList.add(\'hidden\');\n    addButton.style.display = \'block\';\n    document.getElementById(\'createService\').reset();\n  });\n  (_document$querySelect2 = document.querySelector(\'[data-section="save-description"]\')) === null || _document$querySelect2 === void 0 || _document$querySelect2.addEventListener(\'click\', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var descriptionInput, descriptionText, _descriptionDisplay;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          descriptionInput = document.getElementById(\'id_description\');\n          descriptionText = descriptionInput.value;\n          _context.prev = 2;\n          _context.next = 5;\n          return _utils_subpagesAPI_js__WEBPACK_IMPORTED_MODULE_0__/* .api */ .F.services.updateSettings(business, {\n            fieldName: \'description\',\n            description: descriptionText // Send the actual text value\n          });\n        case 5:\n          // Update the displayed description\n          _descriptionDisplay = document.getElementById(\'description-display\');\n          _descriptionDisplay.innerHTML = descriptionText ? descriptionText.replace(/\\n/g, \'<br>\') : \'<p class="text-gray-500 italic">No description added yet.</p>\';\n\n          // Hide form, show display\n          descriptionForm.classList.add(\'hidden\');\n          _descriptionDisplay.classList.remove(\'hidden\');\n\n          // Reset button\n          descriptionButton.textContent = \'Edit Description\';\n          descriptionButton.classList.remove(\'bg-gray-500\', \'hover:bg-gray-600\');\n          descriptionButton.classList.add(\'bg-indigo-600\', \'hover:bg-indigo-700\');\n          (0,_components_toast_js__WEBPACK_IMPORTED_MODULE_1__/* .showToast */ .P)(\'Changes saved successfully!\');\n          _context.next = 19;\n          break;\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context["catch"](2);\n          console.error(\'Error:\', _context.t0);\n          (0,_components_toast_js__WEBPACK_IMPORTED_MODULE_1__/* .showToast */ .P)(\'Failed to update setting. Please try again.\', \'error\');\n        case 19:\n        case "end":\n          return _context.stop();\n      }\n    }, _callee, null, [[2, 15]]);\n  })));\n\n  // Form submission\n  (_document$getElementB = document.getElementById(\'createService\')) === null || _document$getElementB === void 0 || _document$getElementB.addEventListener(\'submit\', /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event) {\n      var form, formData, errorDisplay, response;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            event.preventDefault();\n            form = event.target;\n            formData = new FormData(form);\n            errorDisplay = document.getElementById(\'form-error-message\');\n            errorDisplay.textContent = \'\';\n            errorDisplay.classList.add(\'hidden\');\n            _context2.prev = 6;\n            _context2.next = 9;\n            return _utils_subpagesAPI_js__WEBPACK_IMPORTED_MODULE_0__/* .api */ .F.services.createService(business, formData);\n          case 9:\n            response = _context2.sent;\n            if (response.success) {\n              (0,_components_toast_js__WEBPACK_IMPORTED_MODULE_1__/* .showToast */ .P)(\'Service created successfully!\');\n              // Success - refresh the services list\n              location.reload();\n            }\n            _context2.next = 18;\n            break;\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2["catch"](6);\n            console.error(\'Error:\', _context2.t0);\n            errorDisplay.textContent = _context2.t0.message || \'An unexpected error occurred. Please try again.\';\n            errorDisplay.classList.remove(\'hidden\');\n          case 18:\n          case "end":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[6, 13]]);\n    }));\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n\n  // Edit/Delete handlers\n  document.querySelectorAll(\'.editService\').forEach(function (button) {\n    button.addEventListener(\'click\', function () {\n      var serviceId = button.id.substring(1);\n      editService(business, serviceId);\n    });\n  });\n  document.querySelectorAll(\'.deleteService\').forEach(function (button) {\n    button.addEventListener(\'click\', function () {\n      var serviceId = button.id.substring(1);\n      deleteService(business, serviceId);\n    });\n  });\n});\nfunction deleteService(_x2, _x3) {\n  return _deleteService.apply(this, arguments);\n}\nfunction _deleteService() {\n  _deleteService = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(business, serviceId) {\n    var serviceElement, buttons, response;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (confirm(\'Are you sure you want to delete this service?\')) {\n            _context3.next = 2;\n            break;\n          }\n          return _context3.abrupt("return");\n        case 2:\n          serviceElement = document.getElementById("service".concat(serviceId));\n          if (serviceElement) {\n            _context3.next = 6;\n            break;\n          }\n          console.error(\'Could not find service element\');\n          return _context3.abrupt("return");\n        case 6:\n          // Add loading state with transition\n          serviceElement.style.transition = \'all 0.3s ease-out\';\n          serviceElement.style.opacity = \'0.5\';\n          buttons = serviceElement.querySelectorAll(\'button\');\n          buttons.forEach(function (button) {\n            return button.disabled = true;\n          });\n          _context3.prev = 10;\n          _context3.next = 13;\n          return _utils_subpagesAPI_js__WEBPACK_IMPORTED_MODULE_0__/* .api */ .F.services.deleteService(business, serviceId);\n        case 13:\n          response = _context3.sent;\n          if (response.success) {\n            _context3.next = 16;\n            break;\n          }\n          throw new Error(response.error || \'Failed to delete service\');\n        case 16:\n          if (response.success) {\n            // Animate the removal\n            serviceElement.style.transform = \'translateX(100%)\';\n            serviceElement.style.opacity = \'0\';\n            setTimeout(function () {\n              serviceElement.remove();\n\n              // Check if this was the last service\n              var servicesList = document.getElementById(\'services-list\');\n              if (servicesList && servicesList.children.length === 0) {\n                servicesList.innerHTML = \'<p class="col-span-3 text-center text-gray-500 py-8">No services added yet.</p>\';\n              }\n            }, 300);\n          }\n          _context3.next = 26;\n          break;\n        case 19:\n          _context3.prev = 19;\n          _context3.t0 = _context3["catch"](10);\n          console.error(\'Error:\', _context3.t0);\n          serviceElement.style.opacity = \'1\';\n          serviceElement.style.transform = \'translateX(0)\';\n          buttons.forEach(function (button) {\n            return button.disabled = false;\n          });\n          alert(_context3.t0.message || \'Error deleting service. Please try again.\');\n        case 26:\n        case "end":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[10, 19]]);\n  }));\n  return _deleteService.apply(this, arguments);\n}\nfunction editService(_x4, _x5) {\n  return _editService.apply(this, arguments);\n}\nfunction _editService() {\n  _editService = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(business, serviceId) {\n    var serviceElement, response, editDiv, imageInput, editForm;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          serviceElement = document.getElementById("service".concat(serviceId));\n          if (serviceElement) {\n            _context5.next = 4;\n            break;\n          }\n          console.error("Could not find service element for ID: service".concat(serviceId));\n          return _context5.abrupt("return");\n        case 4:\n          _context5.prev = 4;\n          _context5.next = 7;\n          return _utils_subpagesAPI_js__WEBPACK_IMPORTED_MODULE_0__/* .api */ .F.services.getEditForm(business, serviceId);\n        case 7:\n          response = _context5.sent;\n          // Create edit container\n          editDiv = document.createElement(\'div\');\n          editDiv.className = \'p-4 bg-white rounded-lg shadow\';\n          editDiv.innerHTML = response.form_html;\n          editDiv.originalService = serviceElement;\n\n          // Replace service with form\n          serviceElement.replaceWith(editDiv);\n\n          // Handle image preview\n          imageInput = editDiv.querySelector(\'input[type="file"]\');\n          if (imageInput) {\n            imageInput.addEventListener(\'change\', function (e) {\n              var file = e.target.files[0];\n              if (file) {\n                var reader = new FileReader();\n                reader.onload = function (e) {\n                  // Find existing preview or create new one\n                  var previewDiv = imageInput.closest(\'.space-y-2\').querySelector(\'.mt-4\');\n                  if (!previewDiv) {\n                    previewDiv = document.createElement(\'div\');\n                    previewDiv.className = \'mt-4\';\n                    imageInput.closest(\'.space-y-2\').appendChild(previewDiv);\n                  }\n                  previewDiv.innerHTML = "\\n                            <h4 class=\\"text-sm font-medium text-gray-700 mb-2\\">Selected Image Preview</h4>\\n                            <div class=\\"relative\\">\\n                                <img src=\\"".concat(e.target.result, "\\" \\n                                     alt=\\"Selected image preview\\" \\n                                     class=\\"max-w-full h-auto rounded-lg shadow-sm\\">\\n                            </div>\\n                        ");\n                };\n                reader.readAsDataURL(file);\n              }\n            });\n          }\n\n          // Add cancel button functionality\n          editDiv.querySelector(\'.cancel-edit\').addEventListener(\'click\', function () {\n            editDiv.replaceWith(serviceElement);\n          });\n          // Add form submission handler\n          editForm = editDiv.querySelector("#editService".concat(serviceId));\n          editForm.addEventListener(\'submit\', /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e) {\n              var formData, _response;\n              return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                while (1) switch (_context4.prev = _context4.next) {\n                  case 0:\n                    e.preventDefault();\n                    formData = new FormData(e.target);\n                    _context4.prev = 2;\n                    _context4.next = 5;\n                    return _utils_subpagesAPI_js__WEBPACK_IMPORTED_MODULE_0__/* .api */ .F.services.updateService(business, serviceId, formData);\n                  case 5:\n                    _response = _context4.sent;\n                    if (_response.success) {\n                      (0,_components_toast_js__WEBPACK_IMPORTED_MODULE_1__/* .showToast */ .P)(\'Service updated successfully!\');\n                      location.reload();\n                    }\n                    _context4.next = 13;\n                    break;\n                  case 9:\n                    _context4.prev = 9;\n                    _context4.t0 = _context4["catch"](2);\n                    console.error(\'Error updating service:\', _context4.t0);\n                    (0,_components_toast_js__WEBPACK_IMPORTED_MODULE_1__/* .showToast */ .P)(\'Failed to update service. Please try again.\', \'error\');\n                  case 13:\n                  case "end":\n                    return _context4.stop();\n                }\n              }, _callee4, null, [[2, 9]]);\n            }));\n            return function (_x6) {\n              return _ref3.apply(this, arguments);\n            };\n          }());\n          _context5.next = 24;\n          break;\n        case 20:\n          _context5.prev = 20;\n          _context5.t0 = _context5["catch"](4);\n          console.error(\'Error:\', _context5.t0);\n          (0,_components_toast_js__WEBPACK_IMPORTED_MODULE_1__/* .showToast */ .P)(\'Error loading edit form. Please try again.\', \'error\');\n        case 24:\n        case "end":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[4, 20]]);\n  }));\n  return _editService.apply(this, arguments);\n}\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \'\') {\n    var cookies = document.cookie.split(\';\');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + \'=\') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///572\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var B=__webpack_module_cache__[Q];if(void 0!==B)return B.exports;var U=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](U,U.exports,__webpack_require__),U.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,B,U,F)=>{if(!B){var e=1/0;for(E=0;E<deferred.length;E++){for(var[B,U,F]=deferred[E],s=!0,t=0;t<B.length;t++)(!1&F||e>=F)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](B[t])))?B.splice(t--,1):(s=!1,F<e&&(e=F));if(s){deferred.splice(E--,1);var n=U();void 0!==n&&(Q=n)}}return Q}F=F||0;for(var E=deferred.length;E>0&&deferred[E-1][2]>F;E--)deferred[E]=deferred[E-1];deferred[E]=[B,U,F]},__webpack_require__.d=(Q,B)=>{for(var U in B)__webpack_require__.o(B,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:B[U]})},__webpack_require__.o=(Q,B)=>Object.prototype.hasOwnProperty.call(Q,B),(()=>{var Q={671:0};__webpack_require__.O.j=B=>0===Q[B];var B=(B,U)=>{var F,e,[s,t,n]=U,E=0;if(s.some((B=>0!==Q[B]))){for(F in t)__webpack_require__.o(t,F)&&(__webpack_require__.m[F]=t[F]);if(n)var c=n(__webpack_require__)}for(B&&B(U);E<s.length;E++)e=s[E],__webpack_require__.o(Q,e)&&Q[e]&&Q[e][0](),Q[e]=0;return __webpack_require__.O(c)},U=self.webpackChunkstatic=self.webpackChunkstatic||[];U.forEach(B.bind(null,0)),U.push=B.bind(null,U.push.bind(U))})();var __webpack_exports__=__webpack_require__.O(void 0,[76],(()=>__webpack_require__(572)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();