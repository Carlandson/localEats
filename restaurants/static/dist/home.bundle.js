/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./restaurants/static/js/components/toast.js":
/*!***************************************************!*\
  !*** ./restaurants/static/js/components/toast.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   showToast: () => (/* binding */ showToast)\n/* harmony export */ });\nfunction showToast(message) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3000;\n  var toast = document.getElementById('toast');\n  var toastMessage = document.getElementById('toast-message');\n  if (!toast || !toastMessage) return;\n  toastMessage.textContent = message;\n\n  // Show the toast\n  toast.classList.remove('translate-x-[-100%]', 'opacity-0');\n  toast.classList.add('translate-x-0', 'opacity-100');\n\n  // Hide the toast after duration\n  setTimeout(function () {\n    toast.classList.remove('translate-x-0', 'opacity-100');\n    toast.classList.add('translate-x-[-100%]', 'opacity-0');\n  }, duration);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXN0YXVyYW50cy9zdGF0aWMvanMvY29tcG9uZW50cy90b2FzdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsU0FBU0EsQ0FBQ0MsT0FBTyxFQUFtQjtFQUFBLElBQWpCQyxRQUFRLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxTQUFBLFFBQUFFLFNBQUEsR0FBQUYsU0FBQSxNQUFHLElBQUk7RUFDOUMsSUFBTUcsS0FBSyxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxPQUFPLENBQUM7RUFDOUMsSUFBTUMsWUFBWSxHQUFHRixRQUFRLENBQUNDLGNBQWMsQ0FBQyxlQUFlLENBQUM7RUFFN0QsSUFBSSxDQUFDRixLQUFLLElBQUksQ0FBQ0csWUFBWSxFQUFFO0VBRTdCQSxZQUFZLENBQUNDLFdBQVcsR0FBR1QsT0FBTzs7RUFFbEM7RUFDQUssS0FBSyxDQUFDSyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxxQkFBcUIsRUFBRSxXQUFXLENBQUM7RUFDMUROLEtBQUssQ0FBQ0ssU0FBUyxDQUFDRSxHQUFHLENBQUMsZUFBZSxFQUFFLGFBQWEsQ0FBQzs7RUFFbkQ7RUFDQUMsVUFBVSxDQUFDLFlBQU07SUFDYlIsS0FBSyxDQUFDSyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsYUFBYSxDQUFDO0lBQ3RETixLQUFLLENBQUNLLFNBQVMsQ0FBQ0UsR0FBRyxDQUFDLHFCQUFxQixFQUFFLFdBQVcsQ0FBQztFQUMzRCxDQUFDLEVBQUVYLFFBQVEsQ0FBQztBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXRpYy8uL3Jlc3RhdXJhbnRzL3N0YXRpYy9qcy9jb21wb25lbnRzL3RvYXN0LmpzPzUyZDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHNob3dUb2FzdChtZXNzYWdlLCBkdXJhdGlvbiA9IDMwMDApIHtcclxuICAgIGNvbnN0IHRvYXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvYXN0Jyk7XHJcbiAgICBjb25zdCB0b2FzdE1lc3NhZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9hc3QtbWVzc2FnZScpO1xyXG4gICAgXHJcbiAgICBpZiAoIXRvYXN0IHx8ICF0b2FzdE1lc3NhZ2UpIHJldHVybjtcclxuICAgIFxyXG4gICAgdG9hc3RNZXNzYWdlLnRleHRDb250ZW50ID0gbWVzc2FnZTtcclxuICAgIFxyXG4gICAgLy8gU2hvdyB0aGUgdG9hc3RcclxuICAgIHRvYXN0LmNsYXNzTGlzdC5yZW1vdmUoJ3RyYW5zbGF0ZS14LVstMTAwJV0nLCAnb3BhY2l0eS0wJyk7XHJcbiAgICB0b2FzdC5jbGFzc0xpc3QuYWRkKCd0cmFuc2xhdGUteC0wJywgJ29wYWNpdHktMTAwJyk7XHJcbiAgICBcclxuICAgIC8vIEhpZGUgdGhlIHRvYXN0IGFmdGVyIGR1cmF0aW9uXHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICB0b2FzdC5jbGFzc0xpc3QucmVtb3ZlKCd0cmFuc2xhdGUteC0wJywgJ29wYWNpdHktMTAwJyk7XHJcbiAgICAgICAgdG9hc3QuY2xhc3NMaXN0LmFkZCgndHJhbnNsYXRlLXgtWy0xMDAlXScsICdvcGFjaXR5LTAnKTtcclxuICAgIH0sIGR1cmF0aW9uKTtcclxufSJdLCJuYW1lcyI6WyJzaG93VG9hc3QiLCJtZXNzYWdlIiwiZHVyYXRpb24iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJ0b2FzdCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ0b2FzdE1lc3NhZ2UiLCJ0ZXh0Q29udGVudCIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZCIsInNldFRpbWVvdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./restaurants/static/js/components/toast.js\n");

/***/ }),

/***/ "./restaurants/static/js/subpages/home.js":
/*!************************************************!*\
  !*** ./restaurants/static/js/subpages/home.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_toast_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/toast.js */ \"./restaurants/static/js/components/toast.js\");\n/* harmony import */ var _utils_subpagesAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/subpagesAPI.js */ \"./restaurants/static/js/utils/subpagesAPI.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var business = JSON.parse(document.getElementById('business').textContent);\n  // Accordion functionality\n  var accordionHeaders = document.querySelectorAll('.accordion-header');\n  accordionHeaders.forEach(function (header) {\n    header.addEventListener('click', function (e) {\n      // Don't trigger accordion if clicking the toggle switch\n      if (e.target.type === 'checkbox' || e.target.closest('.relative')) {\n        return;\n      }\n      var targetId = this.dataset.target;\n      var content = document.getElementById(targetId);\n      var icon = this.querySelector('.accordion-icon');\n      var isExpanded = this.dataset.expanded === 'true';\n\n      // Toggle content visibility\n      content.classList.toggle('hidden');\n\n      // Update expanded state and rotate icon\n      this.dataset.expanded = (!isExpanded).toString();\n      icon.style.transform = isExpanded ? 'rotate(0deg)' : 'rotate(180deg)';\n    });\n  });\n\n  // Toggle switch functionality\n  var toggles = document.querySelectorAll('input[type=\"checkbox\"]');\n  toggles.forEach(function (toggle) {\n    toggle.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var section, isEnabled, contentDiv, _csrfToken, response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            section = this.name;\n            isEnabled = this.checked;\n            contentDiv = document.querySelector(\"[data-section=\\\"\".concat(section, \"\\\"]\"));\n            _context.prev = 3;\n            // Show loading state\n            this.disabled = true;\n            if (contentDiv) {\n              contentDiv.classList.toggle('hidden', !isEnabled);\n            }\n            // Get CSRF token\n            _csrfToken = document.querySelector('[name=csrfmiddlewaretoken]').value; // Send update to server\n            _context.next = 9;\n            return fetch(\"/\".concat(business, \"/home/settings/\"), {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': _csrfToken\n              },\n              body: JSON.stringify({\n                fieldType: 'boolean',\n                fieldName: section,\n                value: isEnabled,\n                page_type: 'home'\n              })\n            });\n          case 9:\n            response = _context.sent;\n            if (response.ok) {\n              _context.next = 12;\n              break;\n            }\n            throw new Error('Update failed');\n          case 12:\n            // Show success message\n            (0,_components_toast_js__WEBPACK_IMPORTED_MODULE_0__.showToast)('Changes saved successfully!');\n            _context.next = 21;\n            break;\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](3);\n            console.error('Update failed:', _context.t0);\n            // Revert the toggle if the update failed\n            this.checked = !this.checked;\n            showNotification('Failed to update setting. Please try again.', 'error');\n            if (contentDiv) {\n              contentDiv.style.opacity = isEnabled ? '0' : '1';\n              contentDiv.style.height = isEnabled ? '0' : 'auto';\n              contentDiv.style.visibility = isEnabled ? 'hidden' : 'visible';\n            }\n          case 21:\n            _context.prev = 21;\n            this.disabled = false;\n            return _context.finish(21);\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this, [[3, 15, 21, 24]]);\n    })));\n  });\n  var saveButtons = document.querySelectorAll('.save-button');\n  saveButtons.forEach(function (button) {\n    button.addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var section, container, originalText, _csrfToken2, data, titleInput, messageInput, response;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            section = this.dataset.section;\n            container = this.closest('div');\n            originalText = this.textContent;\n            _context2.prev = 3;\n            // Show loading state\n            this.textContent = 'Saving...';\n            this.disabled = true;\n\n            // Get CSRF token\n            _csrfToken2 = document.querySelector('[name=csrfmiddlewaretoken]').value; // Prepare the data based on section\n            data = {\n              fieldName: section\n            }; // Add section-specific data\n            if (section === 'show_welcome') {\n              titleInput = container.querySelector('[name=\"welcome_title\"]');\n              messageInput = container.querySelector('[name=\"welcome_message\"]');\n              data = _objectSpread(_objectSpread({}, data), {}, {\n                welcome_title: titleInput.value,\n                welcome_message: messageInput.value\n              });\n            }\n\n            // Send update to server\n            _context2.next = 11;\n            return fetch(\"/\".concat(business, \"/home/settings/\"), {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': _csrfToken2\n              },\n              body: JSON.stringify(data)\n            });\n          case 11:\n            response = _context2.sent;\n            if (response.ok) {\n              _context2.next = 14;\n              break;\n            }\n            throw new Error('Update failed');\n          case 14:\n            // Show success message using the toast\n            (0,_components_toast_js__WEBPACK_IMPORTED_MODULE_0__.showToast)('Changes saved successfully!');\n            _context2.next = 21;\n            break;\n          case 17:\n            _context2.prev = 17;\n            _context2.t0 = _context2[\"catch\"](3);\n            console.error('Save failed:', _context2.t0);\n            (0,_components_toast_js__WEBPACK_IMPORTED_MODULE_0__.showToast)('Failed to save changes. Please try again.');\n          case 21:\n            _context2.prev = 21;\n            // Reset button state\n            this.textContent = originalText;\n            this.disabled = false;\n            return _context2.finish(21);\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, this, [[3, 17, 21, 25]]);\n    })));\n  });\n  document.getElementById('id_image').addEventListener('change', function (e) {\n    var previewContainer = document.getElementById('image-preview-container');\n    var preview = document.getElementById('image-preview');\n    var file = e.target.files[0];\n    if (file) {\n      // Show the preview container\n      previewContainer.classList.remove('hidden');\n\n      // Create a URL for the file\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        preview.src = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    } else {\n      // Hide the preview container if no file is selected\n      previewContainer.classList.add('hidden');\n      preview.src = '';\n    }\n  });\n  // Remove image functionality\n  document.getElementById('remove-image').addEventListener('click', function () {\n    var imageInput = document.getElementById('id_image');\n    var previewContainer = document.getElementById('image-preview-container');\n    var preview = document.getElementById('image-preview');\n\n    // Clear the file input\n    imageInput.value = '';\n\n    // Hide the preview\n    previewContainer.classList.add('hidden');\n    preview.src = '';\n  });\n  // Update your existing save-news-post event listener to handle the case when image is removed\n  document.getElementById('save-news-post').addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var formData, imageInput, response, data;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          formData = new FormData();\n          formData.append('title', document.getElementById('id_title').value);\n          formData.append('content', document.getElementById('id_content').value);\n          imageInput = document.getElementById('id_image');\n          if (imageInput.files.length > 0) {\n            formData.append('image', imageInput.files[0]);\n          }\n          _context3.prev = 5;\n          _context3.next = 8;\n          return fetch(\"/api/\".concat(business, \"/news-post/\"), {\n            method: 'POST',\n            headers: {\n              'X-CSRFToken': csrfToken\n            },\n            body: formData\n          });\n        case 8:\n          response = _context3.sent;\n          _context3.next = 11;\n          return response.json();\n        case 11:\n          data = _context3.sent;\n          if (response.ok) {\n            (0,_components_toast_js__WEBPACK_IMPORTED_MODULE_0__.showToast)('News post created successfully!', 'success');\n            // Clear the form and preview\n            document.getElementById('id_title').value = '';\n            document.getElementById('id_content').value = '';\n            imageInput.value = '';\n            document.getElementById('image-preview-container').classList.add('hidden');\n            document.getElementById('image-preview').src = '';\n          } else {\n            (0,_components_toast_js__WEBPACK_IMPORTED_MODULE_0__.showToast)(data.message || 'Error creating news post', 'error');\n          }\n          _context3.next = 19;\n          break;\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](5);\n          (0,_components_toast_js__WEBPACK_IMPORTED_MODULE_0__.showToast)('Error creating news post', 'error');\n          console.error('Error:', _context3.t0);\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[5, 15]]);\n  })));\n});\n\n// Notification helper function\nfunction showNotification(message) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'success';\n  var notification = document.createElement('div');\n  notification.className = \"fixed top-4 left-5 p-4 rounded-lg shadow-lg \".concat(type === 'success' ? 'bg-green-500' : 'bg-red-500', \" text-white\");\n  notification.textContent = message;\n  document.body.appendChild(notification);\n\n  // Remove notification after 3 seconds\n  setTimeout(function () {\n    notification.remove();\n  }, 3000);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/subpages/home.js\n");

/***/ }),

/***/ "./restaurants/static/js/utils/subpagesAPI.js":
/*!****************************************************!*\
  !*** ./restaurants/static/js/utils/subpagesAPI.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: () => (/* binding */ api),\n/* harmony export */   makeRequest: () => (/* binding */ makeRequest)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction getCsrfToken() {\n  return JSON.parse(document.getElementById('csrf_token').textContent);\n}\nfunction makeRequest(_x, _x2, _x3) {\n  return _makeRequest.apply(this, arguments);\n}\nfunction _makeRequest() {\n  _makeRequest = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee24(url, method, data) {\n    var headers, response, errorData;\n    return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n      while (1) switch (_context24.prev = _context24.next) {\n        case 0:\n          _context24.prev = 0;\n          headers = _objectSpread({\n            'X-CSRFToken': getCsrfToken(),\n            'X-Requested-With': 'XMLHttpRequest'\n          }, !(data instanceof FormData) && {\n            'Content-Type': 'application/json'\n          });\n          _context24.next = 4;\n          return fetch(url, {\n            method: method,\n            headers: headers,\n            credentials: 'same-origin',\n            body: data instanceof FormData ? data : JSON.stringify(data)\n          });\n        case 4:\n          response = _context24.sent;\n          if (response.ok) {\n            _context24.next = 10;\n            break;\n          }\n          _context24.next = 8;\n          return response.json();\n        case 8:\n          errorData = _context24.sent;\n          throw new Error(errorData.message || 'Server error');\n        case 10:\n          _context24.next = 12;\n          return response.json();\n        case 12:\n          return _context24.abrupt(\"return\", _context24.sent);\n        case 15:\n          _context24.prev = 15;\n          _context24.t0 = _context24[\"catch\"](0);\n          console.error('Request failed:', _context24.t0);\n          throw _context24.t0;\n        case 19:\n        case \"end\":\n          return _context24.stop();\n      }\n    }, _callee24, null, [[0, 15]]);\n  }));\n  return _makeRequest.apply(this, arguments);\n}\nvar api = {\n  // Home page settings\n  home: {\n    updateSettings: function () {\n      var _updateSettings = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(business, data) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/home/settings/\"), 'POST', data));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function updateSettings(_x4, _x5) {\n        return _updateSettings.apply(this, arguments);\n      }\n      return updateSettings;\n    }(),\n    toggleSection: function () {\n      var _toggleSection = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(business, data) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/home/settings/\"), 'POST', _objectSpread({\n                fieldType: 'boolean',\n                page_type: 'home'\n              }, data)));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function toggleSection(_x6, _x7) {\n        return _toggleSection.apply(this, arguments);\n      }\n      return toggleSection;\n    }()\n  },\n  // News posts\n  news: {\n    create: function () {\n      var _create = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(business, formData) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", makeRequest(\"/api/\".concat(business, \"/news-post/\"), 'POST', formData));\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function create(_x8, _x9) {\n        return _create.apply(this, arguments);\n      }\n      return create;\n    }(),\n    \"delete\": function () {\n      var _delete2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(business, postId) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", makeRequest(\"/api/\".concat(business, \"/news-post/\").concat(postId, \"/\"), 'DELETE'));\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      function _delete(_x10, _x11) {\n        return _delete2.apply(this, arguments);\n      }\n      return _delete;\n    }()\n  },\n  // Events\n  events: {\n    create: function () {\n      var _create2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(business, formData) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", makeRequest(\"/api/\".concat(business, \"/events/\"), 'POST', formData));\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      function create(_x12, _x13) {\n        return _create2.apply(this, arguments);\n      }\n      return create;\n    }()\n  },\n  contact: {\n    updateSettings: function () {\n      var _updateSettings2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(business, data) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/contact/settings/\"), 'POST', data));\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      function updateSettings(_x14, _x15) {\n        return _updateSettings2.apply(this, arguments);\n      }\n      return updateSettings;\n    }(),\n    toggleSection: function () {\n      var _toggleSection2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(business, data) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/contact/settings/\"), 'POST', _objectSpread({\n                fieldType: 'boolean',\n                page_type: 'contact'\n              }, data)));\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }));\n      function toggleSection(_x16, _x17) {\n        return _toggleSection2.apply(this, arguments);\n      }\n      return toggleSection;\n    }()\n  },\n  editBusiness: {\n    updateField: function () {\n      var _updateField = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(business, fieldName, value) {\n        var formData;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              formData = new FormData();\n              formData.append('field_name', fieldName);\n              formData.append(fieldName, value);\n              return _context8.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/edit-business/update/\"), 'POST', formData));\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }));\n      function updateField(_x18, _x19, _x20) {\n        return _updateField.apply(this, arguments);\n      }\n      return updateField;\n    }()\n  },\n  products: {\n    updateSettings: function () {\n      var _updateSettings3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(business, data) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              return _context9.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/products/settings/\"), 'POST', data));\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9);\n      }));\n      function updateSettings(_x21, _x22) {\n        return _updateSettings3.apply(this, arguments);\n      }\n      return updateSettings;\n    }(),\n    createProduct: function () {\n      var _createProduct = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(business, formData) {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              return _context10.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/products/create/\"), 'POST', formData));\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10);\n      }));\n      function createProduct(_x23, _x24) {\n        return _createProduct.apply(this, arguments);\n      }\n      return createProduct;\n    }(),\n    getProduct: function () {\n      var _getProduct = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(business, productId) {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              return _context11.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/products/\").concat(productId, \"/\"), 'GET'));\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11);\n      }));\n      function getProduct(_x25, _x26) {\n        return _getProduct.apply(this, arguments);\n      }\n      return getProduct;\n    }(),\n    updateProduct: function () {\n      var _updateProduct = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(business, productId, formData) {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              return _context12.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/products/\").concat(productId, \"/\"), 'POST', formData));\n            case 1:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12);\n      }));\n      function updateProduct(_x27, _x28, _x29) {\n        return _updateProduct.apply(this, arguments);\n      }\n      return updateProduct;\n    }(),\n    deleteProduct: function () {\n      var _deleteProduct = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(business, productId) {\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              return _context13.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/products/\").concat(productId, \"/\"), 'DELETE'));\n            case 1:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13);\n      }));\n      function deleteProduct(_x30, _x31) {\n        return _deleteProduct.apply(this, arguments);\n      }\n      return deleteProduct;\n    }(),\n    getEditForm: function () {\n      var _getEditForm = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(business, productId) {\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              return _context14.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/products/\").concat(productId, \"/get-form/\"), 'GET'));\n            case 1:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14);\n      }));\n      function getEditForm(_x32, _x33) {\n        return _getEditForm.apply(this, arguments);\n      }\n      return getEditForm;\n    }()\n  },\n  services: {\n    updateSettings: function () {\n      var _updateSettings4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(business, data) {\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              return _context15.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/services/settings/\"), 'POST', data));\n            case 1:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15);\n      }));\n      function updateSettings(_x34, _x35) {\n        return _updateSettings4.apply(this, arguments);\n      }\n      return updateSettings;\n    }(),\n    createService: function () {\n      var _createService = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(business, formData) {\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              return _context16.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/services/create/\"), 'POST', formData));\n            case 1:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16);\n      }));\n      function createService(_x36, _x37) {\n        return _createService.apply(this, arguments);\n      }\n      return createService;\n    }(),\n    getService: function () {\n      var _getService = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(business, serviceId) {\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              return _context17.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/services/\").concat(serviceId, \"/\"), 'GET'));\n            case 1:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17);\n      }));\n      function getService(_x38, _x39) {\n        return _getService.apply(this, arguments);\n      }\n      return getService;\n    }(),\n    updateService: function () {\n      var _updateService = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(business, serviceId, formData) {\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              return _context18.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/services/\").concat(serviceId, \"/\"), 'POST', formData));\n            case 1:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18);\n      }));\n      function updateService(_x40, _x41, _x42) {\n        return _updateService.apply(this, arguments);\n      }\n      return updateService;\n    }(),\n    deleteService: function () {\n      var _deleteService = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19(business, serviceId) {\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              return _context19.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/services/\").concat(serviceId, \"/\"), 'DELETE'));\n            case 1:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19);\n      }));\n      function deleteService(_x43, _x44) {\n        return _deleteService.apply(this, arguments);\n      }\n      return deleteService;\n    }(),\n    getEditForm: function () {\n      var _getEditForm2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20(business, serviceId) {\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              return _context20.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/services/\").concat(serviceId, \"/get-form/\"), 'GET'));\n            case 1:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20);\n      }));\n      function getEditForm(_x45, _x46) {\n        return _getEditForm2.apply(this, arguments);\n      }\n      return getEditForm;\n    }()\n  },\n  gallery: {\n    upload: function () {\n      var _upload = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee21(business, formData) {\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              return _context21.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/gallery/upload/\"), 'POST', formData));\n            case 1:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21);\n      }));\n      function upload(_x47, _x48) {\n        return _upload.apply(this, arguments);\n      }\n      return upload;\n    }(),\n    updateDescription: function () {\n      var _updateDescription = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee22(business, data) {\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              return _context22.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/gallery/settings/\"), 'POST', data));\n            case 1:\n            case \"end\":\n              return _context22.stop();\n          }\n        }, _callee22);\n      }));\n      function updateDescription(_x49, _x50) {\n        return _updateDescription.apply(this, arguments);\n      }\n      return updateDescription;\n    }(),\n    \"delete\": function () {\n      var _delete3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee23(business, imageId) {\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) switch (_context23.prev = _context23.next) {\n            case 0:\n              return _context23.abrupt(\"return\", makeRequest(\"/\".concat(business, \"/gallery/delete/\").concat(imageId), 'DELETE'));\n            case 1:\n            case \"end\":\n              return _context23.stop();\n          }\n        }, _callee23);\n      }));\n      function _delete(_x51, _x52) {\n        return _delete3.apply(this, arguments);\n      }\n      return _delete;\n    }()\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/utils/subpagesAPI.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./restaurants/static/js/subpages/home.js");
/******/ 	
/******/ })()
;