/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./restaurants/static/js/components/heroComponents.js":
/*!************************************************************!*\
  !*** ./restaurants/static/js/components/heroComponents.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleBannerButtonVisibility: () => (/* binding */ handleBannerButtonVisibility),\n/* harmony export */   handleBannerSliderVisibility: () => (/* binding */ handleBannerSliderVisibility),\n/* harmony export */   reinitializeSlider: () => (/* binding */ reinitializeSlider)\n/* harmony export */ });\n/* harmony import */ var _slider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./slider.js */ \"./restaurants/static/js/components/slider.js\");\n\nvar sliderInstance = null;\nvar slider = (0,_slider_js__WEBPACK_IMPORTED_MODULE_0__.initializeSlider)();\nfunction handleBannerSliderVisibility(layoutStyle) {\n  var bannerSliderContainer = document.getElementById('banner-slider-images');\n  if (!bannerSliderContainer) return;\n  if (layoutStyle === 'banner-slider') {\n    var _bannerSliderContainer = document.getElementById('banner-slider-images');\n    _bannerSliderContainer.style.display = 'block';\n\n    // Initialize slider\n    if (!sliderInstance) {\n      sliderInstance = slider.init();\n      if (sliderInstance) {\n        sliderInstance.start();\n      }\n    }\n\n    // Enable banner upload inputs and buttons\n    ['banner-2', 'banner-3'].forEach(function (prefix) {\n      var fileInput = document.getElementById(\"\".concat(prefix, \"-upload\"));\n      var uploadButton = document.getElementById(\"upload-\".concat(prefix, \"-button\"));\n      var container = document.getElementById(\"\".concat(prefix, \"-container\"));\n      var removeButton = document.getElementById(\"remove-\".concat(prefix));\n      if (fileInput) fileInput.disabled = false;\n      if (uploadButton) {\n        uploadButton.disabled = false;\n        uploadButton.classList.remove('opacity-50', 'cursor-not-allowed');\n      }\n      if (container) container.classList.remove('opacity-50');\n      if (removeButton) removeButton.disabled = false;\n    });\n  } else {\n    if (sliderInstance) {\n      sliderInstance.stop();\n      sliderInstance = null;\n    }\n    bannerSliderContainer.style.display = 'none';\n\n    // Disable banner upload inputs and buttons\n    ['banner-2', 'banner-3'].forEach(function (prefix) {\n      var fileInput = document.getElementById(\"\".concat(prefix, \"-upload\"));\n      var uploadButton = document.getElementById(\"upload-\".concat(prefix, \"-button\"));\n      var container = document.getElementById(\"\".concat(prefix, \"-container\"));\n      var removeButton = document.getElementById(\"remove-\".concat(prefix));\n      if (fileInput) fileInput.disabled = true;\n      if (uploadButton) {\n        uploadButton.disabled = true;\n        uploadButton.classList.add('opacity-50', 'cursor-not-allowed');\n      }\n      if (container) container.classList.add('opacity-50');\n      if (removeButton) removeButton.disabled = true;\n    });\n  }\n}\nfunction reinitializeSlider(sliderContainer) {\n  var bannerSliderContainer = document.getElementById('banner-slider-images');\n  if (!bannerSliderContainer) return;\n\n  // Use the passed container if available, otherwise use banner-slider-images\n  var container = sliderContainer || bannerSliderContainer;\n  var slides = Array.from(container.querySelectorAll('.slide')).filter(function (slide) {\n    return slide.querySelector('img');\n  });\n\n  // If there's only one or zero slides, stop the slider and return\n  if (slides.length <= 1) {\n    if (sliderInstance) {\n      sliderInstance.stop();\n      sliderInstance = null;\n    }\n    return;\n  }\n  if (sliderInstance) {\n    // Store current state\n    var currentIndex = Math.min(sliderInstance.getCurrentSlide(), slides.length - 1);\n    var wasPlaying = sliderInstance.isPlaying();\n\n    // Stop current instance\n    sliderInstance.stop();\n\n    // Reinitialize with stored position\n    sliderInstance = slider.init(currentIndex);\n    if (sliderInstance && bannerSliderContainer.style.display !== 'none') {\n      // Only start if it was playing before\n      if (wasPlaying) {\n        sliderInstance.start();\n      }\n    }\n  } else {\n    sliderInstance = slider.init(0);\n    if (sliderInstance && bannerSliderContainer.style.display !== 'none') {\n      sliderInstance.start();\n    }\n  }\n}\nfunction handleBannerButtonVisibility(layoutStyle) {\n  var bannerButtonContainer = document.getElementById('banner-button-container');\n  if (!bannerButtonContainer) return;\n  bannerButtonContainer.style.display = layoutStyle === 'banner-slider' ? 'block' : 'none';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/components/heroComponents.js\n");

/***/ }),

/***/ "./restaurants/static/js/components/slider.js":
/*!****************************************************!*\
  !*** ./restaurants/static/js/components/slider.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeSlider: () => (/* binding */ initializeSlider)\n/* harmony export */ });\nfunction initializeSlider() {\n  var currentSlide = 0;\n  var slideInterval;\n  var _isPlaying = false;\n  function setup() {\n    var startingSlide = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    // Get only slides that contain images\n    var allSlides = document.querySelectorAll('.slide');\n    var slides = Array.from(allSlides).filter(function (slide) {\n      return slide.querySelector('img');\n    });\n    var dots = document.querySelectorAll('.dot-nav');\n    var prevButton = document.querySelector('#prev-slide');\n    var nextButton = document.querySelector('#next-slide');\n    var pausePlayButton = document.querySelector('#pause-play-slider');\n    if (slides.length === 0) {\n      console.log('No slides with images found');\n      return null;\n    }\n    function showSlide(index) {\n      // Hide all slides first\n      allSlides.forEach(function (slide) {\n        slide.style.opacity = '0';\n        slide.style.pointerEvents = 'none';\n      });\n\n      // Remove active state from all dots\n      dots.forEach(function (dot) {\n        dot.classList.remove('opacity-100');\n        dot.classList.add('opacity-50');\n      });\n\n      // Show the active slide\n      slides[index].style.opacity = '1';\n      slides[index].style.pointerEvents = 'auto';\n\n      // Update the corresponding dot\n      if (dots[index]) {\n        dots[index].classList.remove('opacity-50');\n        dots[index].classList.add('opacity-100');\n      }\n      currentSlide = index;\n    }\n    function nextSlide() {\n      var nextIndex = (currentSlide + 1) % slides.length;\n      showSlide(nextIndex);\n    }\n    function prevSlide() {\n      var prevIndex = (currentSlide - 1 + slides.length) % slides.length;\n      showSlide(prevIndex);\n    }\n    function updateIcons(playing) {\n      var pauseIcon = document.querySelector('#pause-play-slider .pause-icon');\n      var playIcon = document.querySelector('#pause-play-slider .play-icon');\n      if (playing) {\n        pauseIcon === null || pauseIcon === void 0 || pauseIcon.classList.remove('hidden');\n        playIcon === null || playIcon === void 0 || playIcon.classList.add('hidden');\n      } else {\n        pauseIcon === null || pauseIcon === void 0 || pauseIcon.classList.add('hidden');\n        playIcon === null || playIcon === void 0 || playIcon.classList.remove('hidden');\n      }\n    }\n    function startAutoSlide() {\n      if (slideInterval) clearInterval(slideInterval);\n      slideInterval = setInterval(nextSlide, 5000);\n      _isPlaying = true;\n      updateIcons(true);\n    }\n    function stopAutoSlide() {\n      if (slideInterval) {\n        clearInterval(slideInterval);\n        slideInterval = null;\n      }\n      _isPlaying = false;\n      updateIcons(false);\n    }\n    function handleSlideChange(direction) {\n      if (direction === 'next') {\n        nextSlide();\n      } else {\n        prevSlide();\n      }\n\n      // Reset the interval if playing\n      if (_isPlaying) {\n        clearInterval(slideInterval);\n        slideInterval = setInterval(nextSlide, 5000);\n      }\n    }\n\n    // Add event listeners\n    if (prevButton) {\n      prevButton.addEventListener('click', function (e) {\n        e.preventDefault();\n        handleSlideChange('prev');\n      });\n    }\n    if (nextButton) {\n      nextButton.addEventListener('click', function (e) {\n        e.preventDefault();\n        handleSlideChange('next');\n      });\n    }\n    if (pausePlayButton) {\n      pausePlayButton.addEventListener('click', function (e) {\n        e.preventDefault();\n        if (_isPlaying) {\n          stopAutoSlide();\n        } else {\n          startAutoSlide();\n        }\n      });\n    }\n    dots.forEach(function (dot, index) {\n      if (index < slides.length) {\n        dot.addEventListener('click', function (e) {\n          e.preventDefault();\n          showSlide(index);\n          if (_isPlaying) {\n            clearInterval(slideInterval);\n            slideInterval = setInterval(nextSlide, 5000);\n          }\n        });\n        dot.style.display = 'block';\n      } else {\n        dot.style.display = 'none';\n      }\n    });\n\n    // Initialize slider\n    showSlide(startingSlide);\n    startAutoSlide();\n    function getCurrentSlide() {\n      return currentSlide;\n    }\n    return {\n      start: startAutoSlide,\n      stop: stopAutoSlide,\n      getCurrentSlide: getCurrentSlide,\n      showSlide: showSlide,\n      isPlaying: function isPlaying() {\n        return _isPlaying;\n      }\n    };\n  }\n  return {\n    init: setup\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/components/slider.js\n");

/***/ }),

/***/ "./restaurants/static/js/components/toast.js":
/*!***************************************************!*\
  !*** ./restaurants/static/js/components/toast.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   showToast: () => (/* binding */ showToast)\n/* harmony export */ });\nfunction showToast(message) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3000;\n  var toast = document.getElementById('toast');\n  var toastMessage = document.getElementById('toast-message');\n  if (!toast || !toastMessage) return;\n  toastMessage.textContent = message;\n\n  // Show the toast\n  toast.classList.remove('translate-x-[-100%]', 'opacity-0');\n  toast.classList.add('translate-x-0', 'opacity-100');\n\n  // Hide the toast after duration\n  setTimeout(function () {\n    toast.classList.remove('translate-x-0', 'opacity-100');\n    toast.classList.add('translate-x-[-100%]', 'opacity-0');\n  }, duration);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXN0YXVyYW50cy9zdGF0aWMvanMvY29tcG9uZW50cy90b2FzdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsU0FBU0EsQ0FBQ0MsT0FBTyxFQUFtQjtFQUFBLElBQWpCQyxRQUFRLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxTQUFBLFFBQUFFLFNBQUEsR0FBQUYsU0FBQSxNQUFHLElBQUk7RUFDOUMsSUFBTUcsS0FBSyxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxPQUFPLENBQUM7RUFDOUMsSUFBTUMsWUFBWSxHQUFHRixRQUFRLENBQUNDLGNBQWMsQ0FBQyxlQUFlLENBQUM7RUFFN0QsSUFBSSxDQUFDRixLQUFLLElBQUksQ0FBQ0csWUFBWSxFQUFFO0VBRTdCQSxZQUFZLENBQUNDLFdBQVcsR0FBR1QsT0FBTzs7RUFFbEM7RUFDQUssS0FBSyxDQUFDSyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxxQkFBcUIsRUFBRSxXQUFXLENBQUM7RUFDMUROLEtBQUssQ0FBQ0ssU0FBUyxDQUFDRSxHQUFHLENBQUMsZUFBZSxFQUFFLGFBQWEsQ0FBQzs7RUFFbkQ7RUFDQUMsVUFBVSxDQUFDLFlBQU07SUFDYlIsS0FBSyxDQUFDSyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsYUFBYSxDQUFDO0lBQ3RETixLQUFLLENBQUNLLFNBQVMsQ0FBQ0UsR0FBRyxDQUFDLHFCQUFxQixFQUFFLFdBQVcsQ0FBQztFQUMzRCxDQUFDLEVBQUVYLFFBQVEsQ0FBQztBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXRpYy8uL3Jlc3RhdXJhbnRzL3N0YXRpYy9qcy9jb21wb25lbnRzL3RvYXN0LmpzPzUyZDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHNob3dUb2FzdChtZXNzYWdlLCBkdXJhdGlvbiA9IDMwMDApIHtcclxuICAgIGNvbnN0IHRvYXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvYXN0Jyk7XHJcbiAgICBjb25zdCB0b2FzdE1lc3NhZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9hc3QtbWVzc2FnZScpO1xyXG4gICAgXHJcbiAgICBpZiAoIXRvYXN0IHx8ICF0b2FzdE1lc3NhZ2UpIHJldHVybjtcclxuICAgIFxyXG4gICAgdG9hc3RNZXNzYWdlLnRleHRDb250ZW50ID0gbWVzc2FnZTtcclxuICAgIFxyXG4gICAgLy8gU2hvdyB0aGUgdG9hc3RcclxuICAgIHRvYXN0LmNsYXNzTGlzdC5yZW1vdmUoJ3RyYW5zbGF0ZS14LVstMTAwJV0nLCAnb3BhY2l0eS0wJyk7XHJcbiAgICB0b2FzdC5jbGFzc0xpc3QuYWRkKCd0cmFuc2xhdGUteC0wJywgJ29wYWNpdHktMTAwJyk7XHJcbiAgICBcclxuICAgIC8vIEhpZGUgdGhlIHRvYXN0IGFmdGVyIGR1cmF0aW9uXHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICB0b2FzdC5jbGFzc0xpc3QucmVtb3ZlKCd0cmFuc2xhdGUteC0wJywgJ29wYWNpdHktMTAwJyk7XHJcbiAgICAgICAgdG9hc3QuY2xhc3NMaXN0LmFkZCgndHJhbnNsYXRlLXgtWy0xMDAlXScsICdvcGFjaXR5LTAnKTtcclxuICAgIH0sIGR1cmF0aW9uKTtcclxufSJdLCJuYW1lcyI6WyJzaG93VG9hc3QiLCJtZXNzYWdlIiwiZHVyYXRpb24iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJ0b2FzdCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ0b2FzdE1lc3NhZ2UiLCJ0ZXh0Q29udGVudCIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZCIsInNldFRpbWVvdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./restaurants/static/js/components/toast.js\n");

/***/ }),

/***/ "./restaurants/static/js/handlers/alignmentHandlers.js":
/*!*************************************************************!*\
  !*** ./restaurants/static/js/handlers/alignmentHandlers.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeAlignmentHandlers: () => (/* binding */ initializeAlignmentHandlers)\n/* harmony export */ });\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/errors.js */ \"./restaurants/static/js/utils/errors.js\");\n/* harmony import */ var _utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/previewUpdates.js */ \"./restaurants/static/js/utils/previewUpdates.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\nfunction getAlignmentElements() {\n  return {\n    heroAlignmentRadios: document.querySelectorAll('input[name=\"hero_text_align\"]'),\n    banner2AlignmentRadios: document.querySelectorAll('input[name=\"banner_2_text_align\"]'),\n    banner3AlignmentRadios: document.querySelectorAll('input[name=\"banner_3_text_align\"]')\n  };\n}\nfunction initializeAlignmentHandlers(context) {\n  var elements = getAlignmentElements();\n\n  // Helper function to set up alignment handlers\n  var setupAlignmentHandler = function setupAlignmentHandler(radios, fieldName) {\n    radios.forEach(function (radio) {\n      radio.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              console.log(\"\".concat(fieldName, \" changed to:\"), this.value);\n              _context.next = 4;\n              return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n                fieldType: 'alignment',\n                fieldName: fieldName,\n                value: this.value,\n                previousValue: this.dataset.previousValue || 'left',\n                // Default to 'left' if no previous value\n                page_type: context.pageSelector.value,\n                return_preview: true,\n                isGlobal: false\n              });\n            case 4:\n              // Update the previous value for future changes\n              this.dataset.previousValue = this.value;\n              _context.next = 11;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Error updating \".concat(fieldName, \":\"), _context.t0);\n              (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to update text alignment');\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 7]]);\n      })));\n    });\n  };\n\n  // Set up handlers for each banner\n  if (elements.heroAlignmentRadios.length > 0) {\n    setupAlignmentHandler(elements.heroAlignmentRadios, 'hero_text_align');\n  }\n  if (elements.banner2AlignmentRadios.length > 0) {\n    setupAlignmentHandler(elements.banner2AlignmentRadios, 'banner_2_text_align');\n  }\n  if (elements.banner3AlignmentRadios.length > 0) {\n    setupAlignmentHandler(elements.banner3AlignmentRadios, 'banner_3_text_align');\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/handlers/alignmentHandlers.js\n");

/***/ }),

/***/ "./restaurants/static/js/handlers/buttonHandlers.js":
/*!**********************************************************!*\
  !*** ./restaurants/static/js/handlers/buttonHandlers.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeBannerButtonEditors: () => (/* binding */ initializeBannerButtonEditors),\n/* harmony export */   initializeHeroLayoutListener: () => (/* binding */ initializeHeroLayoutListener)\n/* harmony export */ });\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/errors.js */ \"./restaurants/static/js/utils/errors.js\");\n/* harmony import */ var _utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/previewUpdates.js */ \"./restaurants/static/js/utils/previewUpdates.js\");\n/* harmony import */ var _components_heroComponents_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/heroComponents.js */ \"./restaurants/static/js/components/heroComponents.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\n\nfunction initializeButtonEditor(prefix, context) {\n  // Get all button-related elements\n  var elements = {\n    showButton: document.getElementById(\"show_\".concat(prefix, \"_button\")),\n    buttonText: document.getElementById(\"\".concat(prefix, \"_button_text\")),\n    buttonLink: document.getElementById(\"\".concat(prefix, \"_button_link\")),\n    buttonBgColor: document.getElementById(\"\".concat(prefix, \"_button_bg_color\")),\n    buttonTextColor: document.getElementById(\"\".concat(prefix, \"_button_text_color\")),\n    buttonSize: document.getElementById(\"\".concat(prefix, \"_button_size\")),\n    button: document.querySelector(\".\".concat(prefix, \"-button\"))\n  };\n\n  // Initialize show/hide button checkbox\n  if (elements.showButton) {\n    elements.showButton.checked = elements.showButton.dataset.initialState === 'true';\n    elements.showButton.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _this = this;\n      var updates, _i, _updates, _updates$_i, element, fieldName;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            // Enable/disable button-related inputs\n            [elements.buttonText, elements.buttonLink, elements.buttonBgColor, elements.buttonTextColor, elements.buttonSize].forEach(function (input) {\n              if (input) input.disabled = !_this.checked;\n            });\n\n            // Update show/hide state\n            _context.next = 4;\n            return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n              fieldType: 'toggle',\n              fieldName: \"show_\".concat(prefix, \"_button\"),\n              value: this.checked,\n              previousValue: !this.checked,\n              page_type: context.pageSelector.value,\n              return_preview: true,\n              isGlobal: false\n            });\n          case 4:\n            if (!this.checked) {\n              _context.next = 15;\n              break;\n            }\n            updates = [[elements.buttonText, \"\".concat(prefix, \"_button_text\")], [elements.buttonLink, \"\".concat(prefix, \"_button_link\")], [elements.buttonBgColor, \"\".concat(prefix, \"_button_bg_color\")], [elements.buttonTextColor, \"\".concat(prefix, \"_button_text_color\")], [elements.buttonSize, \"\".concat(prefix, \"_button_size\")]];\n            _i = 0, _updates = updates;\n          case 7:\n            if (!(_i < _updates.length)) {\n              _context.next = 15;\n              break;\n            }\n            _updates$_i = _slicedToArray(_updates[_i], 2), element = _updates$_i[0], fieldName = _updates$_i[1];\n            if (!(element && element.value)) {\n              _context.next = 12;\n              break;\n            }\n            _context.next = 12;\n            return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n              fieldType: 'button',\n              fieldName: fieldName,\n              value: element.value,\n              previousValue: element.defaultValue,\n              page_type: context.pageSelector.value,\n              return_preview: true\n            });\n          case 12:\n            _i++;\n            _context.next = 7;\n            break;\n          case 15:\n            _context.next = 21;\n            break;\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error updating button visibility:', _context.t0);\n            (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to update button visibility');\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this, [[0, 17]]);\n    })));\n  }\n\n  // Define input types and their update strategies\n  var inputConfigs = [\n  // Text inputs should be debounced\n  [elements.buttonText, \"\".concat(prefix, \"_button_text\"), 'text'],\n  // Links should update immediately\n  [elements.buttonLink, \"\".concat(prefix, \"_button_link\"), 'button'],\n  // Colors should be debounced\n  [elements.buttonBgColor, \"\".concat(prefix, \"_button_bg_color\"), 'color'], [elements.buttonTextColor, \"\".concat(prefix, \"_button_text_color\"), 'color'],\n  // Size should update immediately\n  [elements.buttonSize, \"\".concat(prefix, \"_button_size\"), 'button']];\n  inputConfigs.forEach(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 3),\n      element = _ref3[0],\n      fieldName = _ref3[1],\n      fieldType = _ref3[2];\n    if (element) {\n      element.addEventListener('input', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n                fieldType: fieldType,\n                fieldName: fieldName,\n                value: this.value,\n                previousValue: this.defaultValue,\n                page_type: context.pageSelector.value,\n                return_preview: true\n              });\n            case 3:\n              // Update the defaultValue for future changes\n              this.defaultValue = this.value;\n              _context2.next = 10;\n              break;\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(\"Error updating \".concat(fieldName, \":\"), _context2.t0);\n              (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)(\"Failed to update button \".concat(fieldName.split('_').pop()));\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 6]]);\n      })));\n    }\n  });\n}\nfunction initializeBannerButtonEditors(context) {\n  var prefixes = ['hero', 'banner_2', 'banner_3'];\n  prefixes.forEach(function (prefix) {\n    initializeButtonEditor(prefix, context);\n  });\n}\nfunction initializeHeroLayoutListener() {\n  var layoutSelector = document.getElementById('hero_layout');\n  if (layoutSelector) {\n    layoutSelector.addEventListener('change', function () {\n      (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_2__.handleBannerSliderVisibility)(this.value);\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXN0YXVyYW50cy9zdGF0aWMvanMvaGFuZGxlcnMvYnV0dG9uSGFuZGxlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OytDQUNBLHFKQUFBQSxtQkFBQSxZQUFBQSxvQkFBQSxXQUFBQyxDQUFBLFNBQUFDLENBQUEsRUFBQUQsQ0FBQSxPQUFBRSxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsU0FBQSxFQUFBQyxDQUFBLEdBQUFILENBQUEsQ0FBQUksY0FBQSxFQUFBQyxDQUFBLEdBQUFKLE1BQUEsQ0FBQUssY0FBQSxjQUFBUCxDQUFBLEVBQUFELENBQUEsRUFBQUUsQ0FBQSxJQUFBRCxDQUFBLENBQUFELENBQUEsSUFBQUUsQ0FBQSxDQUFBTyxLQUFBLEtBQUFDLENBQUEsd0JBQUFDLE1BQUEsR0FBQUEsTUFBQSxPQUFBQyxDQUFBLEdBQUFGLENBQUEsQ0FBQUcsUUFBQSxrQkFBQUMsQ0FBQSxHQUFBSixDQUFBLENBQUFLLGFBQUEsdUJBQUFDLENBQUEsR0FBQU4sQ0FBQSxDQUFBTyxXQUFBLDhCQUFBQyxPQUFBakIsQ0FBQSxFQUFBRCxDQUFBLEVBQUFFLENBQUEsV0FBQUMsTUFBQSxDQUFBSyxjQUFBLENBQUFQLENBQUEsRUFBQUQsQ0FBQSxJQUFBUyxLQUFBLEVBQUFQLENBQUEsRUFBQWlCLFVBQUEsTUFBQUMsWUFBQSxNQUFBQyxRQUFBLFNBQUFwQixDQUFBLENBQUFELENBQUEsV0FBQWtCLE1BQUEsbUJBQUFqQixDQUFBLElBQUFpQixNQUFBLFlBQUFBLE9BQUFqQixDQUFBLEVBQUFELENBQUEsRUFBQUUsQ0FBQSxXQUFBRCxDQUFBLENBQUFELENBQUEsSUFBQUUsQ0FBQSxnQkFBQW9CLEtBQUFyQixDQUFBLEVBQUFELENBQUEsRUFBQUUsQ0FBQSxFQUFBRyxDQUFBLFFBQUFLLENBQUEsR0FBQVYsQ0FBQSxJQUFBQSxDQUFBLENBQUFJLFNBQUEsWUFBQW1CLFNBQUEsR0FBQXZCLENBQUEsR0FBQXVCLFNBQUEsRUFBQVgsQ0FBQSxHQUFBVCxNQUFBLENB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QztJQUNOO0VBQ0osQ0FBQyxDQUFDO0FBQ047QUFFTyxTQUFTSSw2QkFBNkJBLENBQUM5QyxPQUFPLEVBQUU7RUFDbkQsSUFBTStDLFFBQVEsR0FBRyxDQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsVUFBVSxDQUFDO0VBQ2pEQSxRQUFRLENBQUM5SCxPQUFPLENBQUMsVUFBQThFLE1BQU0sRUFBSTtJQUN2QkQsc0JBQXNCLENBQUNDLE1BQU0sRUFBRUMsT0FBTyxDQUFDO0VBQzNDLENBQUMsQ0FBQztBQUNOO0FBRU8sU0FBU2dELDRCQUE0QkEsQ0FBQSxFQUFHO0VBQzNDLElBQU1DLGNBQWMsR0FBRzlDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLGFBQWEsQ0FBQztFQUM3RCxJQUFJNkMsY0FBYyxFQUFFO0lBQ2hCQSxjQUFjLENBQUNqQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsWUFBVztNQUNqRG5CLDJGQUE0QixDQUFDLElBQUksQ0FBQ2hILEtBQUssQ0FBQztJQUM1QyxDQUFDLENBQUM7RUFDTjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhdGljLy4vcmVzdGF1cmFudHMvc3RhdGljL2pzL2hhbmRsZXJzL2J1dHRvbkhhbmRsZXJzLmpzPzUwYWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGlzcGxheUVycm9yIH0gZnJvbSAnLi4vdXRpbHMvZXJyb3JzLmpzJztcclxuaW1wb3J0IHsgc21hcnRVcGRhdGUgfSBmcm9tICcuLi91dGlscy9wcmV2aWV3VXBkYXRlcy5qcyc7XHJcbmltcG9ydCB7IGhhbmRsZUJhbm5lclNsaWRlclZpc2liaWxpdHkgfSBmcm9tICcuLi9jb21wb25lbnRzL2hlcm9Db21wb25lbnRzLmpzJztcclxuXHJcbmZ1bmN0aW9uIGluaXRpYWxpemVCdXR0b25FZGl0b3IocHJlZml4LCBjb250ZXh0KSB7XHJcbiAgICAvLyBHZXQgYWxsIGJ1dHRvbi1yZWxhdGVkIGVsZW1lbnRzXHJcbiAgICBjb25zdCBlbGVtZW50cyA9IHtcclxuICAgICAgICBzaG93QnV0dG9uOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc2hvd18ke3ByZWZpeH1fYnV0dG9uYCksXHJcbiAgICAgICAgYnV0dG9uVGV4dDogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCR7cHJlZml4fV9idXR0b25fdGV4dGApLFxyXG4gICAgICAgIGJ1dHRvbkxpbms6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGAke3ByZWZpeH1fYnV0dG9uX2xpbmtgKSxcclxuICAgICAgICBidXR0b25CZ0NvbG9yOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHtwcmVmaXh9X2J1dHRvbl9iZ19jb2xvcmApLFxyXG4gICAgICAgIGJ1dHRvblRleHRDb2xvcjogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCR7cHJlZml4fV9idXR0b25fdGV4dF9jb2xvcmApLFxyXG4gICAgICAgIGJ1dHRvblNpemU6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGAke3ByZWZpeH1fYnV0dG9uX3NpemVgKSxcclxuICAgICAgICBidXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke3ByZWZpeH0tYnV0dG9uYClcclxuICAgIH07XHJcblxyXG4gICAgLy8gSW5pdGlhbGl6ZSBzaG93L2hpZGUgYnV0dG9uIGNoZWNrYm94XHJcbiAgICBpZiAoZWxlbWVudHMuc2hvd0J1dHRvbikge1xyXG4gICAgICAgIGVsZW1lbnRzLnNob3dCdXR0b24uY2hlY2tlZCA9IGVsZW1lbnRzLnNob3dCdXR0b24uZGF0YXNldC5pbml0aWFsU3RhdGUgPT09ICd0cnVlJztcclxuICAgICAgICBcclxuICAgICAgICBlbGVtZW50cy5zaG93QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGFzeW5jIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgLy8gRW5hYmxlL2Rpc2FibGUgYnV0dG9uLXJlbGF0ZWQgaW5wdXRzXHJcbiAgICAgICAgICAgICAgICBbZWxlbWVudHMuYnV0dG9uVGV4dCwgZWxlbWVudHMuYnV0dG9uTGluaywgZWxlbWVudHMuYnV0dG9uQmdDb2xvciwgXHJcbiAgICAgICAgICAgICAgICAgZWxlbWVudHMuYnV0dG9uVGV4dENvbG9yLCBlbGVtZW50cy5idXR0b25TaXplXS5mb3JFYWNoKGlucHV0ID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQpIGlucHV0LmRpc2FibGVkID0gIXRoaXMuY2hlY2tlZDtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBzaG93L2hpZGUgc3RhdGVcclxuICAgICAgICAgICAgICAgIGF3YWl0IHNtYXJ0VXBkYXRlKGNvbnRleHQsIHtcclxuICAgICAgICAgICAgICAgICAgICBmaWVsZFR5cGU6ICd0b2dnbGUnLFxyXG4gICAgICAgICAgICAgICAgICAgIGZpZWxkTmFtZTogYHNob3dfJHtwcmVmaXh9X2J1dHRvbmAsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuY2hlY2tlZCxcclxuICAgICAgICAgICAgICAgICAgICBwcmV2aW91c1ZhbHVlOiAhdGhpcy5jaGVja2VkLFxyXG4gICAgICAgICAgICAgICAgICAgIHBhZ2VfdHlwZTogY29udGV4dC5wYWdlU2VsZWN0b3IudmFsdWUsXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuX3ByZXZpZXc6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgaXNHbG9iYWw6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBJZiBzaG93aW5nIGJ1dHRvbiwgdXBkYXRlIGFsbCBidXR0b24gc2V0dGluZ3NcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNoZWNrZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCB1cGRhdGVzID0gW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBbZWxlbWVudHMuYnV0dG9uVGV4dCwgYCR7cHJlZml4fV9idXR0b25fdGV4dGBdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBbZWxlbWVudHMuYnV0dG9uTGluaywgYCR7cHJlZml4fV9idXR0b25fbGlua2BdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBbZWxlbWVudHMuYnV0dG9uQmdDb2xvciwgYCR7cHJlZml4fV9idXR0b25fYmdfY29sb3JgXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgW2VsZW1lbnRzLmJ1dHRvblRleHRDb2xvciwgYCR7cHJlZml4fV9idXR0b25fdGV4dF9jb2xvcmBdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBbZWxlbWVudHMuYnV0dG9uU2l6ZSwgYCR7cHJlZml4fV9idXR0b25fc2l6ZWBdXHJcbiAgICAgICAgICAgICAgICAgICAgXTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBbZWxlbWVudCwgZmllbGROYW1lXSBvZiB1cGRhdGVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50ICYmIGVsZW1lbnQudmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IHNtYXJ0VXBkYXRlKGNvbnRleHQsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZFR5cGU6ICdidXR0b24nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkTmFtZTogZmllbGROYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBlbGVtZW50LnZhbHVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpb3VzVmFsdWU6IGVsZW1lbnQuZGVmYXVsdFZhbHVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2VfdHlwZTogY29udGV4dC5wYWdlU2VsZWN0b3IudmFsdWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuX3ByZXZpZXc6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgdXBkYXRpbmcgYnV0dG9uIHZpc2liaWxpdHk6JywgZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheUVycm9yKCdGYWlsZWQgdG8gdXBkYXRlIGJ1dHRvbiB2aXNpYmlsaXR5Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBEZWZpbmUgaW5wdXQgdHlwZXMgYW5kIHRoZWlyIHVwZGF0ZSBzdHJhdGVnaWVzXHJcbiAgICBjb25zdCBpbnB1dENvbmZpZ3MgPSBbXHJcbiAgICAgICAgLy8gVGV4dCBpbnB1dHMgc2hvdWxkIGJlIGRlYm91bmNlZFxyXG4gICAgICAgIFtlbGVtZW50cy5idXR0b25UZXh0LCBgJHtwcmVmaXh9X2J1dHRvbl90ZXh0YCwgJ3RleHQnXSxcclxuICAgICAgICAvLyBMaW5rcyBzaG91bGQgdXBkYXRlIGltbWVkaWF0ZWx5XHJcbiAgICAgICAgW2VsZW1lbnRzLmJ1dHRvbkxpbmssIGAke3ByZWZpeH1fYnV0dG9uX2xpbmtgLCAnYnV0dG9uJ10sXHJcbiAgICAgICAgLy8gQ29sb3JzIHNob3VsZCBiZSBkZWJvdW5jZWRcclxuICAgICAgICBbZWxlbWVudHMuYnV0dG9uQmdDb2xvciwgYCR7cHJlZml4fV9idXR0b25fYmdfY29sb3JgLCAnY29sb3InXSxcclxuICAgICAgICBbZWxlbWVudHMuYnV0dG9uVGV4dENvbG9yLCBgJHtwcmVmaXh9X2J1dHRvbl90ZXh0X2NvbG9yYCwgJ2NvbG9yJ10sXHJcbiAgICAgICAgLy8gU2l6ZSBzaG91bGQgdXBkYXRlIGltbWVkaWF0ZWx5XHJcbiAgICAgICAgW2VsZW1lbnRzLmJ1dHRvblNpemUsIGAke3ByZWZpeH1fYnV0dG9uX3NpemVgLCAnYnV0dG9uJ11cclxuICAgIF07XHJcblxyXG4gICAgaW5wdXRDb25maWdzLmZvckVhY2goKFtlbGVtZW50LCBmaWVsZE5hbWUsIGZpZWxkVHlwZV0pID0+IHtcclxuICAgICAgICBpZiAoZWxlbWVudCkge1xyXG4gICAgICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgYXN5bmMgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHNtYXJ0VXBkYXRlKGNvbnRleHQsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmllbGRUeXBlOiBmaWVsZFR5cGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkTmFtZTogZmllbGROYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy52YWx1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNWYWx1ZTogdGhpcy5kZWZhdWx0VmFsdWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2VfdHlwZTogY29udGV4dC5wYWdlU2VsZWN0b3IudmFsdWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybl9wcmV2aWV3OiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSBkZWZhdWx0VmFsdWUgZm9yIGZ1dHVyZSBjaGFuZ2VzXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUgPSB0aGlzLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGBFcnJvciB1cGRhdGluZyAke2ZpZWxkTmFtZX06YCwgZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXlFcnJvcihgRmFpbGVkIHRvIHVwZGF0ZSBidXR0b24gJHtmaWVsZE5hbWUuc3BsaXQoJ18nKS5wb3AoKX1gKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplQmFubmVyQnV0dG9uRWRpdG9ycyhjb250ZXh0KSB7XHJcbiAgICBjb25zdCBwcmVmaXhlcyA9IFsnaGVybycsICdiYW5uZXJfMicsICdiYW5uZXJfMyddO1xyXG4gICAgcHJlZml4ZXMuZm9yRWFjaChwcmVmaXggPT4ge1xyXG4gICAgICAgIGluaXRpYWxpemVCdXR0b25FZGl0b3IocHJlZml4LCBjb250ZXh0KTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaW5pdGlhbGl6ZUhlcm9MYXlvdXRMaXN0ZW5lcigpIHtcclxuICAgIGNvbnN0IGxheW91dFNlbGVjdG9yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hlcm9fbGF5b3V0Jyk7XHJcbiAgICBpZiAobGF5b3V0U2VsZWN0b3IpIHtcclxuICAgICAgICBsYXlvdXRTZWxlY3Rvci5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgaGFuZGxlQmFubmVyU2xpZGVyVmlzaWJpbGl0eSh0aGlzLnZhbHVlKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSJdLCJuYW1lcyI6WyJfcmVnZW5lcmF0b3JSdW50aW1lIiwiZSIsInQiLCJyIiwiT2JqZWN0IiwicHJvdG90eXBlIiwibiIsImhhc093blByb3BlcnR5IiwibyIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJpIiwiU3ltYm9sIiwiYSIsIml0ZXJhdG9yIiwiYyIsImFzeW5jSXRlcmF0b3IiLCJ1IiwidG9TdHJpbmdUYWciLCJkZWZpbmUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ3cmFwIiwiR2VuZXJhdG9yIiwiY3JlYXRlIiwiQ29udGV4dCIsIm1ha2VJbnZva2VNZXRob2QiLCJ0cnlDYXRjaCIsInR5cGUiLCJhcmciLCJjYWxsIiwiaCIsImwiLCJmIiwicyIsInkiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwicCIsImQiLCJnZXRQcm90b3R5cGVPZiIsInYiLCJ2YWx1ZXMiLCJnIiwiZGVmaW5lSXRlcmF0b3JNZXRob2RzIiwiZm9yRWFjaCIsIl9pbnZva2UiLCJBc3luY0l0ZXJhdG9yIiwiaW52b2tlIiwiX3R5cGVvZiIsInJlc29sdmUiLCJfX2F3YWl0IiwidGhlbiIsImNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnIiwiRXJyb3IiLCJkb25lIiwibWV0aG9kIiwiZGVsZWdhdGUiLCJtYXliZUludm9rZURlbGVnYXRlIiwic2VudCIsIl9zZW50IiwiZGlzcGF0Y2hFeGNlcHRpb24iLCJhYnJ1cHQiLCJUeXBlRXJyb3IiLCJyZXN1bHROYW1lIiwibmV4dCIsIm5leHRMb2MiLCJwdXNoVHJ5RW50cnkiLCJ0cnlMb2MiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhZnRlckxvYyIsInRyeUVudHJpZXMiLCJwdXNoIiwicmVzZXRUcnlFbnRyeSIsImNvbXBsZXRpb24iLCJyZXNldCIsImlzTmFOIiwibGVuZ3RoIiwiZGlzcGxheU5hbWUiLCJpc0dlbmVyYXRvckZ1bmN0aW9uIiwiY29uc3RydWN0b3IiLCJuYW1lIiwibWFyayIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiYXdyYXAiLCJhc3luYyIsIlByb21pc2UiLCJrZXlzIiwicmV2ZXJzZSIsInBvcCIsInByZXYiLCJjaGFyQXQiLCJzbGljZSIsInN0b3AiLCJydmFsIiwiaGFuZGxlIiwiY29tcGxldGUiLCJmaW5pc2giLCJfY2F0Y2giLCJkZWxlZ2F0ZVlpZWxkIiwiX3NsaWNlZFRvQXJyYXkiLCJfYXJyYXlXaXRoSG9sZXMiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVSZXN0IiwiX2FycmF5TGlrZVRvQXJyYXkiLCJ0b1N0cmluZyIsIkFycmF5IiwiZnJvbSIsInRlc3QiLCJpc0FycmF5IiwiYXN5bmNHZW5lcmF0b3JTdGVwIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJhcmd1bWVudHMiLCJhcHBseSIsIl9uZXh0IiwiX3Rocm93IiwiZGlzcGxheUVycm9yIiwic21hcnRVcGRhdGUiLCJoYW5kbGVCYW5uZXJTbGlkZXJWaXNpYmlsaXR5IiwiaW5pdGlhbGl6ZUJ1dHRvbkVkaXRvciIsInByZWZpeCIsImNvbnRleHQiLCJlbGVtZW50cyIsInNob3dCdXR0b24iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY29uY2F0IiwiYnV0dG9uVGV4dCIsImJ1dHRvbkxpbmsiLCJidXR0b25CZ0NvbG9yIiwiYnV0dG9uVGV4dENvbG9yIiwiYnV0dG9uU2l6ZSIsImJ1dHRvbiIsInF1ZXJ5U2VsZWN0b3IiLCJjaGVja2VkIiwiZGF0YXNldCIsImluaXRpYWxTdGF0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJfY2FsbGVlIiwiX3RoaXMiLCJ1cGRhdGVzIiwiX2kiLCJfdXBkYXRlcyIsIl91cGRhdGVzJF9pIiwiZWxlbWVudCIsImZpZWxkTmFtZSIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJpbnB1dCIsImRpc2FibGVkIiwiZmllbGRUeXBlIiwicHJldmlvdXNWYWx1ZSIsInBhZ2VfdHlwZSIsInBhZ2VTZWxlY3RvciIsInJldHVybl9wcmV2aWV3IiwiaXNHbG9iYWwiLCJkZWZhdWx0VmFsdWUiLCJ0MCIsImNvbnNvbGUiLCJlcnJvciIsImlucHV0Q29uZmlncyIsIl9yZWYyIiwiX3JlZjMiLCJfY2FsbGVlMiIsIl9jYWxsZWUyJCIsIl9jb250ZXh0MiIsInNwbGl0IiwiaW5pdGlhbGl6ZUJhbm5lckJ1dHRvbkVkaXRvcnMiLCJwcmVmaXhlcyIsImluaXRpYWxpemVIZXJvTGF5b3V0TGlzdGVuZXIiLCJsYXlvdXRTZWxlY3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./restaurants/static/js/handlers/buttonHandlers.js\n");

/***/ }),

/***/ "./restaurants/static/js/handlers/colorHandlers.js":
/*!*********************************************************!*\
  !*** ./restaurants/static/js/handlers/colorHandlers.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeColorHandlers: () => (/* binding */ initializeColorHandlers)\n/* harmony export */ });\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/errors.js */ \"./restaurants/static/js/utils/errors.js\");\n/* harmony import */ var _utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/previewUpdates.js */ \"./restaurants/static/js/utils/previewUpdates.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\nfunction initializeColorHandlers(context) {\n  // Initialize brand color pickers (Global Settings)\n  var brandColorPickers = document.querySelectorAll('.color-picker[data-color-type]');\n  brandColorPickers.forEach(function (picker) {\n    picker.addEventListener('input', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var colorType;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            colorType = this.dataset.colorType; // e.g., 'primary', 'secondary'\n            console.log('Updating color:', colorType, 'to:', this.value); // Debug log\n            _context.next = 5;\n            return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n              fieldType: 'color',\n              fieldName: colorType,\n              // Just send 'primary', 'secondary', etc.\n              value: this.value,\n              previousValue: this.defaultValue,\n              page_type: context.pageSelector.value,\n              isGlobal: true,\n              // Brand colors are global\n              return_preview: true\n            });\n          case 5:\n            this.defaultValue = this.value;\n            _context.next = 12;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error updating brand color:', _context.t0);\n            (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to update brand color');\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this, [[0, 8]]);\n    })));\n  });\n\n  // Initialize hero text color pickers (Subpage specific)\n  var heroColorInputs = ['hero_heading_color', 'hero_subheading_color', 'banner_2_heading_color', 'banner_2_subheading_color', 'banner_3_heading_color', 'banner_3_subheading_color'];\n  heroColorInputs.forEach(function (id) {\n    var element = document.getElementById(id);\n    if (element) {\n      element.addEventListener('input', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n                fieldType: 'color',\n                fieldName: id,\n                value: this.value,\n                previousValue: this.defaultValue,\n                page_type: context.pageSelector.value,\n                isGlobal: false,\n                // Hero colors are subpage-specific\n                return_preview: true\n              });\n            case 3:\n              // Update the defaultValue for future changes\n              this.defaultValue = this.value;\n              _context2.next = 10;\n              break;\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(\"Error updating \".concat(id, \":\"), _context2.t0);\n              (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)(\"Failed to update \".concat(id.replace(/_/g, ' ')));\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 6]]);\n      })));\n    } else {\n      console.warn(\"Failed to find element: \".concat(id));\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/handlers/colorHandlers.js\n");

/***/ }),

/***/ "./restaurants/static/js/handlers/fontHandlers.js":
/*!********************************************************!*\
  !*** ./restaurants/static/js/handlers/fontHandlers.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeFontHandlers: () => (/* binding */ initializeFontHandlers)\n/* harmony export */ });\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/errors.js */ \"./restaurants/static/js/utils/errors.js\");\n/* harmony import */ var _utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/previewUpdates.js */ \"./restaurants/static/js/utils/previewUpdates.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\nfunction getFontElements() {\n  return {\n    mainFontSelect: document.getElementById('main-font'),\n    heroHeadingFont: document.getElementById('hero_heading_font'),\n    heroSubheadingFont: document.getElementById('hero_subheading_font'),\n    heroHeadingSize: document.getElementById('hero_heading_size'),\n    heroSubheadingSize: document.getElementById('hero_subheading_size'),\n    banner2HeadingFont: document.getElementById('banner_2_heading_font'),\n    banner2SubheadingFont: document.getElementById('banner_2_subheading_font'),\n    banner2HeadingSize: document.getElementById('banner_2_heading_size'),\n    banner2SubheadingSize: document.getElementById('banner_2_subheading_size'),\n    banner3HeadingFont: document.getElementById('banner_3_heading_font'),\n    banner3SubheadingFont: document.getElementById('banner_3_subheading_font'),\n    banner3HeadingSize: document.getElementById('banner_3_heading_size'),\n    banner3SubheadingSize: document.getElementById('banner_3_subheading_size')\n  };\n}\nfunction initializeFontHandlers(context) {\n  var elements = getFontElements();\n\n  // Handle main font (global setting)\n  if (elements.mainFontSelect) {\n    elements.mainFontSelect.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n              fieldType: 'font',\n              fieldName: 'main_font',\n              value: this.value,\n              previousValue: this.defaultValue,\n              page_type: context.pageSelector.value,\n              return_preview: true,\n              isGlobal: true\n            });\n          case 3:\n            this.defaultValue = this.value;\n            _context.next = 10;\n            break;\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error updating main font:', _context.t0);\n            (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to update main font');\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this, [[0, 6]]);\n    })));\n\n    // Add preview on hover\n    elements.mainFontSelect.addEventListener('mouseover', function (e) {\n      if (e.target.tagName === 'OPTION') {\n        e.target.style.fontFamily = e.target.value;\n      }\n    });\n  } else {\n    console.warn('Main font selector not found');\n  }\n\n  // Handle all banner font and size selectors\n  var fontSelectors = document.querySelectorAll('select[id$=\"_heading_font\"], select[id$=\"_subheading_font\"], select[id$=\"_heading_size\"], select[id$=\"_subheading_size\"]');\n  fontSelectors.forEach(function (selector) {\n    selector.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var idParts, isSize, prefix, fieldType, fieldName;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            idParts = this.id.split('_');\n            isSize = this.id.includes('_size'); // Get the correct prefix\n            if (this.id.includes('banner_2')) {\n              prefix = 'banner_2';\n            } else if (this.id.includes('banner_3')) {\n              prefix = 'banner_3';\n            } else {\n              prefix = 'hero';\n            }\n            fieldType = idParts.includes('subheading') ? isSize ? 'subheading_size' : 'subheading_font' : isSize ? 'heading_size' : 'heading_font';\n            fieldName = \"\".concat(prefix, \"_\").concat(fieldType);\n            _context2.next = 8;\n            return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n              fieldType: isSize ? 'size' : 'font',\n              fieldName: fieldName,\n              value: this.value,\n              previousValue: this.defaultValue,\n              page_type: context.pageSelector.value,\n              return_preview: true,\n              isGlobal: false\n            });\n          case 8:\n            // Update the defaultValue for future changes\n            this.defaultValue = this.value;\n            _context2.next = 15;\n            break;\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(\"Error updating \".concat(this.id, \":\"), _context2.t0);\n            (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)(\"Failed to update \".concat(this.id.includes('size') ? 'size' : 'font'));\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, this, [[0, 11]]);\n    })));\n\n    // Add preview on hover for font selectors only\n    if (selector.id.includes('_font')) {\n      selector.addEventListener('mouseover', function (e) {\n        if (e.target.tagName === 'OPTION') {\n          e.target.style.fontFamily = e.target.value;\n        }\n      });\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/handlers/fontHandlers.js\n");

/***/ }),

/***/ "./restaurants/static/js/handlers/imageHandlers.js":
/*!*********************************************************!*\
  !*** ./restaurants/static/js/handlers/imageHandlers.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleImageUpload: () => (/* binding */ handleImageUpload),\n/* harmony export */   initializeImageUploads: () => (/* binding */ initializeImageUploads),\n/* harmony export */   removeHeroImage: () => (/* binding */ removeHeroImage)\n/* harmony export */ });\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/errors.js */ \"./restaurants/static/js/utils/errors.js\");\n/* harmony import */ var _utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/previewUpdates.js */ \"./restaurants/static/js/utils/previewUpdates.js\");\n/* harmony import */ var _utils_cookies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/cookies.js */ \"./restaurants/static/js/utils/cookies.js\");\n/* harmony import */ var _utils_placeholders_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/placeholders.js */ \"./restaurants/static/js/utils/placeholders.js\");\n/* harmony import */ var _components_heroComponents_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/heroComponents.js */ \"./restaurants/static/js/components/heroComponents.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\n\n\n\nfunction attachRemoveListeners(context) {\n  document.querySelectorAll('[id^=\"remove-\"]').forEach(function (button) {\n    // Remove existing listeners by cloning and replacing the button\n    var newButton = button.cloneNode(true);\n    button.parentNode.replaceChild(newButton, button);\n\n    // Add new listener\n    newButton.addEventListener('click', function () {\n      var prefix = newButton.id.replace('remove-', '');\n      removeHeroImage(prefix, context);\n    });\n  });\n}\nfunction getImageElements() {\n  // Match the exact prefixes from the template\n  var elements = {};\n  var prefixes = ['hero_primary', 'banner_2', 'banner_3'];\n  prefixes.forEach(function (prefix) {\n    elements[\"\".concat(prefix, \"UploadButton\")] = document.getElementById(\"upload-\".concat(prefix, \"-button\"));\n    elements[\"\".concat(prefix, \"FileInput\")] = document.getElementById(\"\".concat(prefix, \"-upload\"));\n  });\n  return elements;\n}\nfunction initializeImageUploads(context) {\n  var elements = getImageElements();\n  var prefixes = ['hero_primary', 'banner_2', 'banner_3']; // Match template prefixes\n\n  attachRemoveListeners(context);\n  prefixes.forEach(function (prefix) {\n    var uploadButton = elements[\"\".concat(prefix, \"UploadButton\")];\n    var fileInput = elements[\"\".concat(prefix, \"FileInput\")];\n    if (uploadButton && fileInput) {\n      // Remove existing listeners before adding new ones\n      uploadButton.replaceWith(uploadButton.cloneNode(true));\n      fileInput.replaceWith(fileInput.cloneNode(true));\n\n      // Get the fresh elements after replacing\n      var newUploadButton = document.getElementById(\"upload-\".concat(prefix, \"-button\"));\n      var newFileInput = document.getElementById(\"\".concat(prefix, \"-upload\"));\n      if (newUploadButton && newFileInput) {\n        // Add click listener to upload button\n        newUploadButton.addEventListener('click', function () {\n          if (!newUploadButton.disabled) {\n            newFileInput.click();\n          }\n        });\n\n        // Add change listener to file input\n        newFileInput.addEventListener('change', /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return handleImageUpload(event, context);\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n    }\n  });\n}\nfunction handleImageUpload(_x2, _x3) {\n  return _handleImageUpload.apply(this, arguments);\n}\nfunction _handleImageUpload() {\n  _handleImageUpload = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event, context) {\n    var file, inputId, prefix, bannerType, uploadButton, imageContainer, result, removeButton, previewContainer;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          file = event.target.files[0];\n          if (file) {\n            _context2.next = 3;\n            break;\n          }\n          return _context2.abrupt(\"return\");\n        case 3:\n          inputId = event.target.id;\n          prefix = inputId.replace('-upload', '');\n          bannerType = prefix;\n          uploadButton = document.getElementById(\"upload-\".concat(prefix, \"-button\"));\n          imageContainer = document.getElementById(\"\".concat(prefix, \"-container\")); // Add this\n          if (uploadButton) {\n            uploadButton.textContent = 'Uploading...';\n            uploadButton.disabled = true;\n          }\n          _context2.prev = 9;\n          _context2.next = 12;\n          return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n            fieldType: 'image',\n            fieldName: bannerType,\n            value: file,\n            page_type: context.pageSelector.value,\n            return_preview: true,\n            isFileUpload: true\n          });\n        case 12:\n          result = _context2.sent;\n          if (result.success) {\n            _context2.next = 15;\n            break;\n          }\n          throw new Error(result.error || 'Upload failed');\n        case 15:\n          // Update the editor image container\n          if (imageContainer && result.image_url) {\n            imageContainer.innerHTML = (0,_utils_placeholders_js__WEBPACK_IMPORTED_MODULE_3__.createHeroImageHTML)(result.image_url, prefix, context.heroLayout // Make sure this is available in your context\n            );\n\n            // Reattach remove button listener\n            removeButton = document.getElementById(\"remove-\".concat(prefix));\n            if (removeButton) {\n              removeButton.addEventListener('click', function () {\n                return removeHeroImage(prefix, context);\n              });\n            }\n          }\n\n          // Update the preview\n          if (result.preview_html) {\n            previewContainer = document.getElementById('preview-container');\n            if (previewContainer) {\n              previewContainer.innerHTML = result.preview_html;\n              (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_4__.reinitializeSlider)();\n            }\n          }\n          _context2.next = 23;\n          break;\n        case 19:\n          _context2.prev = 19;\n          _context2.t0 = _context2[\"catch\"](9);\n          console.error('Error uploading image:', _context2.t0);\n          (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)(typeof _context2.t0 === 'string' ? _context2.t0 : _context2.t0.message || 'Failed to upload image');\n        case 23:\n          _context2.prev = 23;\n          if (uploadButton) {\n            uploadButton.textContent = 'Upload Image';\n            uploadButton.disabled = false;\n          }\n          event.target.value = '';\n          return _context2.finish(23);\n        case 27:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[9, 19, 23, 27]]);\n  }));\n  return _handleImageUpload.apply(this, arguments);\n}\nfunction removeHeroImage(_x4, _x5) {\n  return _removeHeroImage.apply(this, arguments);\n}\nfunction _removeHeroImage() {\n  _removeHeroImage = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(prefix, context) {\n    var removeButton, container, result, uploadButton, fileInput;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          if (confirm('Are you sure you want to remove this image?')) {\n            _context4.next = 2;\n            break;\n          }\n          return _context4.abrupt(\"return\");\n        case 2:\n          removeButton = document.getElementById(\"remove-\".concat(prefix));\n          container = document.getElementById(\"\".concat(prefix, \"-container\"));\n          if (!(!removeButton || !container)) {\n            _context4.next = 7;\n            break;\n          }\n          console.error('Required elements not found');\n          return _context4.abrupt(\"return\");\n        case 7:\n          removeButton.disabled = true;\n          console.log('Removing image with prefix:', prefix);\n          _context4.prev = 9;\n          _context4.next = 12;\n          return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n            fieldType: 'image',\n            fieldName: prefix,\n            value: null,\n            page_type: context.pageSelector.value,\n            return_preview: true,\n            isImageRemoval: true\n          });\n        case 12:\n          result = _context4.sent;\n          // Update container with placeholder\n          container.innerHTML = (0,_utils_placeholders_js__WEBPACK_IMPORTED_MODULE_3__.createUploadPlaceholderHTML)(prefix);\n\n          // Reattach event listeners\n          uploadButton = document.getElementById(\"upload-\".concat(prefix, \"-button\"));\n          fileInput = document.getElementById(\"\".concat(prefix, \"-upload\"));\n          if (uploadButton && fileInput) {\n            uploadButton.addEventListener('click', function () {\n              if (!uploadButton.disabled) {\n                fileInput.click();\n              }\n            });\n            fileInput.addEventListener('change', /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(event) {\n                return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                  while (1) switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return handleImageUpload(event, context);\n                    case 2:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }, _callee3);\n              }));\n              return function (_x6) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n          }\n          _context4.next = 23;\n          break;\n        case 19:\n          _context4.prev = 19;\n          _context4.t0 = _context4[\"catch\"](9);\n          console.error('Error removing image:', _context4.t0);\n          (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to remove image: ' + _context4.t0.message);\n        case 23:\n          _context4.prev = 23;\n          if (removeButton) {\n            removeButton.disabled = false;\n          }\n          return _context4.finish(23);\n        case 26:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[9, 19, 23, 26]]);\n  }));\n  return _removeHeroImage.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/handlers/imageHandlers.js\n");

/***/ }),

/***/ "./restaurants/static/js/handlers/layoutHandlers.js":
/*!**********************************************************!*\
  !*** ./restaurants/static/js/handlers/layoutHandlers.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeLayoutHandlers: () => (/* binding */ initializeLayoutHandlers)\n/* harmony export */ });\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/errors.js */ \"./restaurants/static/js/utils/errors.js\");\n/* harmony import */ var _utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/previewUpdates.js */ \"./restaurants/static/js/utils/previewUpdates.js\");\n/* harmony import */ var _components_heroComponents_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/heroComponents.js */ \"./restaurants/static/js/components/heroComponents.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\n\nfunction getLayoutElements() {\n  // Get all component selectors\n  var navInputs = document.querySelectorAll('.component-selector[data-component=\"navigation\"]');\n  var footerInputs = document.querySelectorAll('.component-selector[data-component=\"footer_style\"]');\n  var heroLayoutInputs = document.querySelectorAll('.component-selector[data-component=\"hero_layout\"]');\n  return {\n    navStyleInputs: navInputs,\n    footerStyleInputs: footerInputs,\n    heroLayoutInputs: heroLayoutInputs\n  };\n}\nfunction initializeLayoutHandlers(context) {\n  var elements = getLayoutElements();\n\n  // Navigation Style Handlers\n  elements.navStyleInputs.forEach(function (input) {\n    input.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var previousValue;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            previousValue = this.defaultValue;\n            _context.next = 4;\n            return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n              fieldType: 'layout',\n              fieldName: 'navigation_style',\n              value: this.value,\n              previousValue: previousValue,\n              page_type: context.pageSelector.value,\n              isGlobal: true\n            });\n          case 4:\n            this.defaultValue = this.value;\n            _context.next = 11;\n            break;\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to update navigation style');\n            this.value = this.defaultValue; // Revert on error\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this, [[0, 7]]);\n    })));\n  });\n\n  // Footer Style Handlers\n  elements.footerStyleInputs.forEach(function (input) {\n    input.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var previousValue;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            previousValue = this.defaultValue;\n            _context2.next = 4;\n            return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n              fieldType: 'layout',\n              fieldName: 'footer_style',\n              value: this.value,\n              previousValue: previousValue,\n              page_type: context.pageSelector.value,\n              isGlobal: true\n            });\n          case 4:\n            this.defaultValue = this.value;\n            _context2.next = 11;\n            break;\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to update footer style');\n            this.value = this.defaultValue; // Revert on error\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, this, [[0, 7]]);\n    })));\n  });\n\n  // Hero Layout Style Handlers\n  elements.heroLayoutInputs.forEach(function (input) {\n    input.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var previousValue;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            // Update banner slider visibility first\n            (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_2__.handleBannerSliderVisibility)(this.value);\n            previousValue = this.defaultValue;\n            _context3.next = 5;\n            return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n              fieldType: 'layout',\n              fieldName: 'hero_layout',\n              value: this.value,\n              previousValue: previousValue,\n              page_type: context.pageSelector.value,\n              isGlobal: false\n            });\n          case 5:\n            this.defaultValue = this.value;\n            _context3.next = 13;\n            break;\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to update hero layout style');\n            this.value = this.defaultValue; // Revert on error\n            (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_2__.handleBannerSliderVisibility)(this.defaultValue); // Revert visibility\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, this, [[0, 8]]);\n    })));\n  });\n  return true;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/handlers/layoutHandlers.js\n");

/***/ }),

/***/ "./restaurants/static/js/handlers/publishHandlers.js":
/*!***********************************************************!*\
  !*** ./restaurants/static/js/handlers/publishHandlers.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeAddPageDropdown: () => (/* binding */ initializeAddPageDropdown),\n/* harmony export */   initializePublishToggle: () => (/* binding */ initializePublishToggle),\n/* harmony export */   updatePublishState: () => (/* binding */ updatePublishState)\n/* harmony export */ });\n/* harmony import */ var _utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/previewUpdates.js */ \"./restaurants/static/js/utils/previewUpdates.js\");\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/errors.js */ \"./restaurants/static/js/utils/errors.js\");\n/* harmony import */ var _components_toast_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/toast.js */ \"./restaurants/static/js/components/toast.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\n\nfunction initializePublishToggle(context) {\n  var publishToggle = document.getElementById('publish-toggle');\n  var publishStatus = document.getElementById('publish-status');\n  if (!publishToggle) {\n    console.warn('Publish toggle element not found');\n    return;\n  }\n\n  // Remove existing listeners\n  var newToggle = publishToggle.cloneNode(true);\n  publishToggle.parentNode.replaceChild(newToggle, publishToggle);\n  newToggle.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var previousValue;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          previousValue = !this.checked;\n          _context.next = 4;\n          return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_0__.smartUpdate)(context, {\n            fieldType: 'toggle',\n            fieldName: 'is_published',\n            value: this.checked,\n            previousValue: previousValue,\n            page_type: context.pageSelector.value,\n            return_preview: true,\n            isGlobal: false\n          });\n        case 4:\n          // Update status text after successful update\n          if (publishStatus) {\n            publishStatus.textContent = this.checked ? 'Published' : 'Draft';\n          }\n          _context.next = 12;\n          break;\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('Error updating publish state:', _context.t0);\n          // Revert on error (handled by smartUpdate)\n          if (publishStatus) {\n            publishStatus.textContent = !this.checked ? 'Published' : 'Draft';\n          }\n          (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_1__.displayError)('Failed to update publish state');\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, this, [[0, 7]]);\n  })));\n}\nfunction updatePublishState(isPublished) {\n  var publishToggle = document.getElementById('publish-toggle');\n  var publishStatus = document.getElementById('publish-status');\n  if (publishToggle) {\n    publishToggle.checked = isPublished;\n  }\n  if (publishStatus) {\n    publishStatus.textContent = isPublished ? 'Published' : 'Draft';\n  }\n}\nfunction initializeAddPageDropdown(context) {\n  var addPageDropdown = document.getElementById('available-pages');\n  var pageSelector = document.getElementById('page-selector');\n  if (addPageDropdown) {\n    addPageDropdown.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var selectedPageType, response, addPagesDropdown, yourPagesDropdown, selectedOption, newOption;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            selectedPageType = this.value;\n            console.log('Selected page type:', selectedPageType);\n            if (selectedPageType) {\n              _context2.next = 4;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 4:\n            _context2.prev = 4;\n            _context2.next = 7;\n            return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_0__.smartUpdate)(context, {\n              fieldType: 'new_page',\n              page_type: selectedPageType,\n              return_preview: true\n            });\n          case 7:\n            response = _context2.sent;\n            console.log(\"smartupdate\", response);\n            if (response.success) {\n              // Get both dropdowns\n              addPagesDropdown = document.getElementById('available-pages');\n              yourPagesDropdown = document.getElementById('page-selector'); // Remove the selected option from available pages\n              selectedOption = addPagesDropdown.querySelector(\"option[value=\\\"\".concat(selectedPageType, \"\\\"]\"));\n              if (selectedOption) {\n                selectedOption.remove();\n              }\n\n              // Add the new page to your pages dropdown\n              newOption = document.createElement('option');\n              newOption.value = selectedPageType;\n              newOption.className = 'px-2';\n              newOption.textContent = \"\".concat(selectedPageType.charAt(0).toUpperCase() + selectedPageType.slice(1), \" Page\");\n              yourPagesDropdown.appendChild(newOption);\n              yourPagesDropdown.value = selectedPageType;\n              // Reset the add page dropdown\n              addPagesDropdown.value = '';\n              (0,_components_toast_js__WEBPACK_IMPORTED_MODULE_2__.showToast)(\"\".concat(selectedPageType.charAt(0).toUpperCase() + selectedPageType.slice(1), \" page successfully added!\"));\n            } else {\n              console.error('Failed to create page:', response.error);\n            }\n            _context2.next = 16;\n            break;\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](4);\n            console.error('Error creating new page:', _context2.t0);\n            // Reset the dropdown on error\n            this.value = '';\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, this, [[4, 12]]);\n    })));\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/handlers/publishHandlers.js\n");

/***/ }),

/***/ "./restaurants/static/js/handlers/sizeHandlers.js":
/*!********************************************************!*\
  !*** ./restaurants/static/js/handlers/sizeHandlers.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeHeroSizeHandler: () => (/* binding */ initializeHeroSizeHandler)\n/* harmony export */ });\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/errors.js */ \"./restaurants/static/js/utils/errors.js\");\n/* harmony import */ var _utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/previewUpdates.js */ \"./restaurants/static/js/utils/previewUpdates.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\nfunction initializeHeroSizeHandler(context) {\n  var heroSizeSelect = document.querySelector('select[name=\"hero_size\"]');\n  if (heroSizeSelect) {\n    heroSizeSelect.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var previousValue;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log('Hero size changed to:', this.value);\n            previousValue = this.defaultValue;\n            _context.next = 5;\n            return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n              fieldType: 'size',\n              fieldName: 'hero_size',\n              value: this.value,\n              previousValue: previousValue,\n              page_type: context.pageSelector.value,\n              isGlobal: false // Since hero size is a global setting\n            });\n          case 5:\n            // Update the default value after successful update\n            this.defaultValue = this.value;\n            _context.next = 13;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error updating hero size:', _context.t0);\n            (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to update hero size');\n            // Revert to previous value on error\n            this.value = this.defaultValue;\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this, [[0, 8]]);\n    })));\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXN0YXVyYW50cy9zdGF0aWMvanMvaGFuZGxlcnMvc2l6ZUhhbmRsZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7K0NBQ0EscUpBQUFBLG1CQUFBLFlBQUFBLG9CQUFBLFdBQUFDLENBQUEsU0FBQUMsQ0FBQSxFQUFBRCxDQUFBLE9BQUFFLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxTQUFBLEVBQUFDLENBQUEsR0FBQUgsQ0FBQSxDQUFBSSxjQUFBLEVBQUFDLENBQUEsR0FBQUosTUFBQSxDQUFBSyxjQUFBLGNBQUFQLENBQUEsRUFBQUQsQ0FBQSxFQUFBRSxDQUFBLElBQUFELENBQUEsQ0FBQUQsQ0FBQSxJQUFBRSxDQUFBLENBQUFPLEtBQUEsS0FBQUMsQ0FBQSx3QkFBQUMsTUFBQSxHQUFBQSxNQUFBLE9BQUFDLENBQUEsR0FBQUYsQ0FBQSxDQUFBRyxRQUFBLGtCQUFBQyxDQUFBLEdBQUFKLENBQUEsQ0FBQUssYUFBQSx1QkFBQUMsQ0FBQSxHQUFBTixDQUFBLENBQUFPLFdBQUEsOEJBQUFDLE9BQUFqQixDQUFBLEVBQUFELENBQUEsRUFBQUUsQ0FBQSxXQUFBQyxNQUFBLENBQUFLLGNBQUEsQ0FBQVAsQ0FBQSxFQUFBRCxDQUFBLElBQUFTLEtBQUEsRUFBQVAsQ0FBQSxFQUFBaUIsVUFBQSxNQUFBQyxZQUFBLE1BQUFDLFFBQUEsU0FBQXBCLENBQUEsQ0FBQUQsQ0FBQSxXQUFBa0IsTUFBQSxtQkFBQWpCLENBQUEsSUFBQWlCLE1BQUEsWUFBQUEsT0FBQWpCLENBQUEsRUFBQUQsQ0FBQSxFQUFBRSxDQUFBLFdBQUFELENBQUEsQ0FBQUQsQ0FBQSxJQUFBRSxDQUFBLGdCQUFBb0IsS0FBQXJCLENBQUEsRUFBQUQsQ0FBQSxFQUFBRSxDQUFBLEVBQUFHLENBQUEsUUFBQUssQ0FBQSxHQUFBVixDQUFBLElBQUFBLENBQUEsQ0FBQUksU0FBQSxZQUFBbUIsU0FBQSxHQUFBdkIsQ0FBQSxHQUFBdUIsU0FBQSxFQUFBWCxDQUFBLEdBQUFULE1BQUEsQ0FBQXFCLE1BQUEsQ0FBQWQsQ0FBQSxDQUFBTixTQUFBLEdBQUFVLENBQUEsT0FBQVcsT0FBQSxDQUFBcEIsQ0FBQSxnQkFBQUUsQ0FBQSxDQUFBSyxDQUFBLGVBQUFILEtBQUEsRUFBQWlCLGdCQUFBLENBQUF6QixDQUFBLEVBQUFDLENBQUEsRUFBQVksQ0FBQSxNQUFBRixDQUFBLGFBQUFlLFNBQUExQixDQUFBLEVBQUFELENBQUEsRUFBQUUsQ0FBQSxtQkFBQTBCLElBQUEsWUFBQUMsR0FBQSxFQUFBNUIsQ0FBQSxDQUFBNkIsSUFBQSxDQUFBOUIsQ0FBQSxFQUFBRSxDQUFBLGNBQUFELENBQUEsYUFBQTJCLElBQUEsV0FBQUMsR0FBQSxFQUFBNUIsQ0FBQSxRQUFBRCxDQUFBLENBQUFzQixJQUFBLEdBQUFBLElBQUEsTUFBQVMsQ0FBQSxxQkFBQUMsQ0FBQSxxQkFBQUMsQ0FBQSxnQkFBQUMsQ0FBQSxnQkFBQUMsQ0FBQSxnQkFBQVosVUFBQSxjQUFBYSxrQkFBQSxjQUFBQywyQkFBQSxTQUFBQyxDQUFBLE9BQUFwQixNQUFBLENBQUFvQixDQUFBLEVBQUExQixDQUFBLHFDQUFBMkIsQ0FBQSxHQUFBcEMsTUFBQSxDQUFBcUMsY0FBQSxFQUFBQyxDQUFBLEdBQUFGLENBQUEsSUFBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUFHLE1BQUEsUUFBQUQsQ0FBQSxJQUFBQSxDQUFBLEtBQUF2QyxDQUFBLElBQUFHLENBQUEsQ0FBQXlCLElBQUEsQ0FBQVcsQ0FBQSxFQUFBN0IsQ0FBQSxNQUFBMEIsQ0FBQSxHQUFBRyxDQUFBLE9BQUFFLENBQUEsR0FBQU4sMEJBQUEsQ0FBQWpDLFNBQUEsR0FBQW1CLFNBQUEsQ0FBQW5CLFNBQUEsR0FBQUQsTUFBQSxDQUFBcUIsTUFBQSxDQUFBYyxDQUFBLFlBQUFNLHNCQUFBM0MsQ0FBQSxnQ0FBQTRDLE9BQUEsV0FBQTdDLENBQUEsSUFBQWtCLE1BQUEsQ0FBQWpCLENBQUEsRUFBQUQsQ0FBQSxZQUFBQyxDQUFBLGdCQUFBNkMsT0FBQSxDQUFBOUMsQ0FBQSxFQUFBQyxDQUFBLHNCQUFBOEMsY0FBQTlDLENBQUEsRUFBQUQsQ0FBQSxhQUFBZ0QsT0FBQTlDLENBQUEsRUFBQUssQ0FBQSxFQUFBRyxDQUFBLEVBQUFFLENBQUEsUUFBQUUsQ0FBQSxHQUFBYSxRQUFBLENBQUExQixDQUFBLENBQUFDLENBQUEsR0FBQUQsQ0FBQSxFQUFBTSxDQUFBLG1CQUFBTyxDQUFBLENBQUFjLElBQUEsUUFBQVosQ0FBQSxHQUFBRixDQUFBLENBQUFlLEdBQUEsRUFBQUUsQ0FBQSxHQUFBZixDQUFBLENBQUFQLEtBQUEsU0FBQXNCLENBQUEsZ0JBQUFrQixPQUFBLENBQUFsQixDQUFBLEtBQUExQixDQUFBLENBQUF5QixJQUFBLENBQUFDLENBQUEsZUFBQS9CLENBQUEsQ0FBQWtELE9BQUEsQ0FBQW5CLENBQUEsQ0FBQW9CLE9BQUEsRUFBQUMsSUFBQSxXQUFBbkQsQ0FBQSxJQUFBK0MsTUFBQSxTQUFBL0MsQ0FBQSxFQUFBUyxDQUFBLEVBQUFFLENBQUEsZ0JBQUFYLENBQUEsSUFBQStDLE1BQUEsVUFBQS9DLENBQUEsRUFBQVMsQ0FBQSxFQUFBRSxDQUFBLFFBQUFaLENBQUEsQ0FBQWtELE9BQUEsQ0FBQW5CLENBQUEsRUFBQXFCLElBQUEsV0FBQW5ELENBQUEsSUFBQWUsQ0FBQSxDQUFBUCxLQUFBLEdBQUFSLENBQUEsRUFBQVMsQ0FBQSxDQUFBTSxDQUFBLGdCQUFBZixDQUFBLFdBQUErQyxNQUFBLFVBQUEvQyxDQUFBLEVBQUFTLENBQUEsRUFBQUUsQ0FBQSxTQUFBQSxDQUFBLENBQUFFLENBQUEsQ0FBQWUsR0FBQSxTQUFBM0IsQ0FBQSxFQUFBSyxDQUFBLG9CQUFBRSxLQUFBLFdBQUFBLE1BQUFSLENBQUEsRUFBQUksQ0FBQSxhQUFBZ0QsMkJBQUEsZUFBQXJELENBQUEsV0FBQUEsQ0FBQSxFQUFBRSxDQUFBLElBQUE4QyxNQUFBLENBQUEvQyxDQUFBLEVBQUFJLENBQUEsRUFBQUwsQ0FBQSxFQUFBRSxDQUFBLGdCQUFBQSxDQUFBLEdBQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBa0QsSUFBQSxDQUFBQywwQkFBQSxFQUFBQSwwQkFBQSxJQUFBQSwwQkFBQSxxQkFBQTNCLGlCQUFBMUIsQ0FBQSxFQUFBRSxDQUFBLEVBQUFHLENBQUEsUUFBQUUsQ0FBQSxHQUFBd0IsQ0FBQSxtQkFBQXJCLENBQUEsRUFBQUUsQ0FBQSxRQUFBTCxDQUFBLEtBQUEwQixDQUFBLFFBQUFxQixLQUFBLHNDQUFBL0MsQ0FBQSxLQUFBMkIsQ0FBQSxvQkFBQXhCLENBQUEsUUFBQUUsQ0FBQSxXQUFBSCxLQUFBLEVBQUFSLENBQUEsRUFBQXNELElBQUEsZUFBQWxELENBQUEsQ0FBQW1ELE1BQUEsR0FBQTlDLENBQUEsRUFBQUwsQ0FBQSxDQUFBd0IsR0FBQSxHQUFBakIsQ0FBQSxVQUFBRSxDQUFBLEdBQUFULENBQUEsQ0FBQW9ELFFBQUEsTUFBQTNDLENBQUEsUUFBQUUsQ0FBQSxHQUFBMEMsbUJBQUEsQ0FBQTVDLENBQUEsRUFBQVQsQ0FBQSxPQUFBVyxDQUFBLFFBQUFBLENBQUEsS0FBQW1CLENBQUEsbUJBQUFuQixDQUFBLHFCQUFBWCxDQUFBLENBQUFtRCxNQUFBLEVBQUFuRCxDQUFBLENBQUFzRCxJQUFBLEdBQUF0RCxDQUFBLENBQUF1RCxLQUFBLEdBQUF2RCxDQUFBLENBQUF3QixHQUFBLHNCQUFBeEIsQ0FBQSxDQUFBbUQsTUFBQSxRQUFBakQsQ0FBQSxLQUFBd0IsQ0FBQSxRQUFBeEIsQ0FBQSxHQUFBMkIsQ0FBQSxFQUFBN0IsQ0FBQSxDQUFBd0IsR0FBQSxFQUFBeEIsQ0FBQSxDQUFBd0QsaUJBQUEsQ0FBQXhELENBQUEsQ0FBQXdCLEdBQUEsdUJBQUF4QixDQUFBLENBQUFtRCxNQUFBLElBQUFuRCxDQUFBLENBQUF5RCxNQUFBLFdBQUF6RCxDQUFBLENBQUF3QixHQUFBLEdBQUF0QixDQUFBLEdBQUEwQixDQUFBLE1BQUFLLENBQUEsR0FBQVgsUUFBQSxDQUFBM0IsQ0FBQSxFQUFBRSxDQUFBLEVBQUFHLENBQUEsb0JBQUFpQyxDQUFBLENBQUFWLElBQUEsUUFBQXJCLENBQUEsR0FBQUYsQ0FBQSxDQUFBa0QsSUFBQSxHQUFBckIsQ0FBQSxHQUFBRixDQUFBLEVBQUFNLENBQUEsQ0FBQVQsR0FBQSxLQUFBTSxDQUFBLHFCQUFBMUIsS0FBQSxFQUFBNkIsQ0FBQSxDQUFBVCxHQUFBLEVBQUEwQixJQUFBLEVBQUFsRCxDQUFBLENBQUFrRCxJQUFBLGtCQUFBakIsQ0FBQSxDQUFBVixJQUFBLEtBQUFyQixDQUFBLEdBQUEyQixDQUFBLEVBQUE3QixDQUFBLENBQUFtRCxNQUFBLFlBQUFuRCxDQUFBLENBQUF3QixHQUFBLEdBQUFTLENBQUEsQ0FBQVQsR0FBQSxtQkFBQTZCLG9CQUFBMUQsQ0FBQSxFQUFBRSxDQUFBLFFBQUFHLENBQUEsR0FBQUgsQ0FBQSxDQUFBc0QsTUFBQSxFQUFBakQsQ0FBQSxHQUFBUCxDQUFBLENBQUFhLFFBQUEsQ0FBQVIsQ0FBQSxPQUFBRSxDQUFBLEtBQUFOLENBQUEsU0FBQUMsQ0FBQSxDQUFBdUQsUUFBQSxxQkFBQXBELENBQUEsSUFBQUwsQ0FBQSxDQUFBYSxRQUFBLGVBQUFYLENBQUEsQ0FBQXNELE1BQUEsYUFBQXRELENBQUEsQ0FBQTJCLEdBQUEsR0FBQTVCLENBQUEsRUFBQXlELG1CQUFBLENBQUExRCxDQUFBLEVBQUFFLENBQUEsZUFBQUEsQ0FBQSxDQUFBc0QsTUFBQSxrQkFBQW5ELENBQUEsS0FBQUgsQ0FBQSxDQUFBc0QsTUFBQSxZQUFBdEQsQ0FBQSxDQUFBMkIsR0FBQSxPQUFBa0MsU0FBQSx1Q0FBQTFELENBQUEsaUJBQUE4QixDQUFBLE1BQUF6QixDQUFBLEdBQUFpQixRQUFBLENBQUFwQixDQUFBLEVBQUFQLENBQUEsQ0FBQWEsUUFBQSxFQUFBWCxDQUFBLENBQUEyQixHQUFBLG1CQUFBbkIsQ0FBQSxDQUFBa0IsSUFBQSxTQUFBMUIsQ0FBQSxDQUFBc0QsTUFBQSxZQUFBdEQsQ0FBQSxDQUFBMkIsR0FBQSxHQUFBbkIsQ0FBQSxDQUFBbUIsR0FBQSxFQUFBM0IsQ0FBQSxDQUFBdUQsUUFBQSxTQUFBdEIsQ0FBQSxNQUFBdkIsQ0FBQSxHQUFBRixDQUFBLENBQUFtQixHQUFBLFNBQUFqQixDQUFBLEdBQUFBLENBQUEsQ0FBQTJDLElBQUEsSUFBQXJELENBQUEsQ0FBQUYsQ0FBQSxDQUFBZ0UsVUFBQSxJQUFBcEQsQ0FBQSxDQUFBSCxLQUFBLEVBQUFQLENBQUEsQ0FBQStELElBQUEsR0FBQWpFLENBQUEsQ0FBQWtFLE9BQUEsZUFBQWhFLENBQUEsQ0FBQXNELE1BQUEsS0FBQXRELENBQUEsQ0FBQXNELE1BQUEsV0FBQXRELENBQUEsQ0FBQTJCLEdBQUEsR0FBQTVCLENBQUEsR0FBQUMsQ0FBQSxDQUFBdUQsUUFBQSxTQUFBdEIsQ0FBQSxJQUFBdkIsQ0FBQSxJQUFBVixDQUFBLENBQUFzRCxNQUFBLFlBQUF0RCxDQUFBLENBQUEyQixHQUFBLE9BQUFrQyxTQUFBLHNDQUFBN0QsQ0FBQSxDQUFBdUQsUUFBQSxTQUFBdEIsQ0FBQSxjQUFBZ0MsYUFBQWxFLENBQUEsUUFBQUQsQ0FBQSxLQUFBb0UsTUFBQSxFQUFBbkUsQ0FBQSxZQUFBQSxDQUFBLEtBQUFELENBQUEsQ0FBQXFFLFFBQUEsR0FBQXBFLENBQUEsV0FBQUEsQ0FBQSxLQUFBRCxDQUFBLENBQUFzRSxVQUFBLEdBQUFyRSxDQUFBLEtBQUFELENBQUEsQ0FBQXVFLFFBQUEsR0FBQXRFLENBQUEsV0FBQXVFLFVBQUEsQ0FBQUMsSUFBQSxDQUFBekUsQ0FBQSxjQUFBMEUsY0FBQXpFLENBQUEsUUFBQUQsQ0FBQSxHQUFBQyxDQUFBLENBQUEwRSxVQUFBLFFBQUEzRSxDQUFBLENBQUE0QixJQUFBLG9CQUFBNUIsQ0FBQSxDQUFBNkIsR0FBQSxFQUFBNUIsQ0FBQSxDQUFBMEUsVUFBQSxHQUFBM0UsQ0FBQSxhQUFBeUIsUUFBQXhCLENBQUEsU0FBQXVFLFVBQUEsTUFBQUosTUFBQSxhQUFBbkUsQ0FBQSxDQUFBNEMsT0FBQSxDQUFBc0IsWUFBQSxjQUFBUyxLQUFBLGlCQUFBbEMsT0FBQTFDLENBQUEsUUFBQUEsQ0FBQSxXQUFBQSxDQUFBLFFBQUFFLENBQUEsR0FBQUYsQ0FBQSxDQUFBWSxDQUFBLE9BQUFWLENBQUEsU0FBQUEsQ0FBQSxDQUFBNEIsSUFBQSxDQUFBOUIsQ0FBQSw0QkFBQUEsQ0FBQSxDQUFBaUUsSUFBQSxTQUFBakUsQ0FBQSxPQUFBNkUsS0FBQSxDQUFBN0UsQ0FBQSxDQUFBOEUsTUFBQSxTQUFBdkUsQ0FBQSxPQUFBRyxDQUFBLFlBQUF1RCxLQUFBLGFBQUExRCxDQUFBLEdBQUFQLENBQUEsQ0FBQThFLE1BQUEsT0FBQXpFLENBQUEsQ0FBQXlCLElBQUEsQ0FBQTlCLENBQUEsRUFBQU8sQ0FBQSxVQUFBMEQsSUFBQSxDQUFBeEQsS0FBQSxHQUFBVCxDQUFBLENBQUFPLENBQUEsR0FBQTBELElBQUEsQ0FBQVYsSUFBQSxPQUFBVSxJQUFBLFNBQUFBLElBQUEsQ0FBQXhELEtBQUEsR0FBQVIsQ0FBQSxFQUFBZ0UsSUFBQSxDQUFBVixJQUFBLE9BQUFVLElBQUEsWUFBQXZELENBQUEsQ0FBQXVELElBQUEsR0FBQXZELENBQUEsZ0JBQUFxRCxTQUFBLENBQUFkLE9BQUEsQ0FBQWpELENBQUEsa0NBQUFvQyxpQkFBQSxDQUFBaEMsU0FBQSxHQUFBaUMsMEJBQUEsRUFBQTlCLENBQUEsQ0FBQW9DLENBQUEsbUJBQUFsQyxLQUFBLEVBQUE0QiwwQkFBQSxFQUFBakIsWUFBQSxTQUFBYixDQUFBLENBQUE4QiwwQkFBQSxtQkFBQTVCLEtBQUEsRUFBQTJCLGlCQUFBLEVBQUFoQixZQUFBLFNBQUFnQixpQkFBQSxDQUFBMkMsV0FBQSxHQUFBN0QsTUFBQSxDQUFBbUIsMEJBQUEsRUFBQXJCLENBQUEsd0JBQUFoQixDQUFBLENBQUFnRixtQkFBQSxhQUFBL0UsQ0FBQSxRQUFBRCxDQUFBLHdCQUFBQyxDQUFBLElBQUFBLENBQUEsQ0FBQWdGLFdBQUEsV0FBQWpGLENBQUEsS0FBQUEsQ0FBQSxLQUFBb0MsaUJBQUEsNkJBQUFwQyxDQUFBLENBQUErRSxXQUFBLElBQUEvRSxDQUFBLENBQUFrRixJQUFBLE9BQUFsRixDQUFBLENBQUFtRixJQUFBLGFBQUFsRixDQUFBLFdBQUFFLE1BQUEsQ0FBQWlGLGNBQUEsR0FBQWpGLE1BQUEsQ0FBQWlGLGNBQUEsQ0FBQW5GLENBQUEsRUFBQW9DLDBCQUFBLEtBQUFwQyxDQUFBLENBQUFvRixTQUFBLEdBQUFoRCwwQkFBQSxFQUFBbkIsTUFBQSxDQUFBakIsQ0FBQSxFQUFBZSxDQUFBLHlCQUFBZixDQUFBLENBQUFHLFNBQUEsR0FBQUQsTUFBQSxDQUFBcUIsTUFBQSxDQUFBbUIsQ0FBQSxHQUFBMUMsQ0FBQSxLQUFBRCxDQUFBLENBQUFzRixLQUFBLGFBQUFyRixDQUFBLGFBQUFrRCxPQUFBLEVBQUFsRCxDQUFBLE9BQUEyQyxxQkFBQSxDQUFBRyxhQUFBLENBQUEzQyxTQUFBLEdBQUFjLE1BQUEsQ0FBQTZCLGFBQUEsQ0FBQTNDLFNBQUEsRUFBQVUsQ0FBQSxpQ0FBQWQsQ0FBQSxDQUFBK0MsYUFBQSxHQUFBQSxhQUFBLEVBQUEvQyxDQUFBLENBQUF1RixLQUFBLGFBQUF0RixDQUFBLEVBQUFDLENBQUEsRUFBQUcsQ0FBQSxFQUFBRSxDQUFBLEVBQUFHLENBQUEsZUFBQUEsQ0FBQSxLQUFBQSxDQUFBLEdBQUE4RSxPQUFBLE9BQUE1RSxDQUFBLE9BQUFtQyxhQUFBLENBQUF6QixJQUFBLENBQUFyQixDQUFBLEVBQUFDLENBQUEsRUFBQUcsQ0FBQSxFQUFBRSxDQUFBLEdBQUFHLENBQUEsVUFBQVYsQ0FBQSxDQUFBZ0YsbUJBQUEsQ0FBQTlFLENBQUEsSUFBQVUsQ0FBQSxHQUFBQSxDQUFBLENBQUFxRCxJQUFBLEdBQUFiLElBQUEsV0FBQW5ELENBQUEsV0FBQUEsQ0FBQSxDQUFBc0QsSUFBQSxHQUFBdEQsQ0FBQSxDQUFBUSxLQUFBLEdBQUFHLENBQUEsQ0FBQXFELElBQUEsV0FBQXJCLHFCQUFBLENBQUFELENBQUEsR0FBQXpCLE1BQUEsQ0FBQXlCLENBQUEsRUFBQTNCLENBQUEsZ0JBQUFFLE1BQUEsQ0FBQXlCLENBQUEsRUFBQS9CLENBQUEsaUNBQUFNLE1BQUEsQ0FBQXlCLENBQUEsNkRBQUEzQyxDQUFBLENBQUF5RixJQUFBLGFBQUF4RixDQUFBLFFBQUFELENBQUEsR0FBQUcsTUFBQSxDQUFBRixDQUFBLEdBQUFDLENBQUEsZ0JBQUFHLENBQUEsSUFBQUwsQ0FBQSxFQUFBRSxDQUFBLENBQUF1RSxJQUFBLENBQUFwRSxDQUFBLFVBQUFILENBQUEsQ0FBQXdGLE9BQUEsYUFBQXpCLEtBQUEsV0FBQS9ELENBQUEsQ0FBQTRFLE1BQUEsU0FBQTdFLENBQUEsR0FBQUMsQ0FBQSxDQUFBeUYsR0FBQSxRQUFBMUYsQ0FBQSxJQUFBRCxDQUFBLFNBQUFpRSxJQUFBLENBQUF4RCxLQUFBLEdBQUFSLENBQUEsRUFBQWdFLElBQUEsQ0FBQVYsSUFBQSxPQUFBVSxJQUFBLFdBQUFBLElBQUEsQ0FBQVYsSUFBQSxPQUFBVSxJQUFBLFFBQUFqRSxDQUFBLENBQUEwQyxNQUFBLEdBQUFBLE1BQUEsRUFBQWpCLE9BQUEsQ0FBQXJCLFNBQUEsS0FBQTZFLFdBQUEsRUFBQXhELE9BQUEsRUFBQW1ELEtBQUEsV0FBQUEsTUFBQTVFLENBQUEsYUFBQTRGLElBQUEsV0FBQTNCLElBQUEsV0FBQU4sSUFBQSxRQUFBQyxLQUFBLEdBQUEzRCxDQUFBLE9BQUFzRCxJQUFBLFlBQUFFLFFBQUEsY0FBQUQsTUFBQSxnQkFBQTNCLEdBQUEsR0FBQTVCLENBQUEsT0FBQXVFLFVBQUEsQ0FBQTNCLE9BQUEsQ0FBQTZCLGFBQUEsSUFBQTFFLENBQUEsV0FBQUUsQ0FBQSxrQkFBQUEsQ0FBQSxDQUFBMkYsTUFBQSxPQUFBeEYsQ0FBQSxDQUFBeUIsSUFBQSxPQUFBNUIsQ0FBQSxNQUFBMkUsS0FBQSxFQUFBM0UsQ0FBQSxDQUFBNEYsS0FBQSxjQUFBNUYsQ0FBQSxJQUFBRCxDQUFBLE1BQUE4RixJQUFBLFdBQUFBLEtBQUEsU0FBQXhDLElBQUEsV0FBQXRELENBQUEsUUFBQXVFLFVBQUEsSUFBQUcsVUFBQSxrQkFBQTFFLENBQUEsQ0FBQTJCLElBQUEsUUFBQTNCLENBQUEsQ0FBQTRCLEdBQUEsY0FBQW1FLElBQUEsS0FBQW5DLGlCQUFBLFdBQUFBLGtCQUFBN0QsQ0FBQSxhQUFBdUQsSUFBQSxRQUFBdkQsQ0FBQSxNQUFBRSxDQUFBLGtCQUFBK0YsT0FBQTVGLENBQUEsRUFBQUUsQ0FBQSxXQUFBSyxDQUFBLENBQUFnQixJQUFBLFlBQUFoQixDQUFBLENBQUFpQixHQUFBLEdBQUE3QixDQUFBLEVBQUFFLENBQUEsQ0FBQStELElBQUEsR0FBQTVELENBQUEsRUFBQUUsQ0FBQSxLQUFBTCxDQUFBLENBQUFzRCxNQUFBLFdBQUF0RCxDQUFBLENBQUEyQixHQUFBLEdBQUE1QixDQUFBLEtBQUFNLENBQUEsYUFBQUEsQ0FBQSxRQUFBaUUsVUFBQSxDQUFBTSxNQUFBLE1BQUF2RSxDQUFBLFNBQUFBLENBQUEsUUFBQUcsQ0FBQSxRQUFBOEQsVUFBQSxDQUFBakUsQ0FBQSxHQUFBSyxDQUFBLEdBQUFGLENBQUEsQ0FBQWlFLFVBQUEsaUJBQUFqRSxDQUFBLENBQUEwRCxNQUFBLFNBQUE2QixNQUFBLGFBQUF2RixDQUFBLENBQUEwRCxNQUFBLFNBQUF3QixJQUFBLFFBQUE5RSxDQUFBLEdBQUFULENBQUEsQ0FBQXlCLElBQUEsQ0FBQXBCLENBQUEsZUFBQU0sQ0FBQSxHQUFBWCxDQUFBLENBQUF5QixJQUFBLENBQUFwQixDQUFBLHFCQUFBSSxDQUFBLElBQUFFLENBQUEsYUFBQTRFLElBQUEsR0FBQWxGLENBQUEsQ0FBQTJELFFBQUEsU0FBQTRCLE1BQUEsQ0FBQXZGLENBQUEsQ0FBQTJELFFBQUEsZ0JBQUF1QixJQUFBLEdBQUFsRixDQUFBLENBQUE0RCxVQUFBLFNBQUEyQixNQUFBLENBQUF2RixDQUFBLENBQUE0RCxVQUFBLGNBQUF4RCxDQUFBLGFBQUE4RSxJQUFBLEdBQUFsRixDQUFBLENBQUEyRCxRQUFBLFNBQUE0QixNQUFBLENBQUF2RixDQUFBLENBQUEyRCxRQUFBLHFCQUFBckQsQ0FBQSxRQUFBc0MsS0FBQSxxREFBQXNDLElBQUEsR0FBQWxGLENBQUEsQ0FBQTRELFVBQUEsU0FBQTJCLE1BQUEsQ0FBQXZGLENBQUEsQ0FBQTRELFVBQUEsWUFBQVIsTUFBQSxXQUFBQSxPQUFBN0QsQ0FBQSxFQUFBRCxDQUFBLGFBQUFFLENBQUEsUUFBQXNFLFVBQUEsQ0FBQU0sTUFBQSxNQUFBNUUsQ0FBQSxTQUFBQSxDQUFBLFFBQUFLLENBQUEsUUFBQWlFLFVBQUEsQ0FBQXRFLENBQUEsT0FBQUssQ0FBQSxDQUFBNkQsTUFBQSxTQUFBd0IsSUFBQSxJQUFBdkYsQ0FBQSxDQUFBeUIsSUFBQSxDQUFBdkIsQ0FBQSx3QkFBQXFGLElBQUEsR0FBQXJGLENBQUEsQ0FBQStELFVBQUEsUUFBQTVELENBQUEsR0FBQUgsQ0FBQSxhQUFBRyxDQUFBLGlCQUFBVCxDQUFBLG1CQUFBQSxDQUFBLEtBQUFTLENBQUEsQ0FBQTBELE1BQUEsSUFBQXBFLENBQUEsSUFBQUEsQ0FBQSxJQUFBVSxDQUFBLENBQUE0RCxVQUFBLEtBQUE1RCxDQUFBLGNBQUFFLENBQUEsR0FBQUYsQ0FBQSxHQUFBQSxDQUFBLENBQUFpRSxVQUFBLGNBQUEvRCxDQUFBLENBQUFnQixJQUFBLEdBQUEzQixDQUFBLEVBQUFXLENBQUEsQ0FBQWlCLEdBQUEsR0FBQTdCLENBQUEsRUFBQVUsQ0FBQSxTQUFBOEMsTUFBQSxnQkFBQVMsSUFBQSxHQUFBdkQsQ0FBQSxDQUFBNEQsVUFBQSxFQUFBbkMsQ0FBQSxTQUFBK0QsUUFBQSxDQUFBdEYsQ0FBQSxNQUFBc0YsUUFBQSxXQUFBQSxTQUFBakcsQ0FBQSxFQUFBRCxDQUFBLG9CQUFBQyxDQUFBLENBQUEyQixJQUFBLFFBQUEzQixDQUFBLENBQUE0QixHQUFBLHFCQUFBNUIsQ0FBQSxDQUFBMkIsSUFBQSxtQkFBQTNCLENBQUEsQ0FBQTJCLElBQUEsUUFBQXFDLElBQUEsR0FBQWhFLENBQUEsQ0FBQTRCLEdBQUEsZ0JBQUE1QixDQUFBLENBQUEyQixJQUFBLFNBQUFvRSxJQUFBLFFBQUFuRSxHQUFBLEdBQUE1QixDQUFBLENBQUE0QixHQUFBLE9BQUEyQixNQUFBLGtCQUFBUyxJQUFBLHlCQUFBaEUsQ0FBQSxDQUFBMkIsSUFBQSxJQUFBNUIsQ0FBQSxVQUFBaUUsSUFBQSxHQUFBakUsQ0FBQSxHQUFBbUMsQ0FBQSxLQUFBZ0UsTUFBQSxXQUFBQSxPQUFBbEcsQ0FBQSxhQUFBRCxDQUFBLFFBQUF3RSxVQUFBLENBQUFNLE1BQUEsTUFBQTlFLENBQUEsU0FBQUEsQ0FBQSxRQUFBRSxDQUFBLFFBQUFzRSxVQUFBLENBQUF4RSxDQUFBLE9BQUFFLENBQUEsQ0FBQW9FLFVBQUEsS0FBQXJFLENBQUEsY0FBQWlHLFFBQUEsQ0FBQWhHLENBQUEsQ0FBQXlFLFVBQUEsRUFBQXpFLENBQUEsQ0FBQXFFLFFBQUEsR0FBQUcsYUFBQSxDQUFBeEUsQ0FBQSxHQUFBaUMsQ0FBQSx5QkFBQWlFLE9BQUFuRyxDQUFBLGFBQUFELENBQUEsUUFBQXdFLFVBQUEsQ0FBQU0sTUFBQSxNQUFBOUUsQ0FBQSxTQUFBQSxDQUFBLFFBQUFFLENBQUEsUUFBQXNFLFVBQUEsQ0FBQXhFLENBQUEsT0FBQUUsQ0FBQSxDQUFBa0UsTUFBQSxLQUFBbkUsQ0FBQSxRQUFBSSxDQUFBLEdBQUFILENBQUEsQ0FBQXlFLFVBQUEsa0JBQUF0RSxDQUFBLENBQUF1QixJQUFBLFFBQUFyQixDQUFBLEdBQUFGLENBQUEsQ0FBQXdCLEdBQUEsRUFBQTZDLGFBQUEsQ0FBQXhFLENBQUEsWUFBQUssQ0FBQSxZQUFBK0MsS0FBQSw4QkFBQStDLGFBQUEsV0FBQUEsY0FBQXJHLENBQUEsRUFBQUUsQ0FBQSxFQUFBRyxDQUFBLGdCQUFBb0QsUUFBQSxLQUFBNUMsUUFBQSxFQUFBNkIsTUFBQSxDQUFBMUMsQ0FBQSxHQUFBZ0UsVUFBQSxFQUFBOUQsQ0FBQSxFQUFBZ0UsT0FBQSxFQUFBN0QsQ0FBQSxvQkFBQW1ELE1BQUEsVUFBQTNCLEdBQUEsR0FBQTVCLENBQUEsR0FBQWtDLENBQUEsT0FBQW5DLENBQUE7QUFBQSxTQUFBc0csbUJBQUFqRyxDQUFBLEVBQUFKLENBQUEsRUFBQUQsQ0FBQSxFQUFBRSxDQUFBLEVBQUFLLENBQUEsRUFBQUssQ0FBQSxFQUFBRSxDQUFBLGNBQUFKLENBQUEsR0FBQUwsQ0FBQSxDQUFBTyxDQUFBLEVBQUFFLENBQUEsR0FBQUUsQ0FBQSxHQUFBTixDQUFBLENBQUFELEtBQUEsV0FBQUosQ0FBQSxnQkFBQUwsQ0FBQSxDQUFBSyxDQUFBLEtBQUFLLENBQUEsQ0FBQTZDLElBQUEsR0FBQXRELENBQUEsQ0FBQWUsQ0FBQSxJQUFBd0UsT0FBQSxDQUFBdEMsT0FBQSxDQUFBbEMsQ0FBQSxFQUFBb0MsSUFBQSxDQUFBbEQsQ0FBQSxFQUFBSyxDQUFBO0FBQUEsU0FBQWdHLGtCQUFBbEcsQ0FBQSw2QkFBQUosQ0FBQSxTQUFBRCxDQUFBLEdBQUF3RyxTQUFBLGFBQUFoQixPQUFBLFdBQUF0RixDQUFBLEVBQUFLLENBQUEsUUFBQUssQ0FBQSxHQUFBUCxDQUFBLENBQUFvRyxLQUFBLENBQUF4RyxDQUFBLEVBQUFELENBQUEsWUFBQTBHLE1BQUFyRyxDQUFBLElBQUFpRyxrQkFBQSxDQUFBMUYsQ0FBQSxFQUFBVixDQUFBLEVBQUFLLENBQUEsRUFBQW1HLEtBQUEsRUFBQUMsTUFBQSxVQUFBdEcsQ0FBQSxjQUFBc0csT0FBQXRHLENBQUEsSUFBQWlHLGtCQUFBLENBQUExRixDQUFBLEVBQUFWLENBQUEsRUFBQUssQ0FBQSxFQUFBbUcsS0FBQSxFQUFBQyxNQUFBLFdBQUF0RyxDQUFBLEtBQUFxRyxLQUFBO0FBRGtEO0FBQ087QUFFbEQsU0FBU0kseUJBQXlCQSxDQUFDQyxPQUFPLEVBQUU7RUFDL0MsSUFBTUMsY0FBYyxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQywwQkFBMEIsQ0FBQztFQUV6RSxJQUFJRixjQUFjLEVBQUU7SUFDaEJBLGNBQWMsQ0FBQ0csZ0JBQWdCLENBQUMsUUFBUSxlQUFBWixpQkFBQSxjQUFBeEcsbUJBQUEsR0FBQW9GLElBQUEsQ0FBRSxTQUFBaUMsUUFBQTtNQUFBLElBQUFDLGFBQUE7TUFBQSxPQUFBdEgsbUJBQUEsR0FBQXVCLElBQUEsVUFBQWdHLFNBQUFDLFFBQUE7UUFBQSxrQkFBQUEsUUFBQSxDQUFBM0IsSUFBQSxHQUFBMkIsUUFBQSxDQUFBdEQsSUFBQTtVQUFBO1lBQUFzRCxRQUFBLENBQUEzQixJQUFBO1lBRWxDNEIsT0FBTyxDQUFDQyxHQUFHLENBQUMsdUJBQXVCLEVBQUUsSUFBSSxDQUFDaEgsS0FBSyxDQUFDO1lBQzFDNEcsYUFBYSxHQUFHLElBQUksQ0FBQ0ssWUFBWTtZQUFBSCxRQUFBLENBQUF0RCxJQUFBO1lBQUEsT0FFakM0QyxxRUFBVyxDQUFDRSxPQUFPLEVBQUU7Y0FDdkJZLFNBQVMsRUFBRSxNQUFNO2NBQ2pCQyxTQUFTLEVBQUUsV0FBVztjQUN0Qm5ILEtBQUssRUFBRSxJQUFJLENBQUNBLEtBQUs7Y0FDakI0RyxhQUFhLEVBQUVBLGFBQWE7Y0FDNUJRLFNBQVMsRUFBRWQsT0FBTyxDQUFDZSxZQUFZLENBQUNySCxLQUFLO2NBQ3JDc0gsUUFBUSxFQUFFLEtBQUssQ0FBRTtZQUNyQixDQUFDLENBQUM7VUFBQTtZQUVGO1lBQ0EsSUFBSSxDQUFDTCxZQUFZLEdBQUcsSUFBSSxDQUFDakgsS0FBSztZQUFDOEcsUUFBQSxDQUFBdEQsSUFBQTtZQUFBO1VBQUE7WUFBQXNELFFBQUEsQ0FBQTNCLElBQUE7WUFBQTJCLFFBQUEsQ0FBQVMsRUFBQSxHQUFBVCxRQUFBO1lBRy9CQyxPQUFPLENBQUNTLEtBQUssQ0FBQywyQkFBMkIsRUFBQVYsUUFBQSxDQUFBUyxFQUFPLENBQUM7WUFDakRwQiw4REFBWSxDQUFDLDRCQUE0QixDQUFDO1lBQzFDO1lBQ0EsSUFBSSxDQUFDbkcsS0FBSyxHQUFHLElBQUksQ0FBQ2lILFlBQVk7VUFBQztVQUFBO1lBQUEsT0FBQUgsUUFBQSxDQUFBeEIsSUFBQTtRQUFBO01BQUEsR0FBQXFCLE9BQUE7SUFBQSxDQUV0QyxHQUFDO0VBQ047QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXRpYy8uL3Jlc3RhdXJhbnRzL3N0YXRpYy9qcy9oYW5kbGVycy9zaXplSGFuZGxlcnMuanM/NDJmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkaXNwbGF5RXJyb3IgfSBmcm9tICcuLi91dGlscy9lcnJvcnMuanMnO1xyXG5pbXBvcnQgeyBzbWFydFVwZGF0ZSB9IGZyb20gJy4uL3V0aWxzL3ByZXZpZXdVcGRhdGVzLmpzJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplSGVyb1NpemVIYW5kbGVyKGNvbnRleHQpIHtcclxuICAgIGNvbnN0IGhlcm9TaXplU2VsZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcignc2VsZWN0W25hbWU9XCJoZXJvX3NpemVcIl0nKTtcclxuICAgIFxyXG4gICAgaWYgKGhlcm9TaXplU2VsZWN0KSB7XHJcbiAgICAgICAgaGVyb1NpemVTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgYXN5bmMgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnSGVybyBzaXplIGNoYW5nZWQgdG86JywgdGhpcy52YWx1ZSk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBwcmV2aW91c1ZhbHVlID0gdGhpcy5kZWZhdWx0VmFsdWU7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGF3YWl0IHNtYXJ0VXBkYXRlKGNvbnRleHQsIHtcclxuICAgICAgICAgICAgICAgICAgICBmaWVsZFR5cGU6ICdzaXplJyxcclxuICAgICAgICAgICAgICAgICAgICBmaWVsZE5hbWU6ICdoZXJvX3NpemUnLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnZhbHVlLFxyXG4gICAgICAgICAgICAgICAgICAgIHByZXZpb3VzVmFsdWU6IHByZXZpb3VzVmFsdWUsXHJcbiAgICAgICAgICAgICAgICAgICAgcGFnZV90eXBlOiBjb250ZXh0LnBhZ2VTZWxlY3Rvci52YWx1ZSxcclxuICAgICAgICAgICAgICAgICAgICBpc0dsb2JhbDogZmFsc2UgIC8vIFNpbmNlIGhlcm8gc2l6ZSBpcyBhIGdsb2JhbCBzZXR0aW5nXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBVcGRhdGUgdGhlIGRlZmF1bHQgdmFsdWUgYWZ0ZXIgc3VjY2Vzc2Z1bCB1cGRhdGVcclxuICAgICAgICAgICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlID0gdGhpcy52YWx1ZTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgdXBkYXRpbmcgaGVybyBzaXplOicsIGVycm9yKTtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXlFcnJvcignRmFpbGVkIHRvIHVwZGF0ZSBoZXJvIHNpemUnKTtcclxuICAgICAgICAgICAgICAgIC8vIFJldmVydCB0byBwcmV2aW91cyB2YWx1ZSBvbiBlcnJvclxyXG4gICAgICAgICAgICAgICAgdGhpcy52YWx1ZSA9IHRoaXMuZGVmYXVsdFZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0iXSwibmFtZXMiOlsiX3JlZ2VuZXJhdG9yUnVudGltZSIsImUiLCJ0IiwiciIsIk9iamVjdCIsInByb3RvdHlwZSIsIm4iLCJoYXNPd25Qcm9wZXJ0eSIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiaSIsIlN5bWJvbCIsImEiLCJpdGVyYXRvciIsImMiLCJhc3luY0l0ZXJhdG9yIiwidSIsInRvU3RyaW5nVGFnIiwiZGVmaW5lIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwid3JhcCIsIkdlbmVyYXRvciIsImNyZWF0ZSIsIkNvbnRleHQiLCJtYWtlSW52b2tlTWV0aG9kIiwidHJ5Q2F0Y2giLCJ0eXBlIiwiYXJnIiwiY2FsbCIsImgiLCJsIiwiZiIsInMiLCJ5IiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsInAiLCJkIiwiZ2V0UHJvdG90eXBlT2YiLCJ2IiwidmFsdWVzIiwiZyIsImRlZmluZUl0ZXJhdG9yTWV0aG9kcyIsImZvckVhY2giLCJfaW52b2tlIiwiQXN5bmNJdGVyYXRvciIsImludm9rZSIsIl90eXBlb2YiLCJyZXNvbHZlIiwiX19hd2FpdCIsInRoZW4iLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsIkVycm9yIiwiZG9uZSIsIm1ldGhvZCIsImRlbGVnYXRlIiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsInNlbnQiLCJfc2VudCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiYWJydXB0IiwiVHlwZUVycm9yIiwicmVzdWx0TmFtZSIsIm5leHQiLCJuZXh0TG9jIiwicHVzaFRyeUVudHJ5IiwidHJ5TG9jIiwiY2F0Y2hMb2MiLCJmaW5hbGx5TG9jIiwiYWZ0ZXJMb2MiLCJ0cnlFbnRyaWVzIiwicHVzaCIsInJlc2V0VHJ5RW50cnkiLCJjb21wbGV0aW9uIiwicmVzZXQiLCJpc05hTiIsImxlbmd0aCIsImRpc3BsYXlOYW1lIiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsImNvbnN0cnVjdG9yIiwibmFtZSIsIm1hcmsiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsImF3cmFwIiwiYXN5bmMiLCJQcm9taXNlIiwia2V5cyIsInJldmVyc2UiLCJwb3AiLCJwcmV2IiwiY2hhckF0Iiwic2xpY2UiLCJzdG9wIiwicnZhbCIsImhhbmRsZSIsImNvbXBsZXRlIiwiZmluaXNoIiwiX2NhdGNoIiwiZGVsZWdhdGVZaWVsZCIsImFzeW5jR2VuZXJhdG9yU3RlcCIsIl9hc3luY1RvR2VuZXJhdG9yIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJfbmV4dCIsIl90aHJvdyIsImRpc3BsYXlFcnJvciIsInNtYXJ0VXBkYXRlIiwiaW5pdGlhbGl6ZUhlcm9TaXplSGFuZGxlciIsImNvbnRleHQiLCJoZXJvU2l6ZVNlbGVjdCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJfY2FsbGVlIiwicHJldmlvdXNWYWx1ZSIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJjb25zb2xlIiwibG9nIiwiZGVmYXVsdFZhbHVlIiwiZmllbGRUeXBlIiwiZmllbGROYW1lIiwicGFnZV90eXBlIiwicGFnZVNlbGVjdG9yIiwiaXNHbG9iYWwiLCJ0MCIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./restaurants/static/js/handlers/sizeHandlers.js\n");

/***/ }),

/***/ "./restaurants/static/js/handlers/textHandlers.js":
/*!********************************************************!*\
  !*** ./restaurants/static/js/handlers/textHandlers.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeTextInputs: () => (/* binding */ initializeTextInputs)\n/* harmony export */ });\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/errors.js */ \"./restaurants/static/js/utils/errors.js\");\n/* harmony import */ var _utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/previewUpdates.js */ \"./restaurants/static/js/utils/previewUpdates.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\nfunction initializeBannerText(prefix, context) {\n  var showHeadingId = \"show_\".concat(prefix, \"_heading\");\n  var showSubheadingId = \"show_\".concat(prefix, \"_subheading\");\n  var headingId = \"\".concat(prefix, \"_heading\");\n  var subheadingId = \"\".concat(prefix, \"_subheading\");\n\n  // Get elements\n  var showHeading = document.getElementById(showHeadingId);\n  var showSubheading = document.getElementById(showSubheadingId);\n  var headingInput = document.getElementById(headingId);\n  var subheadingInput = document.getElementById(subheadingId);\n\n  // Initialize heading checkbox\n  if (showHeading) {\n    showHeading.checked = showHeading.dataset.initialState === 'true';\n    showHeading.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var currentPage;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (headingInput) {\n              headingInput.disabled = !this.checked;\n            }\n            _context.prev = 1;\n            currentPage = context.pageSelector.value;\n            console.log('Updating heading visibility for page:', currentPage);\n            _context.next = 6;\n            return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n              fieldType: 'toggle',\n              fieldName: showHeadingId,\n              value: this.checked,\n              previousValue: !this.checked,\n              page_type: currentPage,\n              // Use current page from selector\n              isGlobal: false,\n              return_preview: true\n            });\n          case 6:\n            _context.next = 13;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.error('Error updating heading visibility:', _context.t0);\n            (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to update heading visibility');\n            // Revert the checkbox state on error\n            this.checked = !this.checked;\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this, [[1, 8]]);\n    })));\n  }\n  if (showSubheading) {\n    showSubheading.checked = showSubheading.dataset.initialState === 'true';\n    showSubheading.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var currentPage;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (subheadingInput) {\n              // Fixed: was using headingInput\n              subheadingInput.disabled = !this.checked;\n            }\n            _context2.prev = 1;\n            currentPage = context.pageSelector.value;\n            console.log('Updating subheading visibility for page:', currentPage);\n            _context2.next = 6;\n            return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n              fieldType: 'toggle',\n              fieldName: showSubheadingId,\n              value: this.checked,\n              previousValue: !this.checked,\n              page_type: currentPage,\n              // Use current page from selector\n              isGlobal: false,\n              return_preview: true\n            });\n          case 6:\n            _context2.next = 13;\n            break;\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error('Error updating subheading visibility:', _context2.t0);\n            (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to update subheading visibility');\n            // Revert the checkbox state on error\n            this.checked = !this.checked;\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, this, [[1, 8]]);\n    })));\n  }\n\n  // Initialize text inputs\n  [headingInput, subheadingInput].forEach(function (input) {\n    if (input) {\n      var lastValue = input.value; // Store initial value\n\n      input.addEventListener('input', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var currentPage;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              currentPage = context.pageSelector.value;\n              console.log(\"Updating \".concat(this.id, \" for page:\"), currentPage);\n              _context3.next = 5;\n              return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_1__.smartUpdate)(context, {\n                fieldType: 'text',\n                fieldName: this.id,\n                value: this.value,\n                previousValue: lastValue,\n                page_type: currentPage,\n                // Use current page from selector\n                isGlobal: false,\n                return_preview: true\n              });\n            case 5:\n              // Update lastValue after successful update\n              lastValue = this.value;\n              _context3.next = 13;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error updating text:', _context3.t0);\n              (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to update text');\n              // Revert to last known good value on error\n              this.value = lastValue;\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 8]]);\n      })));\n    }\n  });\n}\nfunction initializeTextInputs(context) {\n  initializeBannerText('hero', context);\n  initializeBannerText('banner_2', context);\n  initializeBannerText('banner_3', context);\n}\n\n// export async function updateHeroText(field, value, context) {\n//     console.log(`Attempting to update ${field} to:`, value);\n//     console.log('Full payload:', {\n//         field: field,\n//         value: value,\n//         page_type: context.pageSelector.value\n//     });\n//     try {\n//         const response = await fetch(`/${context.business_subdirectory}/update-hero/`, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'X-CSRFToken': getCookie('csrftoken'),\n//             },\n//             body: JSON.stringify({\n//                 field: field,\n//                 value: value,\n//                 page_type: context.pageSelector.value\n//             })\n//         });\n\n//         if (!response.ok) {\n//             const errorData = await response.json();\n//             console.error('Update failed:', errorData);\n//             throw new Error(errorData.error || 'Failed to update text');\n//         }\n\n//         const data = await response.json();\n//         console.log('Update response:', data);\n//         if (data.success) {\n//             console.log('Updating component preview');\n//             await updatePreview(context.pageSelector.value, context, false);\n//             // await updateComponentPreview(field, value, context, false);\n//         } else {\n//             throw new Error(data.error || 'Update failed');\n//         }\n//     } catch (error) {\n//         console.error('Error:', error);\n//         displayError('Failed to update text: ' + error.message);\n//     }\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/handlers/textHandlers.js\n");

/***/ }),

/***/ "./restaurants/static/js/layoutEditor.js":
/*!***********************************************!*\
  !*** ./restaurants/static/js/layoutEditor.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/errors.js */ \"./restaurants/static/js/utils/errors.js\");\n/* harmony import */ var _utils_placeholders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/placeholders.js */ \"./restaurants/static/js/utils/placeholders.js\");\n/* harmony import */ var _handlers_imageHandlers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./handlers/imageHandlers.js */ \"./restaurants/static/js/handlers/imageHandlers.js\");\n/* harmony import */ var _handlers_textHandlers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./handlers/textHandlers.js */ \"./restaurants/static/js/handlers/textHandlers.js\");\n/* harmony import */ var _handlers_sizeHandlers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./handlers/sizeHandlers.js */ \"./restaurants/static/js/handlers/sizeHandlers.js\");\n/* harmony import */ var _handlers_colorHandlers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./handlers/colorHandlers.js */ \"./restaurants/static/js/handlers/colorHandlers.js\");\n/* harmony import */ var _handlers_fontHandlers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./handlers/fontHandlers.js */ \"./restaurants/static/js/handlers/fontHandlers.js\");\n/* harmony import */ var _handlers_layoutHandlers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./handlers/layoutHandlers.js */ \"./restaurants/static/js/handlers/layoutHandlers.js\");\n/* harmony import */ var _handlers_alignmentHandlers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./handlers/alignmentHandlers.js */ \"./restaurants/static/js/handlers/alignmentHandlers.js\");\n/* harmony import */ var _handlers_buttonHandlers_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./handlers/buttonHandlers.js */ \"./restaurants/static/js/handlers/buttonHandlers.js\");\n/* harmony import */ var _handlers_publishHandlers_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./handlers/publishHandlers.js */ \"./restaurants/static/js/handlers/publishHandlers.js\");\n/* harmony import */ var _utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/previewUpdates.js */ \"./restaurants/static/js/utils/previewUpdates.js\");\n/* harmony import */ var _components_heroComponents_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/heroComponents.js */ \"./restaurants/static/js/components/heroComponents.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction initializeEditor() {\n  return _initializeEditor.apply(this, arguments);\n}\nfunction _initializeEditor() {\n  _initializeEditor = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    var editorConfig, pageSelectorElement, context;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          // Get required elements\n          editorConfig = JSON.parse(document.getElementById('editor-config').textContent);\n          pageSelectorElement = document.getElementById('page-selector');\n          if (!(!editorConfig || !pageSelectorElement)) {\n            _context4.next = 5;\n            break;\n          }\n          throw new Error('Required elements not found');\n        case 5:\n          // Create context object\n          context = {\n            business_subdirectory: editorConfig.business_subdirectory,\n            pageSelector: pageSelectorElement,\n            initialData: editorConfig\n          }; // Initialize all handlers\n          _context4.prev = 6;\n          _context4.next = 9;\n          return initializePageData(context);\n        case 9:\n          (0,_handlers_publishHandlers_js__WEBPACK_IMPORTED_MODULE_10__.initializePublishToggle)(context);\n          (0,_handlers_publishHandlers_js__WEBPACK_IMPORTED_MODULE_10__.initializeAddPageDropdown)(context);\n          (0,_handlers_buttonHandlers_js__WEBPACK_IMPORTED_MODULE_9__.initializeHeroLayoutListener)();\n          (0,_handlers_buttonHandlers_js__WEBPACK_IMPORTED_MODULE_9__.initializeBannerButtonEditors)(context);\n          (0,_handlers_layoutHandlers_js__WEBPACK_IMPORTED_MODULE_7__.initializeLayoutHandlers)(context);\n          (0,_handlers_colorHandlers_js__WEBPACK_IMPORTED_MODULE_5__.initializeColorHandlers)(context);\n          (0,_handlers_imageHandlers_js__WEBPACK_IMPORTED_MODULE_2__.initializeImageUploads)(context);\n          (0,_handlers_textHandlers_js__WEBPACK_IMPORTED_MODULE_3__.initializeTextInputs)(context);\n          (0,_handlers_fontHandlers_js__WEBPACK_IMPORTED_MODULE_6__.initializeFontHandlers)(context);\n          (0,_handlers_alignmentHandlers_js__WEBPACK_IMPORTED_MODULE_8__.initializeAlignmentHandlers)(context);\n          (0,_handlers_sizeHandlers_js__WEBPACK_IMPORTED_MODULE_4__.initializeHeroSizeHandler)(context);\n          // Add page change listener\n          context.pageSelector.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n            return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  console.log(this.value);\n                  _context3.next = 3;\n                  return loadPageData(this.value, context);\n                case 3:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, _callee3, this);\n          })));\n          _context4.next = 28;\n          break;\n        case 23:\n          _context4.prev = 23;\n          _context4.t0 = _context4[\"catch\"](6);\n          console.error('Error initializing handlers:', _context4.t0);\n          (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to initialize editor components');\n          throw _context4.t0;\n        case 28:\n          return _context4.abrupt(\"return\", context);\n        case 31:\n          _context4.prev = 31;\n          _context4.t1 = _context4[\"catch\"](0);\n          console.error('Error in editor initialization:', _context4.t1);\n          (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to initialize editor');\n          throw _context4.t1;\n        case 36:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[0, 31], [6, 23]]);\n  }));\n  return _initializeEditor.apply(this, arguments);\n}\nfunction initializeAccordions() {\n  document.querySelectorAll('.accordion-trigger').forEach(function (trigger) {\n    // Remove any existing event listeners\n    var newTrigger = trigger.cloneNode(true);\n    trigger.parentNode.replaceChild(newTrigger, trigger);\n    newTrigger.addEventListener('click', function () {\n      var target = document.getElementById(newTrigger.dataset.target);\n      var arrow = newTrigger.querySelector('svg');\n\n      // Toggle panel visibility\n      target.classList.toggle('hidden');\n\n      // Update trigger styles and arrow rotation\n      if (target.classList.contains('hidden')) {\n        newTrigger.classList.remove('bg-gray-100', 'hover:bg-gray-400');\n        newTrigger.classList.add('bg-white', 'hover:bg-gray-50');\n        arrow.classList.remove('rotate-90');\n      } else {\n        newTrigger.classList.remove('bg-white', 'hover:bg-gray-50');\n        newTrigger.classList.add('bg-gray-100', 'hover:bg-gray-400');\n        arrow.classList.add('rotate-90');\n      }\n    });\n  });\n}\nfunction wrapInAccordion(title, content) {\n  var isOpen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  // Generate consistent ID based on title\n  var accordionId = title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');\n  return \"\\n        <div class=\\\"border rounded-lg mb-4\\\">\\n            <button class=\\\"accordion-trigger w-full flex justify-between items-center p-4 \".concat(isOpen ? 'bg-gray-100 hover:bg-gray-400' : 'bg-white hover:bg-gray-50', \" rounded-t-lg\\\" \\n                    data-target=\\\"\").concat(accordionId, \"-content\\\">\\n                <h2 class=\\\"text-lg font-bold\\\">\").concat(title, \"</h2>\\n                <svg class=\\\"w-5 h-5 transition-transform \").concat(isOpen ? 'rotate-90' : '', \"\\\" \\n                     xmlns=\\\"http://www.w3.org/2000/svg\\\" \\n                     fill=\\\"none\\\" \\n                     viewBox=\\\"0 0 24 24\\\" \\n                     stroke=\\\"currentColor\\\">\\n                    <path stroke-linecap=\\\"round\\\" \\n                          stroke-linejoin=\\\"round\\\" \\n                          stroke-width=\\\"2\\\" \\n                          d=\\\"M9 5l7 7-7 7\\\" />\\n                </svg>\\n            </button>\\n            <div id=\\\"\").concat(accordionId, \"-content\\\" \\n                 class=\\\"accordion-content p-4 \").concat(isOpen ? '' : 'hidden', \"\\\"\\n                 data-section=\\\"\").concat(accordionId, \"\\\">\\n                \").concat(content, \"\\n            </div>\\n        </div>\\n    \");\n}\nfunction loadPageData(_x, _x2) {\n  return _loadPageData.apply(this, arguments);\n} // Update initializePageData to use smartUpdate\nfunction _loadPageData() {\n  _loadPageData = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(pageType, context) {\n    var response, previewContainer;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          console.log(pageType);\n          _context5.next = 4;\n          return (0,_utils_previewUpdates_js__WEBPACK_IMPORTED_MODULE_11__.smartUpdate)(context, {\n            fieldType: 'load_page',\n            page_type: pageType,\n            return_preview: true\n          });\n        case 4:\n          response = _context5.sent;\n          if (response) {\n            // Update publish state using the handler\n            (0,_handlers_publishHandlers_js__WEBPACK_IMPORTED_MODULE_10__.updatePublishState)(response.is_published);\n            (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_12__.handleBannerSliderVisibility)(response.hero_layout);\n            updateFormValues(response, context);\n            // Update preview if we got preview HTML\n            if (response.preview_html) {\n              previewContainer = document.getElementById('preview-container');\n              if (previewContainer) {\n                previewContainer.innerHTML = response.preview_html;\n                console.log('reinitializing slider');\n                (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_12__.reinitializeSlider)();\n              }\n            }\n          }\n          _context5.next = 13;\n          break;\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error('Error loading page data:', _context5.t0);\n          (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to load page data');\n          throw _context5.t0;\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[0, 8]]);\n  }));\n  return _loadPageData.apply(this, arguments);\n}\nfunction initializePageData(_x3) {\n  return _initializePageData.apply(this, arguments);\n}\nfunction _initializePageData() {\n  _initializePageData = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(context) {\n    var data, previewContainer;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          // Always set initial page to 'home' and use the initial data from context\n          context.pageSelector.value = 'home';\n          data = context.initialData; // Update publish state and banner visibility\n          (0,_handlers_publishHandlers_js__WEBPACK_IMPORTED_MODULE_10__.updatePublishState)(data.is_published);\n          (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_12__.handleBannerSliderVisibility)(data.hero_layout);\n          // // Ensure images object exists (though it should already be there from edit_layout)\n          // if (!data.images) {\n          //     data.images = {\n          //         hero_primary: { url: null },\n          //         banner_2: { url: null },\n          //         banner_3: { url: null }\n          //     };\n          // }\n\n          // Update form values with the initial data\n          updateFormValues(data, context);\n\n          // Update preview if it exists\n          previewContainer = document.getElementById('preview-container');\n          if (previewContainer && data.preview_html) {\n            previewContainer.innerHTML = data.preview_html;\n            (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_12__.reinitializeSlider)();\n          }\n          _context6.next = 15;\n          break;\n        case 10:\n          _context6.prev = 10;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error('Error initializing page data:', _context6.t0);\n          (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to initialize page data');\n          throw _context6.t0;\n        case 15:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[0, 10]]);\n  }));\n  return _initializePageData.apply(this, arguments);\n}\nfunction updateFormValues(data, context) {\n  try {\n    var _data$banner_, _data$banner_2, _data$banner_3, _data$banner_4, _data$banner_5, _data$banner_6, _data$banner_7, _data$banner_8, _data$show_hero_headi, _data$show_hero_subhe, _data$show_hero_butto, _data$banner_2$show_h, _data$banner_9, _data$banner_2$show_s, _data$banner_10, _data$banner_2$show_b, _data$banner_11, _data$banner_3$show_h, _data$banner_12, _data$banner_3$show_s, _data$banner_13, _data$banner_3$show_b, _data$banner_14, _data$banner_15, _data$banner_16, _data$banner_17, _data$banner_18, _data$banner_19, _data$banner_20, _data$banner_21, _data$banner_22, _data$banner_23, _data$banner_24, _data$banner_25, _data$banner_26, _data$banner_27, _data$banner_28, _data$banner_29, _data$banner_30, _data$banner_31, _data$banner_32, _data$banner_33, _data$banner_34, _data$banner_35, _data$banner_36, _data$banner_37, _data$banner_38, _data$banner_39, _data$banner_40;\n    // accordion states\n\n    var accordionStates = {};\n    document.querySelectorAll('.accordion-content').forEach(function (content) {\n      accordionStates[content.id] = !content.classList.contains('hidden');\n    });\n    // Update new pages\n    var addPageDropdown = document.getElementById('available-pages');\n    // Update text fields for primary hero\n    var textFields = {\n      // Primary hero\n      'hero_heading': data.hero_heading || '',\n      'hero_subheading': data.hero_subheading || '',\n      'hero_button_text': data.hero_button_text || '',\n      'hero_button_link': data.hero_button_link || '',\n      // Banner 2\n      'banner_2_heading': ((_data$banner_ = data.banner_2) === null || _data$banner_ === void 0 ? void 0 : _data$banner_.heading) || '',\n      'banner_2_subheading': ((_data$banner_2 = data.banner_2) === null || _data$banner_2 === void 0 ? void 0 : _data$banner_2.subheading) || '',\n      'banner_2_button_text': ((_data$banner_3 = data.banner_2) === null || _data$banner_3 === void 0 ? void 0 : _data$banner_3.button_text) || '',\n      'banner_2_button_link': ((_data$banner_4 = data.banner_2) === null || _data$banner_4 === void 0 ? void 0 : _data$banner_4.button_link) || '',\n      // Banner 3\n      'banner_3_heading': ((_data$banner_5 = data.banner_3) === null || _data$banner_5 === void 0 ? void 0 : _data$banner_5.heading) || '',\n      'banner_3_subheading': ((_data$banner_6 = data.banner_3) === null || _data$banner_6 === void 0 ? void 0 : _data$banner_6.subheading) || '',\n      'banner_3_button_text': ((_data$banner_7 = data.banner_3) === null || _data$banner_7 === void 0 ? void 0 : _data$banner_7.button_text) || '',\n      'banner_3_button_link': ((_data$banner_8 = data.banner_3) === null || _data$banner_8 === void 0 ? void 0 : _data$banner_8.button_link) || ''\n    };\n\n    // Update checkbox states\n    var checkboxFields = {\n      'show_hero_heading': (_data$show_hero_headi = data.show_hero_heading) !== null && _data$show_hero_headi !== void 0 ? _data$show_hero_headi : true,\n      'show_hero_subheading': (_data$show_hero_subhe = data.show_hero_subheading) !== null && _data$show_hero_subhe !== void 0 ? _data$show_hero_subhe : true,\n      'show_hero_button': (_data$show_hero_butto = data.show_hero_button) !== null && _data$show_hero_butto !== void 0 ? _data$show_hero_butto : true,\n      'show_banner_2_heading': (_data$banner_2$show_h = (_data$banner_9 = data.banner_2) === null || _data$banner_9 === void 0 ? void 0 : _data$banner_9.show_heading) !== null && _data$banner_2$show_h !== void 0 ? _data$banner_2$show_h : true,\n      'show_banner_2_subheading': (_data$banner_2$show_s = (_data$banner_10 = data.banner_2) === null || _data$banner_10 === void 0 ? void 0 : _data$banner_10.show_subheading) !== null && _data$banner_2$show_s !== void 0 ? _data$banner_2$show_s : true,\n      'show_banner_2_button': (_data$banner_2$show_b = (_data$banner_11 = data.banner_2) === null || _data$banner_11 === void 0 ? void 0 : _data$banner_11.show_button) !== null && _data$banner_2$show_b !== void 0 ? _data$banner_2$show_b : true,\n      'show_banner_3_heading': (_data$banner_3$show_h = (_data$banner_12 = data.banner_3) === null || _data$banner_12 === void 0 ? void 0 : _data$banner_12.show_heading) !== null && _data$banner_3$show_h !== void 0 ? _data$banner_3$show_h : true,\n      'show_banner_3_subheading': (_data$banner_3$show_s = (_data$banner_13 = data.banner_3) === null || _data$banner_13 === void 0 ? void 0 : _data$banner_13.show_subheading) !== null && _data$banner_3$show_s !== void 0 ? _data$banner_3$show_s : true,\n      'show_banner_3_button': (_data$banner_3$show_b = (_data$banner_14 = data.banner_3) === null || _data$banner_14 === void 0 ? void 0 : _data$banner_14.show_button) !== null && _data$banner_3$show_b !== void 0 ? _data$banner_3$show_b : true\n    };\n\n    // Update font selectors\n    var fontFields = {\n      // Primary hero fonts\n      'hero_heading_font': data.hero_heading_font || 'default',\n      'hero_subheading_font': data.hero_subheading_font || 'default',\n      // Banner 2 fonts\n      'banner_2_heading_font': ((_data$banner_15 = data.banner_2) === null || _data$banner_15 === void 0 ? void 0 : _data$banner_15.heading_font) || 'default',\n      'banner_2_subheading_font': ((_data$banner_16 = data.banner_2) === null || _data$banner_16 === void 0 ? void 0 : _data$banner_16.subheading_font) || 'default',\n      // Banner 3 fonts\n      'banner_3_heading_font': ((_data$banner_17 = data.banner_3) === null || _data$banner_17 === void 0 ? void 0 : _data$banner_17.heading_font) || 'default',\n      'banner_3_subheading_font': ((_data$banner_18 = data.banner_3) === null || _data$banner_18 === void 0 ? void 0 : _data$banner_18.subheading_font) || 'default'\n    };\n\n    // Update size selectors\n    var sizeFields = {\n      // Primary hero sizes\n      'hero_heading_size': data.hero_heading_size || 'default',\n      'hero_subheading_size': data.hero_subheading_size || 'default',\n      // Banner 2 sizes\n      'banner_2_heading_size': ((_data$banner_19 = data.banner_2) === null || _data$banner_19 === void 0 ? void 0 : _data$banner_19.heading_size) || 'default',\n      'banner_2_subheading_size': ((_data$banner_20 = data.banner_2) === null || _data$banner_20 === void 0 ? void 0 : _data$banner_20.subheading_size) || 'default',\n      // Banner 3 sizes\n      'banner_3_heading_size': ((_data$banner_21 = data.banner_3) === null || _data$banner_21 === void 0 ? void 0 : _data$banner_21.heading_size) || 'default',\n      'banner_3_subheading_size': ((_data$banner_22 = data.banner_3) === null || _data$banner_22 === void 0 ? void 0 : _data$banner_22.subheading_size) || 'default'\n    };\n    // Update colors\n    var colorInputs = {\n      'hero_heading_color': data.hero_heading_color || '#000000',\n      'hero_subheading_color': data.hero_subheading_color || '#6B7280',\n      'banner_2_heading_color': ((_data$banner_23 = data.banner_2) === null || _data$banner_23 === void 0 ? void 0 : _data$banner_23.heading_color) || '#000000',\n      'banner_2_subheading_color': (_data$banner_24 = data.banner_2) === null || _data$banner_24 === void 0 ? void 0 : _data$banner_24.subheading_color,\n      'banner_3_heading_color': ((_data$banner_25 = data.banner_3) === null || _data$banner_25 === void 0 ? void 0 : _data$banner_25.heading_color) || '#000000',\n      'banner_3_subheading_color': ((_data$banner_26 = data.banner_3) === null || _data$banner_26 === void 0 ? void 0 : _data$banner_26.subheading_color) || '#6B7280'\n    };\n\n    // Update alignments\n    var alignmentFields = {\n      'hero_text_align': data.hero_text_align || 'left',\n      'banner_2_text_align': ((_data$banner_27 = data.banner_2) === null || _data$banner_27 === void 0 ? void 0 : _data$banner_27.text_align) || 'left',\n      'banner_3_text_align': ((_data$banner_28 = data.banner_3) === null || _data$banner_28 === void 0 ? void 0 : _data$banner_28.text_align) || 'left'\n    };\n    // Update button styles\n    var buttonStyles = {\n      // Primary hero button\n      'hero_button_bg_color': data.hero_button_bg_color || '#000000',\n      'hero_button_text_color': data.hero_button_text_color || '#FFFFFF',\n      'hero_button_border_color': data.hero_button_border_color || '#000000',\n      'hero_button_hover_bg_color': data.hero_button_hover_bg_color || '#FFFFFF',\n      'hero_button_hover_text_color': data.hero_button_hover_text_color || '#000000',\n      'hero_button_hover_border_color': data.hero_button_hover_border_color || '#000000',\n      // Banner 2 button\n      'banner_2_button_bg_color': ((_data$banner_29 = data.banner_2) === null || _data$banner_29 === void 0 ? void 0 : _data$banner_29.button_bg_color) || '#000000',\n      'banner_2_button_text_color': ((_data$banner_30 = data.banner_2) === null || _data$banner_30 === void 0 ? void 0 : _data$banner_30.button_text_color) || '#FFFFFF',\n      'banner_2_button_border_color': ((_data$banner_31 = data.banner_2) === null || _data$banner_31 === void 0 ? void 0 : _data$banner_31.button_border_color) || '#000000',\n      'banner_2_button_hover_bg_color': ((_data$banner_32 = data.banner_2) === null || _data$banner_32 === void 0 ? void 0 : _data$banner_32.button_hover_bg_color) || '#FFFFFF',\n      'banner_2_button_hover_text_color': ((_data$banner_33 = data.banner_2) === null || _data$banner_33 === void 0 ? void 0 : _data$banner_33.button_hover_text_color) || '#000000',\n      'banner_2_button_hover_border_color': ((_data$banner_34 = data.banner_2) === null || _data$banner_34 === void 0 ? void 0 : _data$banner_34.button_hover_border_color) || '#000000',\n      // Banner 3 button\n      'banner_3_button_bg_color': ((_data$banner_35 = data.banner_3) === null || _data$banner_35 === void 0 ? void 0 : _data$banner_35.button_bg_color) || '#000000',\n      'banner_3_button_text_color': ((_data$banner_36 = data.banner_3) === null || _data$banner_36 === void 0 ? void 0 : _data$banner_36.button_text_color) || '#FFFFFF',\n      'banner_3_button_border_color': ((_data$banner_37 = data.banner_3) === null || _data$banner_37 === void 0 ? void 0 : _data$banner_37.button_border_color) || '#000000',\n      'banner_3_button_hover_bg_color': ((_data$banner_38 = data.banner_3) === null || _data$banner_38 === void 0 ? void 0 : _data$banner_38.button_hover_bg_color) || '#FFFFFF',\n      'banner_3_button_hover_text_color': ((_data$banner_39 = data.banner_3) === null || _data$banner_39 === void 0 ? void 0 : _data$banner_39.button_hover_text_color) || '#000000',\n      'banner_3_button_hover_border_color': ((_data$banner_40 = data.banner_3) === null || _data$banner_40 === void 0 ? void 0 : _data$banner_40.button_hover_border_color) || '#000000'\n    };\n\n    // Update button styles in the form\n    Object.entries(buttonStyles).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        id = _ref2[0],\n        value = _ref2[1];\n      var element = document.getElementById(id);\n      if (element) {\n        element.value = value;\n      }\n    });\n\n    // Update all text inputs\n    Object.entries(textFields).forEach(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        id = _ref4[0],\n        value = _ref4[1];\n      var element = document.getElementById(id);\n      if (element) {\n        element.value = value;\n      }\n    });\n    Object.entries(checkboxFields).forEach(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n        id = _ref6[0],\n        value = _ref6[1];\n      var element = document.getElementById(id);\n      if (element) element.checked = value;\n    });\n    Object.entries(fontFields).forEach(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 2),\n        id = _ref8[0],\n        value = _ref8[1];\n      var element = document.getElementById(id);\n      if (element) {\n        element.value = value;\n      }\n    });\n    Object.entries(sizeFields).forEach(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 2),\n        id = _ref10[0],\n        value = _ref10[1];\n      var element = document.getElementById(id);\n      if (element) {\n        element.value = value;\n      }\n    });\n\n    // Update radio buttons for layout and alignment\n    var layoutRadio = document.querySelector(\"input[name=\\\"hero_layout\\\"][value=\\\"\".concat(data.hero_layout, \"\\\"]\"));\n    if (layoutRadio) layoutRadio.checked = true;\n    Object.entries(alignmentFields).forEach(function (_ref11) {\n      var _ref12 = _slicedToArray(_ref11, 2),\n        name = _ref12[0],\n        value = _ref12[1];\n      var radio = document.querySelector(\"input[name=\\\"\".concat(name, \"\\\"][value=\\\"\").concat(value, \"\\\"]\"));\n      if (radio) radio.checked = true;\n    });\n    Object.entries(colorInputs).forEach(function (_ref13) {\n      var _ref14 = _slicedToArray(_ref13, 2),\n        id = _ref14[0],\n        value = _ref14[1];\n      var element = document.getElementById(id);\n      if (element) {\n        element.value = value;\n        element.defaultValue = value; // Set default value too\n\n        // Trigger change event\n        var event = new Event('input', {\n          bubbles: true\n        });\n        element.dispatchEvent(event);\n      }\n    });\n    // Update images (existing code)\n    var imageElements = {\n      'hero_primary': {\n        url: data.hero_primary.url,\n        prefix: 'hero_primary',\n        containerId: 'hero_primary-container' // Match the actual container ID\n      },\n      'banner_2': {\n        url: data.banner_2.url,\n        prefix: 'banner_2',\n        containerId: 'banner_2-container' // Expected container ID\n      },\n      'banner_3': {\n        url: data.banner_3.url,\n        prefix: 'banner_3',\n        containerId: 'banner_3-container' // Expected container ID\n      }\n    };\n    var editorSections = document.querySelectorAll('.editor-section');\n    editorSections.forEach(function (section) {\n      var _accordionStates;\n      // Skip if section is already wrapped in accordion\n      if (section.closest('.accordion-trigger')) return;\n      var sectionTitle = section.querySelector('h1, h2').textContent;\n      var sectionContent = section.innerHTML;\n      var sectionId = section.dataset.section;\n\n      // Create accordion wrapper, maintaining previous state if it existed\n      var wasOpen = (_accordionStates = accordionStates[\"\".concat(sectionId, \"-content\")]) !== null && _accordionStates !== void 0 ? _accordionStates : sectionId === 'global';\n      var accordionHTML = wrapInAccordion(sectionTitle, sectionContent, wasOpen);\n\n      // Replace original section with accordion\n      section.outerHTML = accordionHTML;\n    });\n\n    // Reinitialize accordions\n    initializeAccordions();\n    Object.entries(imageElements).forEach(function (_ref15) {\n      var _ref16 = _slicedToArray(_ref15, 2),\n        id = _ref16[0],\n        imageData = _ref16[1];\n      var url = imageData.url,\n        prefix = imageData.prefix,\n        containerId = imageData.containerId;\n\n      // Try to find the container by ID first\n      var container = document.getElementById(containerId);\n      if (container) {\n        if (url) {\n          container.innerHTML = (0,_utils_placeholders_js__WEBPACK_IMPORTED_MODULE_1__.createHeroImageHTML)(url, prefix, data.hero_layout);\n          var removeButton = document.getElementById(\"remove-\".concat(prefix));\n          if (removeButton) {\n            console.log('prefix', prefix);\n            removeButton.addEventListener('click', function () {\n              return (0,_handlers_imageHandlers_js__WEBPACK_IMPORTED_MODULE_2__.removeHeroImage)(prefix, context);\n            });\n          }\n        } else {\n          // Update container with placeholder\n          container.innerHTML = (0,_utils_placeholders_js__WEBPACK_IMPORTED_MODULE_1__.createUploadPlaceholderHTML)(prefix);\n\n          // Add upload button and file input listeners\n          var uploadButton = document.getElementById(\"upload-\".concat(prefix, \"-button\"));\n          var fileInput = document.getElementById(\"\".concat(prefix, \"-upload\"));\n          if (uploadButton && fileInput) {\n            uploadButton.addEventListener('click', function () {\n              if (!uploadButton.disabled) {\n                fileInput.click();\n              }\n            });\n            fileInput.addEventListener('change', /*#__PURE__*/function () {\n              var _ref17 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return (0,_handlers_imageHandlers_js__WEBPACK_IMPORTED_MODULE_2__.handleImageUpload)(event, context);\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee);\n              }));\n              return function (_x4) {\n                return _ref17.apply(this, arguments);\n              };\n            }());\n          }\n        }\n      } else {\n        console.warn(\"Container not found: \".concat(containerId));\n      }\n    });\n  } catch (error) {\n    console.error('Error updating form values:', error);\n    (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Failed to update form values');\n  }\n}\n\n// Initialize when DOM is ready\ndocument.addEventListener('DOMContentLoaded', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _context2.prev = 0;\n        _context2.next = 3;\n        return initializeEditor();\n      case 3:\n        _context2.next = 9;\n        break;\n      case 5:\n        _context2.prev = 5;\n        _context2.t0 = _context2[\"catch\"](0);\n        console.error('Failed to initialize editor:', _context2.t0);\n        (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.displayError)('Editor initialization failed');\n      case 9:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _callee2, null, [[0, 5]]);\n})));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/layoutEditor.js\n");

/***/ }),

/***/ "./restaurants/static/js/utils/cache.js":
/*!**********************************************!*\
  !*** ./restaurants/static/js/utils/cache.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PreviewCache: () => (/* binding */ PreviewCache)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar PreviewCache = /*#__PURE__*/function () {\n  function PreviewCache() {\n    _classCallCheck(this, PreviewCache);\n    this.cache = new Map();\n    this.maxEntries = 10;\n  }\n  return _createClass(PreviewCache, [{\n    key: \"getKey\",\n    value: function getKey(pageType, data) {\n      return \"\".concat(pageType, \"-\").concat(JSON.stringify(data));\n    }\n  }, {\n    key: \"set\",\n    value: function set(pageType, data, html) {\n      var key = this.getKey(pageType, data);\n      if (this.cache.size >= this.maxEntries) {\n        var firstKey = this.cache.keys().next().value;\n        this.cache[\"delete\"](firstKey);\n      }\n      this.cache.set(key, {\n        html: html,\n        timestamp: Date.now()\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get(pageType, data) {\n      var key = this.getKey(pageType, data);\n      var cached = this.cache.get(key);\n      if (!cached || Date.now() - cached.timestamp > 5 * 60 * 1000) {\n        this.cache[\"delete\"](key);\n        return null;\n      }\n      return cached.html;\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXN0YXVyYW50cy9zdGF0aWMvanMvdXRpbHMvY2FjaGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFPLElBQU1BLFlBQVk7RUFDckIsU0FBQUEsYUFBQSxFQUFjO0lBQUFDLGVBQUEsT0FBQUQsWUFBQTtJQUNWLElBQUksQ0FBQ0UsS0FBSyxHQUFHLElBQUlDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLElBQUksQ0FBQ0MsVUFBVSxHQUFHLEVBQUU7RUFDeEI7RUFBQyxPQUFBQyxZQUFBLENBQUFMLFlBQUE7SUFBQU0sR0FBQTtJQUFBQyxLQUFBLEVBRUQsU0FBQUMsTUFBTUEsQ0FBQ0MsUUFBUSxFQUFFQyxJQUFJLEVBQUU7TUFDbkIsVUFBQUMsTUFBQSxDQUFVRixRQUFRLE9BQUFFLE1BQUEsQ0FBSUMsSUFBSSxDQUFDQyxTQUFTLENBQUNILElBQUksQ0FBQztJQUM5QztFQUFDO0lBQUFKLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFPLEdBQUdBLENBQUNMLFFBQVEsRUFBRUMsSUFBSSxFQUFFSyxJQUFJLEVBQUU7TUFDdEIsSUFBTVQsR0FBRyxHQUFHLElBQUksQ0FBQ0UsTUFBTSxDQUFDQyxRQUFRLEVBQUVDLElBQUksQ0FBQztNQUN2QyxJQUFJLElBQUksQ0FBQ1IsS0FBSyxDQUFDYyxJQUFJLElBQUksSUFBSSxDQUFDWixVQUFVLEVBQUU7UUFDcEMsSUFBTWEsUUFBUSxHQUFHLElBQUksQ0FBQ2YsS0FBSyxDQUFDZ0IsSUFBSSxDQUFDLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLENBQUMsQ0FBQ1osS0FBSztRQUMvQyxJQUFJLENBQUNMLEtBQUssVUFBTyxDQUFDZSxRQUFRLENBQUM7TUFDL0I7TUFDQSxJQUFJLENBQUNmLEtBQUssQ0FBQ1ksR0FBRyxDQUFDUixHQUFHLEVBQUU7UUFDaEJTLElBQUksRUFBSkEsSUFBSTtRQUNKSyxTQUFTLEVBQUVDLElBQUksQ0FBQ0MsR0FBRyxDQUFDO01BQ3hCLENBQUMsQ0FBQztJQUNOO0VBQUM7SUFBQWhCLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFnQixHQUFHQSxDQUFDZCxRQUFRLEVBQUVDLElBQUksRUFBRTtNQUNoQixJQUFNSixHQUFHLEdBQUcsSUFBSSxDQUFDRSxNQUFNLENBQUNDLFFBQVEsRUFBRUMsSUFBSSxDQUFDO01BQ3ZDLElBQU1jLE1BQU0sR0FBRyxJQUFJLENBQUN0QixLQUFLLENBQUNxQixHQUFHLENBQUNqQixHQUFHLENBQUM7TUFDbEMsSUFBSSxDQUFDa0IsTUFBTSxJQUFJSCxJQUFJLENBQUNDLEdBQUcsQ0FBQyxDQUFDLEdBQUdFLE1BQU0sQ0FBQ0osU0FBUyxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxFQUFFO1FBQzFELElBQUksQ0FBQ2xCLEtBQUssVUFBTyxDQUFDSSxHQUFHLENBQUM7UUFDdEIsT0FBTyxJQUFJO01BQ2Y7TUFDQSxPQUFPa0IsTUFBTSxDQUFDVCxJQUFJO0lBQ3RCO0VBQUM7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXRpYy8uL3Jlc3RhdXJhbnRzL3N0YXRpYy9qcy91dGlscy9jYWNoZS5qcz9lOTg1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBQcmV2aWV3Q2FjaGUge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5jYWNoZSA9IG5ldyBNYXAoKTtcclxuICAgICAgICB0aGlzLm1heEVudHJpZXMgPSAxMDtcclxuICAgIH1cclxuXHJcbiAgICBnZXRLZXkocGFnZVR5cGUsIGRhdGEpIHtcclxuICAgICAgICByZXR1cm4gYCR7cGFnZVR5cGV9LSR7SlNPTi5zdHJpbmdpZnkoZGF0YSl9YDtcclxuICAgIH1cclxuXHJcbiAgICBzZXQocGFnZVR5cGUsIGRhdGEsIGh0bWwpIHtcclxuICAgICAgICBjb25zdCBrZXkgPSB0aGlzLmdldEtleShwYWdlVHlwZSwgZGF0YSk7XHJcbiAgICAgICAgaWYgKHRoaXMuY2FjaGUuc2l6ZSA+PSB0aGlzLm1heEVudHJpZXMpIHtcclxuICAgICAgICAgICAgY29uc3QgZmlyc3RLZXkgPSB0aGlzLmNhY2hlLmtleXMoKS5uZXh0KCkudmFsdWU7XHJcbiAgICAgICAgICAgIHRoaXMuY2FjaGUuZGVsZXRlKGZpcnN0S2V5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5jYWNoZS5zZXQoa2V5LCB7XHJcbiAgICAgICAgICAgIGh0bWwsXHJcbiAgICAgICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGdldChwYWdlVHlwZSwgZGF0YSkge1xyXG4gICAgICAgIGNvbnN0IGtleSA9IHRoaXMuZ2V0S2V5KHBhZ2VUeXBlLCBkYXRhKTtcclxuICAgICAgICBjb25zdCBjYWNoZWQgPSB0aGlzLmNhY2hlLmdldChrZXkpO1xyXG4gICAgICAgIGlmICghY2FjaGVkIHx8IERhdGUubm93KCkgLSBjYWNoZWQudGltZXN0YW1wID4gNSAqIDYwICogMTAwMCkge1xyXG4gICAgICAgICAgICB0aGlzLmNhY2hlLmRlbGV0ZShrZXkpO1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGNhY2hlZC5odG1sO1xyXG4gICAgfVxyXG59Il0sIm5hbWVzIjpbIlByZXZpZXdDYWNoZSIsIl9jbGFzc0NhbGxDaGVjayIsImNhY2hlIiwiTWFwIiwibWF4RW50cmllcyIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwiZ2V0S2V5IiwicGFnZVR5cGUiLCJkYXRhIiwiY29uY2F0IiwiSlNPTiIsInN0cmluZ2lmeSIsInNldCIsImh0bWwiLCJzaXplIiwiZmlyc3RLZXkiLCJrZXlzIiwibmV4dCIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJnZXQiLCJjYWNoZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./restaurants/static/js/utils/cache.js\n");

/***/ }),

/***/ "./restaurants/static/js/utils/cookies.js":
/*!************************************************!*\
  !*** ./restaurants/static/js/utils/cookies.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCookie: () => (/* binding */ getCookie)\n/* harmony export */ });\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXN0YXVyYW50cy9zdGF0aWMvanMvdXRpbHMvY29va2llcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsU0FBU0EsQ0FBQ0MsSUFBSSxFQUFFO0VBQzVCLElBQUlDLFdBQVcsR0FBRyxJQUFJO0VBQ3RCLElBQUlDLFFBQVEsQ0FBQ0MsTUFBTSxJQUFJRCxRQUFRLENBQUNDLE1BQU0sS0FBSyxFQUFFLEVBQUU7SUFDM0MsSUFBTUMsT0FBTyxHQUFHRixRQUFRLENBQUNDLE1BQU0sQ0FBQ0UsS0FBSyxDQUFDLEdBQUcsQ0FBQztJQUMxQyxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0YsT0FBTyxDQUFDRyxNQUFNLEVBQUVELENBQUMsRUFBRSxFQUFFO01BQ3JDLElBQU1ILE1BQU0sR0FBR0MsT0FBTyxDQUFDRSxDQUFDLENBQUMsQ0FBQ0UsSUFBSSxDQUFDLENBQUM7TUFDaEMsSUFBSUwsTUFBTSxDQUFDTSxTQUFTLENBQUMsQ0FBQyxFQUFFVCxJQUFJLENBQUNPLE1BQU0sR0FBRyxDQUFDLENBQUMsS0FBTVAsSUFBSSxHQUFHLEdBQUksRUFBRTtRQUN2REMsV0FBVyxHQUFHUyxrQkFBa0IsQ0FBQ1AsTUFBTSxDQUFDTSxTQUFTLENBQUNULElBQUksQ0FBQ08sTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ25FO01BQ0o7SUFDSjtFQUNKO0VBQ0EsT0FBT04sV0FBVztBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXRpYy8uL3Jlc3RhdXJhbnRzL3N0YXRpYy9qcy91dGlscy9jb29raWVzLmpzPzI5OTQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGdldENvb2tpZShuYW1lKSB7XHJcbiAgICBsZXQgY29va2llVmFsdWUgPSBudWxsO1xyXG4gICAgaWYgKGRvY3VtZW50LmNvb2tpZSAmJiBkb2N1bWVudC5jb29raWUgIT09ICcnKSB7XHJcbiAgICAgICAgY29uc3QgY29va2llcyA9IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOycpO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29va2llcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBjb29raWUgPSBjb29raWVzW2ldLnRyaW0oKTtcclxuICAgICAgICAgICAgaWYgKGNvb2tpZS5zdWJzdHJpbmcoMCwgbmFtZS5sZW5ndGggKyAxKSA9PT0gKG5hbWUgKyAnPScpKSB7XHJcbiAgICAgICAgICAgICAgICBjb29raWVWYWx1ZSA9IGRlY29kZVVSSUNvbXBvbmVudChjb29raWUuc3Vic3RyaW5nKG5hbWUubGVuZ3RoICsgMSkpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY29va2llVmFsdWU7XHJcbn0iXSwibmFtZXMiOlsiZ2V0Q29va2llIiwibmFtZSIsImNvb2tpZVZhbHVlIiwiZG9jdW1lbnQiLCJjb29raWUiLCJjb29raWVzIiwic3BsaXQiLCJpIiwibGVuZ3RoIiwidHJpbSIsInN1YnN0cmluZyIsImRlY29kZVVSSUNvbXBvbmVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./restaurants/static/js/utils/cookies.js\n");

/***/ }),

/***/ "./restaurants/static/js/utils/debounce.js":
/*!*************************************************!*\
  !*** ./restaurants/static/js/utils/debounce.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debounce: () => (/* binding */ debounce),\n/* harmony export */   throttle: () => (/* binding */ throttle)\n/* harmony export */ });\nfunction debounce(func, wait) {\n  var timeout;\n  return function executedFunction() {\n    var _this = this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    // Cancel any existing timeout\n    clearTimeout(timeout);\n\n    // Create a new timeout\n    timeout = setTimeout(function () {\n      func.apply(_this, args);\n    }, wait);\n  };\n}\nfunction throttle(func, limit) {\n  var inThrottle;\n  return function executedFunction() {\n    if (!inThrottle) {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      func.apply(this, args);\n      inThrottle = true;\n      setTimeout(function () {\n        inThrottle = false;\n      }, limit);\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXN0YXVyYW50cy9zdGF0aWMvanMvdXRpbHMvZGVib3VuY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxTQUFTQSxRQUFRQSxDQUFDQyxJQUFJLEVBQUVDLElBQUksRUFBRTtFQUNqQyxJQUFJQyxPQUFPO0VBRVgsT0FBTyxTQUFTQyxnQkFBZ0JBLENBQUEsRUFBVTtJQUFBLElBQUFDLEtBQUE7SUFBQSxTQUFBQyxJQUFBLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxFQUFOQyxJQUFJLE9BQUFDLEtBQUEsQ0FBQUosSUFBQSxHQUFBSyxJQUFBLE1BQUFBLElBQUEsR0FBQUwsSUFBQSxFQUFBSyxJQUFBO01BQUpGLElBQUksQ0FBQUUsSUFBQSxJQUFBSixTQUFBLENBQUFJLElBQUE7SUFBQTtJQUNwQztJQUNBQyxZQUFZLENBQUNULE9BQU8sQ0FBQzs7SUFFckI7SUFDQUEsT0FBTyxHQUFHVSxVQUFVLENBQUMsWUFBTTtNQUN2QlosSUFBSSxDQUFDYSxLQUFLLENBQUNULEtBQUksRUFBRUksSUFBSSxDQUFDO0lBQzFCLENBQUMsRUFBRVAsSUFBSSxDQUFDO0VBQ1osQ0FBQztBQUNMO0FBQ08sU0FBU2EsUUFBUUEsQ0FBQ2QsSUFBSSxFQUFFZSxLQUFLLEVBQUU7RUFDbEMsSUFBSUMsVUFBVTtFQUVkLE9BQU8sU0FBU2IsZ0JBQWdCQSxDQUFBLEVBQVU7SUFDdEMsSUFBSSxDQUFDYSxVQUFVLEVBQUU7TUFBQSxTQUFBQyxLQUFBLEdBQUFYLFNBQUEsQ0FBQUMsTUFBQSxFQURlQyxJQUFJLE9BQUFDLEtBQUEsQ0FBQVEsS0FBQSxHQUFBQyxLQUFBLE1BQUFBLEtBQUEsR0FBQUQsS0FBQSxFQUFBQyxLQUFBO1FBQUpWLElBQUksQ0FBQVUsS0FBQSxJQUFBWixTQUFBLENBQUFZLEtBQUE7TUFBQTtNQUVoQ2xCLElBQUksQ0FBQ2EsS0FBSyxDQUFDLElBQUksRUFBRUwsSUFBSSxDQUFDO01BQ3RCUSxVQUFVLEdBQUcsSUFBSTtNQUNqQkosVUFBVSxDQUFDLFlBQU07UUFDYkksVUFBVSxHQUFHLEtBQUs7TUFDdEIsQ0FBQyxFQUFFRCxLQUFLLENBQUM7SUFDYjtFQUNKLENBQUM7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXRpYy8uL3Jlc3RhdXJhbnRzL3N0YXRpYy9qcy91dGlscy9kZWJvdW5jZS5qcz8zM2Q2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBkZWJvdW5jZShmdW5jLCB3YWl0KSB7XHJcbiAgICBsZXQgdGltZW91dDtcclxuICAgIFxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIGV4ZWN1dGVkRnVuY3Rpb24oLi4uYXJncykge1xyXG4gICAgICAgIC8vIENhbmNlbCBhbnkgZXhpc3RpbmcgdGltZW91dFxyXG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBDcmVhdGUgYSBuZXcgdGltZW91dFxyXG4gICAgICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgZnVuYy5hcHBseSh0aGlzLCBhcmdzKTtcclxuICAgICAgICB9LCB3YWl0KTtcclxuICAgIH07XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIHRocm90dGxlKGZ1bmMsIGxpbWl0KSB7XHJcbiAgICBsZXQgaW5UaHJvdHRsZTtcclxuICAgIFxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIGV4ZWN1dGVkRnVuY3Rpb24oLi4uYXJncykge1xyXG4gICAgICAgIGlmICghaW5UaHJvdHRsZSkge1xyXG4gICAgICAgICAgICBmdW5jLmFwcGx5KHRoaXMsIGFyZ3MpO1xyXG4gICAgICAgICAgICBpblRocm90dGxlID0gdHJ1ZTtcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpblRocm90dGxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH0sIGxpbWl0KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59Il0sIm5hbWVzIjpbImRlYm91bmNlIiwiZnVuYyIsIndhaXQiLCJ0aW1lb3V0IiwiZXhlY3V0ZWRGdW5jdGlvbiIsIl90aGlzIiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiYXBwbHkiLCJ0aHJvdHRsZSIsImxpbWl0IiwiaW5UaHJvdHRsZSIsIl9sZW4yIiwiX2tleTIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./restaurants/static/js/utils/debounce.js\n");

/***/ }),

/***/ "./restaurants/static/js/utils/errors.js":
/*!***********************************************!*\
  !*** ./restaurants/static/js/utils/errors.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   displayError: () => (/* binding */ displayError)\n/* harmony export */ });\nfunction displayError(message) {\n  // Implement your error display logic here\n  console.error(message);\n  // Example: Show a toast notification\n  alert(message);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXN0YXVyYW50cy9zdGF0aWMvanMvdXRpbHMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxZQUFZQSxDQUFDQyxPQUFPLEVBQUU7RUFDbEM7RUFDQUMsT0FBTyxDQUFDQyxLQUFLLENBQUNGLE9BQU8sQ0FBQztFQUN0QjtFQUNBRyxLQUFLLENBQUNILE9BQU8sQ0FBQztBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXRpYy8uL3Jlc3RhdXJhbnRzL3N0YXRpYy9qcy91dGlscy9lcnJvcnMuanM/YjRlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZGlzcGxheUVycm9yKG1lc3NhZ2UpIHtcclxuICAgIC8vIEltcGxlbWVudCB5b3VyIGVycm9yIGRpc3BsYXkgbG9naWMgaGVyZVxyXG4gICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcclxuICAgIC8vIEV4YW1wbGU6IFNob3cgYSB0b2FzdCBub3RpZmljYXRpb25cclxuICAgIGFsZXJ0KG1lc3NhZ2UpO1xyXG59Il0sIm5hbWVzIjpbImRpc3BsYXlFcnJvciIsIm1lc3NhZ2UiLCJjb25zb2xlIiwiZXJyb3IiLCJhbGVydCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./restaurants/static/js/utils/errors.js\n");

/***/ }),

/***/ "./restaurants/static/js/utils/placeholders.js":
/*!*****************************************************!*\
  !*** ./restaurants/static/js/utils/placeholders.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHeroImageHTML: () => (/* binding */ createHeroImageHTML),\n/* harmony export */   createProductFormHTML: () => (/* binding */ createProductFormHTML),\n/* harmony export */   createServiceFormHTML: () => (/* binding */ createServiceFormHTML),\n/* harmony export */   createUploadPlaceholderHTML: () => (/* binding */ createUploadPlaceholderHTML)\n/* harmony export */ });\nfunction createHeroImageHTML(imageUrl, prefix) {\n  var layout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'banner-slider';\n  var isDisabled = prefix !== 'hero-image' && layout !== 'banner-slider';\n  return \"\\n        <div class=\\\"relative group\\\">\\n            <img src=\\\"\".concat(imageUrl, \"\\\" \\n                 alt=\\\"\").concat(prefix, \" image\\\" \\n                 class=\\\"w-full h-40 object-cover rounded-lg cursor-pointer\\\"\\n                 id=\\\"\").concat(prefix, \"-preview\\\">\\n            <button type=\\\"button\\\"\\n                    id=\\\"remove-\").concat(prefix, \"\\\"\\n                    class=\\\"absolute top-2 right-2 p-2 bg-red-500 text-white rounded-full hover:bg-red-600 transition-colors\\\"\\n                    title=\\\"Remove image\\\"\\n                    \").concat(isDisabled ? 'disabled' : '', \">\\n                <svg class=\\\"w-4 h-4\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M6 18L18 6M6 6l12 12\\\"/>\\n                </svg>\\n            </button>\\n        </div>\\n    \");\n}\nfunction createUploadPlaceholderHTML(prefix) {\n  var displayText = prefix === 'hero-image' ? 'Add Primary Image' : \"Add \".concat(prefix.replace('-', ' ').replace(/^\\w/, function (c) {\n    return c.toUpperCase();\n  }));\n  return \"\\n        <div class=\\\"relative group cursor-pointer\\\" id=\\\"\".concat(prefix, \"-placeholder\\\">\\n            <button type=\\\"button\\\" id=\\\"upload-\").concat(prefix, \"-button\\\" class=\\\"w-full\\\">\\n                <div class=\\\"w-full h-40 bg-gray-100 rounded-lg flex items-center justify-center border-2 border-dashed border-gray-300 hover:border-gray-400\\\">\\n                    <div class=\\\"text-center\\\">\\n                        <svg class=\\\"mx-auto h-12 w-12 text-gray-400\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M12 4v16m8-8H4\\\"></path>\\n                        </svg>\\n                        <span class=\\\"mt-2 block text-sm font-medium text-gray-600\\\">\\n                            \").concat(displayText, \"\\n                        </span>\\n                    </div>\\n                </div>\\n            </button>\\n            <input type=\\\"file\\\" \\n                   id=\\\"\").concat(prefix, \"-upload\\\" \\n                   accept=\\\"image/*\\\" \\n                   class=\\\"hidden\\\">\\n        </div>\\n    \");\n}\nfunction createProductFormHTML(product, productId) {\n  return \"\\n        <div id=\\\"edit-form-\".concat(productId, \"\\\" class=\\\"border rounded-lg p-4 bg-white shadow-sm\\\">\\n            <form id=\\\"editProduct\").concat(productId, \"\\\" class=\\\"space-y-4\\\">\\n                <div>\\n                    <label class=\\\"block text-sm font-medium text-gray-700\\\">Name</label>\\n                    <input type=\\\"text\\\" name=\\\"name\\\" value=\\\"\").concat(product.name, \"\\\"\\n                           class=\\\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-500 focus:ring-emerald-500\\\">\\n                </div>\\n                \\n                <div>\\n                    <label class=\\\"block text-sm font-medium text-gray-700\\\">Description</label>\\n                    <textarea name=\\\"description\\\" rows=\\\"3\\\"\\n                             class=\\\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-500 focus:ring-emerald-500\\\"\\n                    >\").concat(product.description, \"</textarea>\\n                </div>\\n                \\n                <div>\\n                    <label class=\\\"block text-sm font-medium text-gray-700\\\">Price</label>\\n                    <input type=\\\"number\\\" name=\\\"price\\\" value=\\\"\").concat(product.price, \"\\\" step=\\\"0.01\\\"\\n                           class=\\\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-500 focus:ring-emerald-500\\\">\\n                </div>\\n                \\n                <div>\\n                    <label class=\\\"block text-sm font-medium text-gray-700 mb-2\\\">Product Image</label>\\n                    <div id=\\\"product-image-container\\\">\\n                        \").concat(product.image_url ? createHeroImageHTML(product.image_url, 'product-image') : createUploadPlaceholderHTML('product-image'), \"\\n                    </div>\\n                    <input type=\\\"file\\\" \\n                           name=\\\"image\\\" \\n                           id=\\\"product-image-upload\\\"\\n                           accept=\\\"image/*\\\"\\n                           class=\\\"hidden\\\">\\n                </div>\\n                \\n                <div class=\\\"flex justify-end space-x-2\\\">\\n                    <button type=\\\"button\\\" class=\\\"cancel-edit px-4 py-2 bg-gray-500 hover:bg-gray-600 text-white rounded transition-colors duration-200\\\">\\n                        Cancel\\n                    </button>\\n                    <button type=\\\"submit\\\" class=\\\"px-4 py-2 bg-emerald-500 hover:bg-emerald-600 text-white rounded transition-colors duration-200\\\">\\n                        Save Changes\\n                    </button>\\n                </div>\\n            </form>\\n        </div>\\n    \");\n}\nfunction createServiceFormHTML(service, serviceId) {\n  return \"\\n        <div id=\\\"edit-form-\".concat(serviceId, \"\\\" class=\\\"border rounded-lg p-4 bg-white shadow-sm\\\">\\n            <form id=\\\"editService\").concat(serviceId, \"\\\" class=\\\"space-y-4\\\">\\n                <div>\\n                    <label class=\\\"block text-sm font-medium text-gray-700\\\">Name</label>\\n                    <input type=\\\"text\\\" name=\\\"name\\\" value=\\\"\").concat(service.name, \"\\\"\\n                           class=\\\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-500 focus:ring-emerald-500\\\">\\n                </div>\\n                \\n                <div>\\n                    <label class=\\\"block text-sm font-medium text-gray-700\\\">Description</label>\\n                    <textarea name=\\\"description\\\" rows=\\\"3\\\"\\n                             class=\\\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-500 focus:ring-emerald-500\\\"\\n                    >\").concat(service.description, \"</textarea>\\n                </div>\\n                \\n                <div>\\n                    <label class=\\\"block text-sm font-medium text-gray-700 mb-2\\\">Service Image</label>\\n                    <div id=\\\"service-image-container\\\">\\n                        \").concat(service.image_url ? createHeroImageHTML(service.image_url, 'service-image') : createUploadPlaceholderHTML('service-image'), \"\\n                    </div>\\n                    <input type=\\\"file\\\" \\n                           name=\\\"image\\\" \\n                           id=\\\"service-image-upload\\\"\\n                           accept=\\\"image/*\\\"\\n                           class=\\\"hidden\\\">\\n                </div>\\n                \\n                <div class=\\\"flex justify-end space-x-2\\\">\\n                    <button type=\\\"button\\\" class=\\\"cancel-edit px-4 py-2 bg-gray-500 hover:bg-gray-600 text-white rounded transition-colors duration-200\\\">\\n                        Cancel\\n                    </button>\\n                    <button type=\\\"submit\\\" class=\\\"px-4 py-2 bg-emerald-500 hover:bg-emerald-600 text-white rounded transition-colors duration-200\\\">\\n                        Save Changes\\n                    </button>\\n                </div>\\n            </form>\\n        </div>\\n    \");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/utils/placeholders.js\n");

/***/ }),

/***/ "./restaurants/static/js/utils/previewUpdates.js":
/*!*******************************************************!*\
  !*** ./restaurants/static/js/utils/previewUpdates.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   smartUpdate: () => (/* binding */ smartUpdate),\n/* harmony export */   updatePreview: () => (/* binding */ updatePreview)\n/* harmony export */ });\n/* harmony import */ var _cookies_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cookies.js */ \"./restaurants/static/js/utils/cookies.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"./restaurants/static/js/utils/errors.js\");\n/* harmony import */ var _components_heroComponents_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/heroComponents.js */ \"./restaurants/static/js/components/heroComponents.js\");\n/* harmony import */ var _cache_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cache.js */ \"./restaurants/static/js/utils/cache.js\");\n/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./debounce.js */ \"./restaurants/static/js/utils/debounce.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\n\n\n\nvar previewCache = new _cache_js__WEBPACK_IMPORTED_MODULE_3__.PreviewCache();\nvar UPDATE_STRATEGIES = {\n  IMMEDIATE: 'immediate',\n  // For critical updates\n  DEBOUNCED: 'debounced',\n  // For text input\n  OPTIMISTIC: 'optimistic',\n  // For simple UI changes\n  COMBINED: 'combined' // For complex updates\n};\nfunction handleImageUpdate(_x, _x2) {\n  return _handleImageUpdate.apply(this, arguments);\n} // Determine which strategy to use based on field type\nfunction _handleImageUpdate() {\n  _handleImageUpdate = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(context, data) {\n    var formData, response, responseData;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('handleImageUpdate called with:', data);\n          if (!data.isImageRemoval) {\n            _context2.next = 8;\n            break;\n          }\n          console.log('Handling image removal');\n          _context2.next = 5;\n          return fetch(\"/\".concat(context.business_subdirectory, \"/remove-hero-image/\"), {\n            method: 'POST',\n            headers: {\n              'X-CSRFToken': (0,_cookies_js__WEBPACK_IMPORTED_MODULE_0__.getCookie)('csrftoken'),\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              page_type: data.page_type,\n              banner_type: data.fieldName,\n              return_preview: true\n            })\n          });\n        case 5:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 8:\n          console.log('Handling image upload');\n          formData = new FormData();\n          formData.append('image', data.value);\n          formData.append('page_type', data.page_type);\n          formData.append('banner_type', data.fieldName);\n          formData.append('return_preview', 'true');\n          _context2.next = 16;\n          return fetch(\"/\".concat(context.business_subdirectory, \"/upload-hero-image/\"), {\n            method: 'POST',\n            headers: {\n              'X-CSRFToken': (0,_cookies_js__WEBPACK_IMPORTED_MODULE_0__.getCookie)('csrftoken')\n            },\n            body: formData\n          });\n        case 16:\n          response = _context2.sent;\n          _context2.next = 19;\n          return response.json();\n        case 19:\n          responseData = _context2.sent;\n          console.log('Upload response:', responseData);\n\n          // Store the image URL in context for the placeholder update\n          if (responseData.success && responseData.image_url) {\n            context.lastUploadedImageUrl = responseData.image_url;\n          }\n\n          // Create a new Response with the same data to maintain compatibility\n          return _context2.abrupt(\"return\", new Response(JSON.stringify(responseData), {\n            status: response.status,\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }));\n        case 23:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _handleImageUpdate.apply(this, arguments);\n}\nfunction getUpdateStrategy(fieldType) {\n  switch (fieldType) {\n    case 'text':\n    case 'input':\n    case 'color':\n      return UPDATE_STRATEGIES.DEBOUNCED;\n    case 'toggle':\n    case 'alignment':\n    case 'font':\n    case 'size':\n    case 'button':\n      return UPDATE_STRATEGIES.OPTIMISTIC;\n    case 'layout':\n    case 'image':\n      return UPDATE_STRATEGIES.COMBINED;\n    case 'preview':\n    case 'load_page':\n    case 'initialize':\n    case 'new_page':\n      return UPDATE_STRATEGIES.IMMEDIATE;\n    default:\n      return UPDATE_STRATEGIES.IMMEDIATE;\n  }\n}\nfunction smartUpdate(_x3, _x4) {\n  return _smartUpdate.apply(this, arguments);\n}\nfunction _smartUpdate() {\n  _smartUpdate = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(context, data) {\n    var strategy;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          strategy = getUpdateStrategy(data.fieldType);\n          _context3.t0 = strategy;\n          _context3.next = _context3.t0 === UPDATE_STRATEGIES.DEBOUNCED ? 4 : _context3.t0 === UPDATE_STRATEGIES.OPTIMISTIC ? 5 : _context3.t0 === UPDATE_STRATEGIES.COMBINED ? 6 : 7;\n          break;\n        case 4:\n          return _context3.abrupt(\"return\", debouncedUpdate(context, data));\n        case 5:\n          return _context3.abrupt(\"return\", optimisticUpdate(context, data));\n        case 6:\n          return _context3.abrupt(\"return\", combinedUpdate(context, data));\n        case 7:\n          return _context3.abrupt(\"return\", immediateUpdate(context, data));\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _smartUpdate.apply(this, arguments);\n}\nvar debouncedUpdate = (0,_debounce_js__WEBPACK_IMPORTED_MODULE_4__.debounce)(/*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(context, data) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return combinedUpdate(context, data);\n        case 3:\n          _context.next = 9;\n          break;\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('Debounced update failed:', _context.t0);\n          (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.displayError)('Failed to update content');\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 5]]);\n  }));\n  return function (_x5, _x6) {\n    return _ref.apply(this, arguments);\n  };\n}(), 500);\nfunction optimisticUpdate(_x7, _x8) {\n  return _optimisticUpdate.apply(this, arguments);\n} // Combined updates (single request for data + preview)\nfunction _optimisticUpdate() {\n  _optimisticUpdate = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(context, data) {\n    var response, responseData, previewContainer, sliderContainer;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log('Attempting optimistic update with data:', data);\n          // Update UI immediately\n          updateLocalUI(data);\n          console.log('Local UI updated');\n          _context4.prev = 3;\n          _context4.next = 6;\n          return fetch(\"/api/\".concat(context.business_subdirectory, \"/layout/update/\"), {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': (0,_cookies_js__WEBPACK_IMPORTED_MODULE_0__.getCookie)('csrftoken')\n            },\n            body: JSON.stringify(_objectSpread(_objectSpread({}, data), {}, {\n              return_preview: true // Request preview HTML\n            }))\n          });\n        case 6:\n          response = _context4.sent;\n          if (response.ok) {\n            _context4.next = 9;\n            break;\n          }\n          throw new Error('Server update failed');\n        case 9:\n          _context4.next = 11;\n          return response.json();\n        case 11:\n          responseData = _context4.sent;\n          if (responseData.preview_html) {\n            previewContainer = document.getElementById('preview-container');\n            if (previewContainer) {\n              previewContainer.innerHTML = responseData.preview_html;\n              sliderContainer = document.querySelector('.slider-container');\n              if (sliderContainer) {\n                (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_2__.reinitializeSlider)(sliderContainer);\n              }\n            }\n          }\n          return _context4.abrupt(\"return\", responseData);\n        case 16:\n          _context4.prev = 16;\n          _context4.t0 = _context4[\"catch\"](3);\n          // Revert UI on error\n          revertLocalUI(data);\n          throw _context4.t0;\n        case 20:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[3, 16]]);\n  }));\n  return _optimisticUpdate.apply(this, arguments);\n}\nfunction combinedUpdate(_x9, _x10) {\n  return _combinedUpdate.apply(this, arguments);\n}\nfunction _combinedUpdate() {\n  _combinedUpdate = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(context, data) {\n    var response, responseData, previewContainer;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          if (!(data.fieldType === 'image')) {\n            _context5.next = 8;\n            break;\n          }\n          console.log('handleimageupdate');\n          _context5.next = 5;\n          return handleImageUpdate(context, data);\n        case 5:\n          response = _context5.sent;\n          _context5.next = 12;\n          break;\n        case 8:\n          console.log('Sending combined update request:', data); // Debug log\n          _context5.next = 11;\n          return fetch(\"/api/\".concat(context.business_subdirectory, \"/layout/update/\"), {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': (0,_cookies_js__WEBPACK_IMPORTED_MODULE_0__.getCookie)('csrftoken')\n            },\n            body: JSON.stringify(_objectSpread(_objectSpread({}, data), {}, {\n              return_preview: true\n            }))\n          });\n        case 11:\n          response = _context5.sent;\n        case 12:\n          if (response.ok) {\n            _context5.next = 14;\n            break;\n          }\n          throw new Error('Server update failed');\n        case 14:\n          _context5.next = 16;\n          return response.json();\n        case 16:\n          responseData = _context5.sent;\n          console.log('Combined update response:', responseData); // Debug log\n\n          if (responseData.preview_html) {\n            previewContainer = document.getElementById('preview-container');\n            console.log('Preview container found:', !!previewContainer); // Debug log\n            if (previewContainer) {\n              previewContainer.innerHTML = responseData.preview_html;\n              console.log('Preview container updated');\n              setTimeout(function () {\n                var sliderContainer = document.querySelector('.slider-container');\n                if (sliderContainer) {\n                  (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_2__.reinitializeSlider)(sliderContainer);\n                }\n              }, 0);\n            }\n          } else {\n            console.log('No preview HTML in response'); // Debug log\n          }\n          return _context5.abrupt(\"return\", responseData);\n        case 22:\n          _context5.prev = 22;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error('Combined update failed:', _context5.t0);\n          throw _context5.t0;\n        case 26:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[0, 22]]);\n  }));\n  return _combinedUpdate.apply(this, arguments);\n}\nfunction immediateUpdate(_x11, _x12) {\n  return _immediateUpdate.apply(this, arguments);\n} // Helper functions\n// function showSuccessAlert(message) {\n//     const alertDiv = document.createElement('div');\n//     alertDiv.className = 'fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded z-50';\n//     alertDiv.role = 'alert';\n//     alertDiv.innerHTML = `\n//         <strong class=\"font-bold\">Success!</strong>\n//         <span class=\"block sm:inline\"> ${message}</span>\n//     `;\n//     document.body.appendChild(alertDiv);\n//     setTimeout(() => alertDiv.remove(), 3000);\n// }\nfunction _immediateUpdate() {\n  _immediateUpdate = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(context, data) {\n    var responseData, response, previewResponse, _response;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          console.log('Performing immediate update with:', data);\n          if (!(data.fieldType === 'initialize' || data.fieldType === 'load_page')) {\n            _context6.next = 21;\n            break;\n          }\n          _context6.next = 5;\n          return fetch(\"/\".concat(context.business_subdirectory, \"/get-page-data/\").concat(data.page_type, \"/\"));\n        case 5:\n          response = _context6.sent;\n          if (response.ok) {\n            _context6.next = 8;\n            break;\n          }\n          throw new Error('Failed to load page data');\n        case 8:\n          _context6.next = 10;\n          return response.json();\n        case 10:\n          responseData = _context6.sent;\n          if (!data.return_preview) {\n            _context6.next = 19;\n            break;\n          }\n          _context6.next = 14;\n          return fetch(\"/\".concat(context.business_subdirectory, \"/preview-page/\").concat(data.page_type, \"/\"), {\n            headers: {\n              'Cache-Control': 'no-cache',\n              'Pragma': 'no-cache',\n              'Accept': 'text/html'\n            }\n          });\n        case 14:\n          previewResponse = _context6.sent;\n          if (!previewResponse.ok) {\n            _context6.next = 19;\n            break;\n          }\n          _context6.next = 18;\n          return previewResponse.text();\n        case 18:\n          responseData.preview_html = _context6.sent;\n        case 19:\n          _context6.next = 29;\n          break;\n        case 21:\n          _context6.next = 23;\n          return fetch(\"/api/\".concat(context.business_subdirectory, \"/layout/update/\"), {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': (0,_cookies_js__WEBPACK_IMPORTED_MODULE_0__.getCookie)('csrftoken')\n            },\n            body: JSON.stringify(_objectSpread(_objectSpread({}, data), {}, {\n              return_preview: true\n            }))\n          });\n        case 23:\n          _response = _context6.sent;\n          if (_response.ok) {\n            _context6.next = 26;\n            break;\n          }\n          throw new Error(data.fieldType === 'new_page' ? 'Failed to create new page' : 'Server update failed');\n        case 26:\n          _context6.next = 28;\n          return _response.json();\n        case 28:\n          responseData = _context6.sent;\n        case 29:\n          // Unified preview update logic\n          if (responseData.preview_html) {\n            updatePreviewContent(responseData.preview_html);\n          }\n          return _context6.abrupt(\"return\", responseData);\n        case 33:\n          _context6.prev = 33;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error('Immediate update failed:', _context6.t0);\n          (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.displayError)('Failed to update content');\n          throw _context6.t0;\n        case 38:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[0, 33]]);\n  }));\n  return _immediateUpdate.apply(this, arguments);\n}\nfunction updatePageSelector(pageType) {\n  var pageSelector = document.getElementById('page-selector');\n  if (pageSelector) {\n    pageSelector.value = pageType;\n    pageSelector.dispatchEvent(new Event('change'));\n  }\n}\nfunction updatePreviewContent(previewHtml) {\n  var previewContainer = document.getElementById('preview-container');\n  if (previewContainer) {\n    previewContainer.innerHTML = previewHtml;\n    (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_2__.reinitializeSlider)();\n  }\n}\n\n// Helper functions for optimistic updates\nfunction updateLocalUI(data) {\n  console.log('Updating local UI with:', data);\n  switch (data.fieldType) {\n    case 'text':\n      var textElement = document.getElementById(data.fieldName);\n      if (textElement) textElement.value = data.value;\n      break;\n    case 'color':\n      var colorElement = document.getElementById(data.fieldName);\n      if (colorElement) {\n        colorElement.value = data.value;\n        // Update any preview elements that use this color\n        var previewElements = document.querySelectorAll(\"[data-preview-color=\\\"\".concat(data.fieldName, \"\\\"]\"));\n        previewElements.forEach(function (element) {\n          if (element.tagName.toLowerCase() === 'input') {\n            element.value = data.value;\n          } else {\n            element.style.color = data.value;\n          }\n        });\n      }\n      break;\n    case 'font':\n      var fontElement = document.getElementById(data.fieldName);\n      if (fontElement) {\n        fontElement.value = data.value;\n        // Update any preview elements that use this font\n        var fontPreviewElements = document.querySelectorAll(\"[data-preview-font=\\\"\".concat(data.fieldName, \"\\\"]\"));\n        fontPreviewElements.forEach(function (element) {\n          element.style.fontFamily = data.value;\n        });\n      }\n      break;\n    case 'size':\n      var sizeElement = document.getElementById(data.fieldName);\n      if (sizeElement) {\n        sizeElement.value = data.value;\n        // Update any preview elements that use this size\n        var sizePreviewElements = document.querySelectorAll(\"[data-preview-size=\\\"\".concat(data.fieldName, \"\\\"]\"));\n        sizePreviewElements.forEach(function (element) {\n          element.style.fontSize = data.value;\n        });\n      }\n      break;\n    case 'toggle':\n      var toggleElement = document.getElementById(data.fieldName);\n      if (toggleElement) toggleElement.checked = data.value;\n      break;\n    case 'alignment':\n      var alignmentRadio = document.querySelector(\"input[name=\\\"\".concat(data.fieldName, \"\\\"][value=\\\"\").concat(data.value, \"\\\"]\"));\n      if (alignmentRadio) alignmentRadio.checked = true;\n      break;\n    case 'button':\n      var buttonElement = document.getElementById(data.fieldName);\n      if (buttonElement) {\n        if (data.fieldName.includes('color')) {\n          buttonElement.value = data.value;\n          // Update button preview styles\n          var buttonPreview = document.querySelector(\"[data-preview-button=\\\"\".concat(data.fieldName, \"\\\"]\"));\n          if (buttonPreview) {\n            if (data.fieldName.includes('bg')) {\n              buttonPreview.style.backgroundColor = data.value;\n            } else if (data.fieldName.includes('text')) {\n              buttonPreview.style.color = data.value;\n            } else if (data.fieldName.includes('border')) {\n              buttonPreview.style.borderColor = data.value;\n            }\n          }\n        } else {\n          buttonElement.value = data.value;\n        }\n      }\n      break;\n  }\n}\nfunction revertLocalUI(data) {\n  console.log('Reverting local UI with:', data);\n  switch (data.fieldType) {\n    case 'text':\n    case 'color':\n    case 'font':\n    case 'size':\n      var element = document.getElementById(data.fieldName);\n      if (element) element.value = data.previousValue;\n      break;\n    case 'toggle':\n      var toggleElement = document.getElementById(data.fieldName);\n      if (toggleElement) toggleElement.checked = data.previousValue;\n      break;\n    case 'alignment':\n      var alignmentRadio = document.querySelector(\"input[name=\\\"\".concat(data.fieldName, \"\\\"][value=\\\"\").concat(data.previousValue, \"\\\"]\"));\n      if (alignmentRadio) alignmentRadio.checked = true;\n      break;\n    case 'button':\n      var buttonElement = document.getElementById(data.fieldName);\n      if (buttonElement) buttonElement.value = data.previousValue;\n      break;\n  }\n\n  // Revert any preview elements\n  var previewElements = document.querySelectorAll(\"[data-preview-\".concat(data.fieldType, \"=\\\"\").concat(data.fieldName, \"\\\"]\"));\n  previewElements.forEach(function (element) {\n    switch (data.fieldType) {\n      case 'color':\n        element.style.color = data.previousValue;\n        break;\n      case 'font':\n        element.style.fontFamily = data.previousValue;\n        break;\n      case 'size':\n        element.style.fontSize = data.previousValue;\n        break;\n      case 'button':\n        if (data.fieldName.includes('bg')) {\n          element.style.backgroundColor = data.previousValue;\n        } else if (data.fieldName.includes('text')) {\n          element.style.color = data.previousValue;\n        } else if (data.fieldName.includes('border')) {\n          element.style.borderColor = data.previousValue;\n        }\n        break;\n    }\n  });\n}\n\n// old updatePreview function\nfunction updatePreview(_x13, _x14) {\n  return _updatePreview.apply(this, arguments);\n}\n\n// Optional: Add function for specific component updates\n// export async function updateComponentPreview(component, value, context) {\n//     try {\n//         const response = await fetch(`/${context.business_subdirectory}/preview-component/`, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'X-CSRFToken': getCookie('csrftoken'),\n//             },\n//             body: JSON.stringify({\n//                 component,\n//                 value,\n//                 page_type: context.pageSelector.value\n//             })\n//         });\n\n//         if (!response.ok) {\n//             throw new Error('Failed to update component preview');\n//         }\n\n//         const data = await response.json();\n//         if (!data.success) {\n//             throw new Error(data.error || 'Component preview update failed');\n//         }\n\n//         // Find all elements that might contain this component's content\n//         const componentElements = document.querySelectorAll(`[data-component=\"${component}\"]`);\n//         componentElements.forEach(element => {\n//             // Preserve the element's attributes and only update its text content\n//             if (data.text) {\n//                 // Keep the element's HTML structure but update text\n//                 const currentHTML = element.innerHTML;\n//                 const wrapper = document.createElement('div');\n//                 wrapper.innerHTML = currentHTML;\n\n//                 // Find the text node and update it\n//                 const textNodes = Array.from(wrapper.childNodes).filter(node => \n//                     node.nodeType === Node.TEXT_NODE\n//                 );\n//                 if (textNodes.length > 0) {\n//                     textNodes[0].textContent = data.text;\n//                 } else {\n//                     // If no text node exists, create one\n//                     element.textContent = data.text;\n//                 }\n//             } else if (value) {\n//                 element.textContent = value;\n//             }\n//         });\n\n//     } catch (error) {\n//         console.error('Error updating component preview:', error);\n//         displayError('Failed to update component preview');\n//         throw error;\n//     }\n// }\nfunction _updatePreview() {\n  _updatePreview = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(pageType, context) {\n    var isInitialLoad,\n      _previewContainer,\n      response,\n      previewContainer,\n      sliderContainer,\n      _args7 = arguments;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          isInitialLoad = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : false;\n          if (!(!pageType || !(context !== null && context !== void 0 && context.business_subdirectory))) {\n            _context7.next = 4;\n            break;\n          }\n          console.error('Missing required parameters:', {\n            pageType: pageType,\n            context: context\n          });\n          throw new Error('Missing required parameters for preview update');\n        case 4:\n          _context7.prev = 4;\n          if (!(isInitialLoad && context.initialHtml)) {\n            _context7.next = 12;\n            break;\n          }\n          _previewContainer = document.getElementById('preview-container');\n          if (_previewContainer) {\n            _context7.next = 9;\n            break;\n          }\n          throw new Error('Preview container not found in DOM');\n        case 9:\n          _previewContainer.innerHTML = context.initialHtml;\n          (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_2__.reinitializeSlider)();\n          return _context7.abrupt(\"return\", true);\n        case 12:\n          _context7.next = 14;\n          return smartUpdate(context, {\n            fieldType: 'preview',\n            page_type: pageType,\n            return_preview: true\n          });\n        case 14:\n          response = _context7.sent;\n          previewContainer = document.getElementById('preview-container');\n          if (previewContainer) {\n            _context7.next = 18;\n            break;\n          }\n          throw new Error('Preview container not found in DOM');\n        case 18:\n          // Update the preview content\n          if (response.preview_html) {\n            previewContainer.innerHTML = response.preview_html;\n            sliderContainer = previewContainer.querySelector('.slider-container');\n            if (sliderContainer && !isInitialLoad) {\n              (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_2__.handleBannerSliderVisibility)('banner-slider');\n            } else {\n              (0,_components_heroComponents_js__WEBPACK_IMPORTED_MODULE_2__.reinitializeSlider)();\n            }\n          }\n          return _context7.abrupt(\"return\", true);\n        case 22:\n          _context7.prev = 22;\n          _context7.t0 = _context7[\"catch\"](4);\n          console.error('Preview update error:', {\n            message: _context7.t0.message,\n            context: context,\n            pageType: pageType\n          });\n          (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.displayError)(\"Preview update failed: \".concat(_context7.t0.message));\n          throw _context7.t0;\n        case 27:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[4, 22]]);\n  }));\n  return _updatePreview.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./restaurants/static/js/utils/previewUpdates.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./restaurants/static/js/layoutEditor.js");
/******/ 	
/******/ })()
;